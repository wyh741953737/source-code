(window["webpackJsonp"] = window["webpackJsonp"] || []).push([[12],{

/***/ "../src/pages/mycj/accountManage/accountManage.js":
/*!********************************************************!*\
  !*** ../src/pages/mycj/accountManage/accountManage.js ***!
  \********************************************************/
/*! exports provided: accountManageFactory */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"accountManageFactory\", function() { return accountManageFactory; });\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _iterableToArray(iter) { if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction accountManageFactory(angular) {\n  // 账号管理\n  var app = angular.module('mycj-accountManage.module', ['service']);\n  app.controller('mycj-accountManage.ctrl', ['$rootScope', '$scope', 'dsp', '$stateParams', 'utils', function ($rootScope, $scope, dsp, $stateParams, utils) {\n    console.log('******************* => 账号管理', $rootScope.userInfo.vip);\n    var PwdReq = /^(?=(.*[A-Za-z]){1,})(?=(.*[\\d]){1,})(?=(.*[\\W_]){1,})(?!.*\\s).{8,15}$/;\n    $scope.statusList = {\n      enable: {\n        name: 'enable',\n        cn: '启用',\n        en: 'Enabled',\n        type: 1\n      },\n      disable: {\n        name: 'disable',\n        cn: '禁用',\n        en: 'Disabled',\n        type: 2\n      }\n    };\n    $scope.showConfirmFlag = false; //禁用启用弹窗flag  \n\n    $scope.showAddFlag = false; //新增弹窗flag\n\n    $scope.showUpdFlag = false; //修改密码弹窗flag\n\n    $scope.editFlag = false; //是否处于编辑状态flag\n\n    $scope.roleList = {\n      administrator: _defineProperty({\n        name: 'administrator',\n        type: 1,\n        cn: '管理员'\n      }, \"cn\", 'Administrator'),\n      employee: _defineProperty({\n        name: 'employee',\n        type: 2,\n        cn: '员工'\n      }, \"cn\", 'Employee')\n    };\n    $scope.initialMenu = []; //初始菜单\n\n    $scope.allMenu = []; //组装过后的所有权限菜单\n\n    $scope.searchName = ''; //搜索 - 姓名\n\n    $scope.searchUserName = ''; //搜索 - 登录名\n\n    $scope.searchStatus = null; //搜索 - 状态 1启用 2停用\n\n    $scope.searchRole = null; //搜索 - 角色类别  3 All  1管理员 2员工\n\n    $scope.accountList = [];\n    var maxAdminLen = 3;\n    var maxEmployeeLen = 27;\n    $scope.searchRoleList = [{\n      key: 1,\n      name: 'All roles',\n      role: ''\n    }, {\n      key: 2,\n      name: 'Administrator',\n      role: 1\n    }, {\n      key: 3,\n      name: 'Employee',\n      role: 2\n    }];\n    $scope.searchStatusList = [{\n      key: 1,\n      name: 'All status',\n      role: ''\n    }, {\n      key: 2,\n      name: 'Disabled',\n      role: 2\n    }, {\n      key: 3,\n      name: 'Enabled',\n      role: 1\n    }];\n    /** 选择走索role */\n\n    $scope.selectRole = function (key) {\n      $scope.searchRole = key;\n    };\n\n    $scope.selectStatus = function (key) {\n      $scope.searchStatus = key;\n    };\n\n    var base64 = new Base64();\n    var isNotErpAdmin = base64.decode(localStorage.getItem('erpoperateuser') || '') != 'admin';\n    var isFromErp = encodeURIComponent(localStorage.getItem('loginfromerp') || '') == '1';\n    $scope.fromErpNotAdmin = isNotErpAdmin && isFromErp; //获取所有菜单\n\n    getAllMenu();\n\n    function getAllMenu() {\n      optAjaxFn({\n        url: 'app/subAccount/getAllMenu',\n        successFn: function successFn(res) {\n          $scope.initialMenu = res;\n          res.forEach(function (item) {\n            if (+item.parentId === 0) {\n              //一级菜单\n              $scope.allMenu = [].concat(_toConsumableArray($scope.allMenu), [_objectSpread(_objectSpread({}, item), {}, {\n                children: []\n              })]);\n            } else {\n              $scope.allMenu = $scope.allMenu.map(function (_item) {\n                if (+_item.id === +item.parentId && item.code !== 'Amazon' && item.code !== 'Amazon FBA') {\n                  _item.children.push(item);\n                }\n\n                return _item;\n              });\n            }\n          });\n          $scope.allMenu = $scope.allMenu.map(function (item) {\n            item.checked = false;\n            item.children = item.children.map(function (child) {\n              child.checked = false;\n              return child;\n            });\n            return item;\n          });\n          console.log($scope.allMenu);\n        }\n      });\n    } //获取主账号下的所以子账号列表\n\n\n    getList();\n\n    function getList() {\n      var params = {\n        name: $scope.searchName,\n        loginName: $scope.searchUserName,\n        status: $scope.searchStatus ? $scope.searchStatusList[+$scope.searchStatus - 1].role : '',\n        codStatus: $scope.searchRole ? $scope.searchRoleList[+$scope.searchRole - 1].role : ''\n      };\n      optAjaxFn({\n        url: 'app/subAccount/getAllSubAccountInfo',\n        params: params,\n        layer: 1,\n        successFn: function successFn(res) {\n          $scope.accountList = res;\n          dsp.removeNodataPic($('.account-manage-list'));\n          $scope.accountList.length === 0 && dsp.addNodataPic($('.account-manage-list'), 460, 47, 0);\n        }\n      });\n    } //搜索\n\n\n    $scope.searchFn = function (_) {\n      return getList();\n    }; //重置搜索条件\n\n\n    $scope.resetFn = function (_) {\n      $scope.searchName = '';\n      $scope.searchUserName = '';\n      $scope.searchStatus = null;\n      $scope.searchRole = null;\n      getList();\n    };\n    /** 新增子账号 模块 */\n    //打开新增弹窗并数据初始化\n\n\n    $scope.openAdd = function () {\n      if ($scope.fromErpNotAdmin) {\n        layer.msg('You cannot edit it.');\n        return;\n      }\n\n      $scope.showAddFlag = true;\n      $scope.addItem = {\n        role: $scope.roleList.administrator.type,\n        //角色  administrator 管理员  employee 员工\n        name: '',\n        //姓名\n        userName: '',\n        //用户名\n        password: '',\n        //密码\n        confirmPassword: '',\n        //确认密码\n        menu: JSON.parse(JSON.stringify($scope.allMenu)).map(function (item) {\n          //963 968\n          if (item.id === 963 || item.id === 981) item.children = item.children.map(function (child) {\n            if (child.id === 968 || child.id === 982) child.checked = true;\n            return child;\n          });\n          return item;\n        })\n      };\n      $scope.passwordErrMsg = '';\n      $scope.passwordConfirmErrMsg = '';\n      $scope.nameErrMsg = '';\n      $scope.userNameErrMsg = '';\n      $scope.addErrorFlag = '';\n      $scope.permissionErrMsg = '';\n      judgeRoleLen($scope.addItem.role);\n    }; //切换角色\n\n\n    $scope.changeAddRole = function (role) {\n      $scope.addItem.role = $scope.roleList[role].type;\n      judgeRoleLen($scope.addItem.role);\n    }; // 禁止username输入空格\n\n\n    $scope.handdleChangeUserName = function (val) {\n      if (!/^\\S*$/.test(val)) {\n        layer.msg('Invalid user name. Remove the space.');\n      } else {\n        $scope.userNameErrMsg = '';\n      }\n    }; //员工权限 - 全选\n\n\n    $scope.addCheckAll = function (id) {\n      return $scope.addItem.menu = checkALLFn($scope.addItem.menu, id);\n    }; //员工权限 - 单选\n\n\n    $scope.addCheckOne = function (id, parentId) {\n      return $scope.addItem.menu = checkOneFn($scope.addItem.menu, id, parentId);\n    }; //验证邮箱\n\n\n    $scope.verifyPwd = function (pwd) {\n      if (!pwd) {\n        $scope.passwordErrMsg = 'Please enter the password.';\n      } else if (!PwdReq.test(pwd)) {\n        $scope.passwordErrMsg = 'Password must be at least 8-15 characters long, including letters, numbers and special characters.';\n      } else {\n        $scope.passwordErrMsg = '';\n      }\n    }; //验证确认密码\n\n\n    $scope.verifyConfirmPwd = function (cfpwd, pwd) {\n      if (!cfpwd) {\n        $scope.passwordConfirmErrMsg = 'Please enter the confirm password.';\n      } else if (cfpwd !== pwd) {\n        $scope.passwordConfirmErrMsg = 'Two password must match';\n      } else {\n        $scope.passwordConfirmErrMsg = '';\n      }\n    }; //姓名非空判断\n\n\n    $scope.verifyName = function (_) {\n      $scope.nameErrMsg = !$scope.addItem.name ? 'Please enter the name.' : '';\n\n      if (/\\w+([-+.]\\w+)*@\\w+([-.]\\w+)*\\.\\w+([-.]\\w+)*/.test($scope.addItem.name)) {\n        $scope.nameErrMsg = 'Email is not allowed for user name.';\n      }\n    }; //登录名非空判断\n\n\n    $scope.verifyUserName = function (_) {\n      $scope.userNameErrMsg = !$scope.addItem.userName ? 'Please enter the user name.' : '';\n\n      if (!/^\\S*$/.test($scope.addItem.userName)) {\n        $scope.userNameErrMsg = 'Invalid user name. Remove the space.';\n      } else if (/\\w+([-+.]\\w+)*@\\w+([-.]\\w+)*\\.\\w+([-.]\\w+)*/.test($scope.addItem.userName)) {\n        $scope.userNameErrMsg = 'Email is not allowed for user name.';\n      } else {\n        $scope.userNameErrMsg = '';\n      }\n    }; //权限判空\n\n\n    $scope.verifyPermission = function (role, list) {\n      $scope.permissionErrMsg = disposePermissionFn(role, list).length > 0 ? '' : 'Please select at least one permission';\n    }; //确认新增\n\n\n    $scope.confirmAdd = function () {\n      if (!$scope.addErrorFlag) {\n        $scope.verifyName();\n        $scope.verifyUserName();\n        $scope.verifyPwd($scope.addItem.password);\n        $scope.verifyConfirmPwd($scope.addItem.confirmPassword, $scope.addItem.password);\n        $scope.verifyPermission($scope.addItem.role, $scope.addItem.menu);\n\n        if (!$scope.nameErrMsg && !$scope.userNameErrMsg && !$scope.passwordConfirmErrMsg && !$scope.passwordErrMsg && !$scope.permissionErrMsg) {\n          var params = {\n            name: $scope.addItem.name,\n            loginName: $scope.addItem.userName,\n            password: $scope.addItem.password,\n            password2: $scope.addItem.confirmPassword,\n            codStatus: $scope.addItem.role,\n            menuIds: disposePermissionFn($scope.addItem.role, $scope.addItem.menu).join()\n          };\n          optAjaxFn({\n            url: 'app/subAccount/insertSubAccount',\n            params: params,\n            layer: 2,\n            layerLeft: true,\n            successFn: function successFn(res) {\n              layer.msg('The new subaccount was successfully added');\n              $scope.showAddFlag = false;\n              getList();\n            },\n            errFn: function errFn(_ref) {\n              var statusCode = _ref.statusCode;\n              return layer.msg(statusCode === '202' ? 'The user name already exists' : statusCode === '302' || statusCode === '303' ? \"here are \".concat(statusCode === '302' ? '3 administrator' : '27 employee', \" accounts already, and no more \").concat(statusCode === '302' ? 'administrator' : 'employee', \" accounts can be added.\") : statusCode === '501' ? 'The user name already exists.' : statusCode === '502' ? 'Email is not allowed for user name.' : 'Failed to add a child account');\n            }\n          });\n        }\n      }\n    };\n    /** 新增子账号 模块结束 */\n\n    /** 禁用启用 模块 */\n\n\n    $scope.changeStatusFn = function (status, account) {\n      //打开禁用启用confirm弹窗\n      console.log(account, status);\n      var id = account.id,\n          codStatus = account.codStatus;\n      var adminLen = $scope.accountList.filter(function (item) {\n        return +item.codStatus === $scope.roleList.administrator.type && +item.status === $scope.statusList.enable.type;\n      }).length; //已有管理员数量\n\n      var employeeLen = $scope.accountList.filter(function (item) {\n        return +item.codStatus === $scope.roleList.employee.type && +item.status === $scope.statusList.enable.type;\n      }).length; //已有员工数量\n\n      if (status === 'enable' && codStatus === $scope.roleList.administrator.type && adminLen === maxAdminLen) {\n        layer.msg('here are 3 administrator accounts already, and no more administrator accounts can be enabled');\n      } else if (status === 'enable' && codStatus === $scope.roleList.employee.type && employeeLen === maxEmployeeLen) {\n        layer.msg('here are 27 employee accounts already, and no more employee accounts can be enabled');\n      } else {\n        $scope.showConfirmFlag = true;\n        $scope.showConfirmItem = {\n          id: id,\n          status: status\n        };\n      }\n    };\n\n    $scope.confirmStatus = function (_) {\n      //确认禁用启用\n      var params = {\n        id: $scope.showConfirmItem.id,\n        status: $scope.statusList[$scope.showConfirmItem.status].type\n      };\n      optAjaxFn({\n        url: 'app/subAccount/updateStatus',\n        params: params,\n        layer: 2,\n        successFn: function successFn(res) {\n          layer.msg(\"\".concat($scope.statusList[$scope.showConfirmItem.status].en, \" the success\"));\n          $scope.showConfirmFlag = false;\n          $scope.accountList = $scope.accountList.map(function (item) {\n            if (item.id === params.id) item.status = params.status;\n            return item;\n          });\n        },\n        errFn: function errFn(_) {\n          layer.msg(\"\".concat($scope.statusList[$scope.showConfirmItem.status].en, \" the failure\"));\n          $scope.showConfirmFlag = false;\n        }\n      });\n    };\n    /** 禁用启用 模块结束 */\n\n    /** 修改密码 模块 */\n    //打开修改密码弹窗并数据初始化\n\n\n    $scope.openUpdPwd = function (id) {\n      $scope.showUpdFlag = true;\n      $scope.updItem = {\n        id: id,\n        updPassword: '',\n        updConfirmPassword: ''\n      };\n      $scope.passwordErrMsg = '';\n      $scope.passwordConfirmErrMsg = '';\n    }; //确认修改密码\n\n\n    $scope.confirmUpt = function (_) {\n      $scope.verifyPwd($scope.updItem.updPassword);\n      $scope.verifyConfirmPwd($scope.updItem.updConfirmPassword, $scope.updItem.updPassword);\n\n      if (!$scope.passwordConfirmErrMsg && !$scope.passwordErrMsg) {\n        var params = {\n          id: $scope.updItem.id,\n          password: $scope.updItem.updPassword,\n          password2: $scope.updItem.updConfirmPassword\n        };\n        optAjaxFn({\n          url: 'app/subAccount/updatePassword',\n          params: params,\n          layer: 2,\n          successFn: function successFn(_) {\n            layer.msg('Password change successful');\n            $scope.showUpdFlag = false;\n          },\n          errFn: function errFn(_) {\n            layer.msg('Password change failed');\n            $scope.showUpdFlag = false;\n          }\n        });\n      }\n    };\n    /** 修改密码 模块结束 */\n\n    /** 编辑 模块 */\n    //打开编辑并获取子账号信息\n\n\n    $scope.openEdit = function (id) {\n      optAjaxFn({\n        url: 'app/subAccount/getSubAccountInfo',\n        params: {\n          id: id\n        },\n        layer: 2,\n        successFn: function successFn(_ref2) {\n          var menus = _ref2.menus,\n              user = _ref2.user;\n          var checkedList = [];\n          menus.forEach(function (_) {\n            _.checked && checkedList.push(_.id);\n          });\n          $scope.editItem = {\n            //编辑\n            id: user.id,\n            //子账号id\n            role: user.codStatus,\n            //角色  administrator 管理员  employee 员工\n            name: user.name,\n            //姓名\n            userName: user.loginName,\n            //用户名\n            status: user.status,\n            //账号状态\n            date: user.createDate,\n            //创建日期 / 修改日期\n            menu: JSON.parse(JSON.stringify($scope.allMenu)).map(function (item) {\n              item.children = item.children.map(function (child) {\n                child.checked = checkedList.includes(child.id);\n                return child;\n              });\n              item.checked = item.children.filter(function (_) {\n                return _.checked;\n              }).length === item.children.length;\n              return item;\n            })\n          };\n          $scope.oldRole = user.codStatus;\n          $scope.editErrorFlag = false;\n          $scope.editFlag = true;\n          $scope.editPermissionErrFlag = false;\n        }\n      });\n    }; //修改角色种类\n\n\n    $scope.changeEditRole = function (role) {\n      $scope.editItem.role = $scope.roleList[role].type;\n      judgeRoleLen($scope.editItem.role);\n      $scope.editErrorFlag = $scope.editItem.role !== $scope.oldRole && $scope.addErrorFlag;\n    }; //编辑 - 权限 - 全选\n\n\n    $scope.editCheckAll = function (id) {\n      return $scope.editItem.menu = checkALLFn($scope.editItem.menu, id);\n    }; //编辑 - 权限 - 单选\n\n\n    $scope.editCheckOne = function (id, parentId) {\n      return $scope.editItem.menu = checkOneFn($scope.editItem.menu, id, parentId);\n    }; //编辑 - 确认编辑\n\n\n    $scope.confirmEdit = function (_) {\n      $scope.editPermissionErrFlag = !disposePermissionFn($scope.editItem.role, $scope.editItem.menu).length > 0;\n\n      if (!$scope.editErrorFlag && !$scope.editPermissionErrFlag) {\n        var params = {\n          id: $scope.editItem.id,\n          codStatus: $scope.editItem.role,\n          menuIds: disposePermissionFn($scope.editItem.role, $scope.editItem.menu).join()\n        };\n        optAjaxFn({\n          url: 'app/subAccount/updateMenusIds',\n          params: params,\n          layer: 2,\n          successFn: function successFn(res) {\n            layer.msg('Successfully modified');\n            $scope.editFlag = false;\n            getList();\n          },\n          errFn: function errFn(_ref3) {\n            var statusCode = _ref3.statusCode;\n            return layer.msg(statusCode === '302' || statusCode === '303' ? \"here are \".concat(statusCode === '302' ? '3 administrator' : '27 employee', \" accounts already, and no more \").concat(statusCode === '302' ? 'administrator' : 'employee', \" accounts can be added.\") : 'Failed to add a child account');\n          }\n        });\n      }\n    };\n    /** 编辑 模块结束 */\n    //公用 - 全选\n\n\n    function checkALLFn(list, id) {\n      return list.map(function (item) {\n        if (item.id === id) {\n          item.checked = !item.checked;\n          item.children = item.children.map(function (child) {\n            child.checked = item.checked;\n            return child;\n          });\n        }\n\n        return item;\n      });\n    } //公用 - 单选\n\n\n    function checkOneFn(list, id, parentId) {\n      return list.map(function (item) {\n        if (item.id === parentId) {\n          item.children = item.children.map(function (child) {\n            if (child.id === id) child.checked = !child.checked;\n            return child;\n          });\n          item.checked = item.children.filter(function (_) {\n            return _.checked;\n          }).length === item.children.length;\n        }\n\n        return item;\n      });\n    } //公用 - 处理权限数据\n\n\n    function disposePermissionFn(role, list) {\n      var ids = [];\n\n      if (role === $scope.roleList.administrator.type) {\n        //新增管理员 拥有所有权限\n        $scope.initialMenu.forEach(function (item) {\n          return ids.push(item.id);\n        });\n      } else {\n        //普通员工\n        list.forEach(function (item) {\n          var childCheckedList = item.children.filter(function (_) {\n            return _.checked;\n          });\n\n          if (childCheckedList.length > 0) {\n            ids.push(item.id);\n            childCheckedList.forEach(function (_) {\n              return ids.push(_.id);\n            });\n          }\n        });\n      }\n\n      return ids;\n    } //对新增窗口 name Input 的placeholder文案进行处理\n\n\n    $scope.disposeInputPlaceHolder = function (role) {\n      return \"Please input \".concat(role === $scope.roleList.administrator.type ? 'administrator' : 'employee', \"'s name\");\n    }; //公用 - 对增角色进行数量判断\n\n\n    function judgeRoleLen(role) {\n      var adminLen = $scope.accountList.filter(function (item) {\n        return +item.codStatus === $scope.roleList.administrator.type && +item.status === $scope.statusList.enable.type;\n      }).length; //已有管理员数量\n\n      var employeeLen = $scope.accountList.filter(function (item) {\n        return +item.codStatus === $scope.roleList.employee.type && +item.status === $scope.statusList.enable.type;\n      }).length; //已有员工数量\n\n      $scope.addErrorFlag = role === $scope.roleList.administrator.type && adminLen >= maxAdminLen || role === $scope.roleList.employee.type && employeeLen >= maxEmployeeLen;\n    } //封装请求\n\n\n    function optAjaxFn(_ref4) {\n      var _ref4$params = _ref4.params,\n          params = _ref4$params === void 0 ? {} : _ref4$params,\n          url = _ref4.url,\n          successFn = _ref4.successFn,\n          _ref4$errFn = _ref4.errFn,\n          errFn = _ref4$errFn === void 0 ? function (_) {\n        return dsp.cjMesFun(1);\n      } : _ref4$errFn,\n          layer = _ref4.layer,\n          layerLeft = _ref4.layerLeft;\n\n      if (layer) {\n        layer === 1 ? dsp.loadPercent($('.account-manage-list'), $(window).height() - 400, 47, 0) : dsp.load(layerLeft);\n      }\n\n      dsp.postFun(url, params, function (_ref5) {\n        var data = _ref5.data;\n        var statusCode = data.statusCode,\n            result = data.result;\n\n        if (layer) {\n          layer === 1 ? dsp.closeLoadPercent($('.account-manage-list')) : dsp.closeLoad();\n        }\n\n        statusCode === '200' ? successFn(result) : errFn(data);\n      }, function (_) {\n        dsp.cjMesFun(1);\n\n        if (layer) {\n          layer === 1 ? dsp.closeLoadPercent($('.account-manage-list')) : dsp.closeLoad();\n        }\n      });\n    }\n  }]);\n  return app;\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///../src/pages/mycj/accountManage/accountManage.js\n");

/***/ })

}]);