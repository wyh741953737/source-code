(window["webpackJsonp"] = window["webpackJsonp"] || []).push([[34],{

/***/ "../src/pages/mycj/imported-orders/import-process-required.js":
/*!********************************************************************!*\
  !*** ../src/pages/mycj/imported-orders/import-process-required.js ***!
  \********************************************************************/
/*! exports provided: importProcessRequiredFactory */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"importProcessRequiredFactory\", function() { return importProcessRequiredFactory; });\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _iterableToArray(iter) { if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _iterableToArrayLimit(arr, i) { if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return; var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nfunction importProcessRequiredFactory(angular) {\n  var app = angular.module('import-process-required.module', ['service']);\n  app.directive('repeatFinish', function ($timeout) {\n    return {\n      restrict: 'A',\n      link: function link(scope, elem, attr) {\n        //当前循环至最后一个\n        if (scope.$last === true) {\n          $timeout(function () {\n            //向父控制器传递事件消息\n            scope.$emit('repeatFinishCallback');\n          }, 100);\n        }\n      }\n    };\n  });\n  app.controller('import-process-required.ctrl', ['$scope', '$rootScope', 'dsp', '$stateParams', function ($scope, $rootScope, dsp, $stateParams) {\n    var base64 = $rootScope.base64;\n    var userInfo = $rootScope.userInfo;\n    $scope.userId = userInfo.userId;\n    var discounteTransferFlag = false; //是否享受美国仓物流折扣优惠\n\n    $('#yzy-merge-select').select2();\n    $('#init_select').select2();\n    dsp.domainData().then(function (res) {\n      // 请求成功的结果\n      console.log(res);\n      $scope.iscj = res.iscj;\n\n      if ($scope.iscj == '1') {\n        //cj\n        $scope.websiteName = 'CJ';\n      } else {\n        //客户\n        $scope.websiteName = res.websiteName || 'CJ';\n      }\n    });\n    $scope.storage = '';\n    $scope.storageList = [{\n      name: 'Yiwu Warehosue',\n      id: '0'\n    }, {\n      name: 'Shenzhen Warehosue',\n      id: '1'\n    }, {\n      name: 'Cal Warehouse',\n      id: '2'\n    }, {\n      name: 'NJ Warehouse',\n      id: '3'\n    }];\n    $scope.dataFound = true; //客户第一次进入订单模块的界面\n\n    $scope.isordFlag = false;\n    $scope.syStuFlag = false;\n    $scope.errorShowFlag = false; // var $navLis = $('.header-nav li');\n\n    $scope.$on('repeatFinishCallback', function () {\n      // pselwlFun(); //检测是否选择了物流\n      $('#z-dcl-ord #dcl-note').attr('disabled', 'true');\n      $('#z-dcl-ord .bj-spsku').attr('disabled', 'true');\n    }); // 20-01-19 物流原因 ---- 20-01-31 迁移\n\n    var logisticsReasonURL = 'order/order/checkOrderLogsitics';\n    $scope.logisticsReasonList = [];\n    $rootScope.$on(logisticsReasonURL, function (_, bool) {\n      bool ? layer.load(2) : layer.closeAll(\"loading\");\n    });\n\n    $scope.showLogisticsReason = function (orderItem) {\n      $scope.logisticsReasonList = [];\n      var params = {\n        orderNumber: orderItem.order.ID // orderNumber: '200116100011906809',\n\n      };\n      dsp.postFun(logisticsReasonURL, params, function (res) {\n        var data = res.data || {};\n        console.log(orderItem);\n\n        if (data.statusCode == '200') {\n          if (data.result.some(function (item) {\n            return !item.success;\n          })) {\n            // 含有不可用物流才显示列表\n            $scope.showLogisticsToggle(true);\n\n            for (var i = 0; i < data.result.length; i++) {\n              if (!data.result[i]['success']) {\n                $scope.logisticsReasonList.push(data.result[i]);\n              }\n            }\n          }\n        }\n      });\n    };\n\n    $scope.showLogisticsToggle = function () {\n      var bool = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : !$scope.logisticsReasonShow;\n      $scope.logisticsReasonShow = bool;\n    };\n\n    $scope.showWlListFun = function (orderItem, products, index) {\n      console.log(orderItem);\n      $scope.itemOrdSelected = orderItem;\n      console.log($scope.itemOrdSelected);\n      $scope.itemProductSelected = products;\n      console.log($scope.itemProductSelected);\n      $scope.curOrdIndex = index;\n      console.log($scope.curOrdIndex);\n      $scope.selectWlFlag = true;\n      $scope.itemLogisticList = orderItem.LOGISTICINFO;\n      console.log($scope.itemLogisticList);\n\n      if (orderItem.LOGISTIC_NAME) {\n        $scope.checkdWlName = orderItem.LOGISTIC_NAME;\n      } else {\n        $scope.checkdWlName = '';\n      }\n\n      console.log($scope.checkdWlName);\n    };\n\n    var pageH = $(window).height() - 171;\n    var docH = $(document).height();\n    $(window).scroll(function () {\n      var before = $(window).scrollTop();\n\n      if (before > 60) {\n        if (window.innerWidth > 1330 && window.innerWidth < 1590) {\n          $('.direct-ord-fil').addClass(\"showtop\");\n        } else {\n          $('.direct-ord-fil').addClass(\"showtop1\");\n        }\n      } else {\n        $('.direct-ord-fil').removeClass(\"showtop\");\n        $('.direct-ord-fil').removeClass(\"showtop1\");\n      }\n    });\n    $('.directorders-wrap').css({\n      'min-height': $(window).height() * 1 + 'px'\n    });\n    $('.direct-right').css({\n      'min-height': $(window).height() * 1 + 'px'\n    });\n    dsp.loadPercent($('.orders-list'), $(window).height() - 171, 47, 0); //给更多搜索添加点击显示隐藏的动画\n\n    $('#ditect-searchmore').click(function () {\n      $('#ditect-moresearch').stop().toggle(300);\n      $('#toggle-logo1').toggleClass('glyphicon-triangle-top');\n      setTimeout(function () {\n        console.log($('#ditect-moresearch').height());\n\n        if ($('#toggle-logo1').hasClass('glyphicon-triangle-top')) {\n          console.log('显示搜索');\n          $('.direct-right').css({\n            'min-height': $(window).height() * 1 + $('#ditect-moresearch').height() + 10 + 'px'\n          });\n        } else {\n          console.log('隐藏搜索');\n          $('.direct-right').css({\n            'min-height': $(window).height() * 1 + 'px'\n          });\n        }\n      }, 400);\n    }); // var isEmpower = localStorage.getItem('isEmpower');\n    // if (isEmpower == null || isEmpower == '' || isEmpower == undefined) { } else {\n    //   if (isEmpower == '1') {\n    //     // var a = $('.tbnew-div>p:first-child');\n    //     // var left = getElementLeft(a[0]) - 14;\n    //     // var top = getElementTop(a[0]) - 4;\n    //     // console.log(left, top);\n    //     // $('.online-wrap2').css({\n    //     //   \"top\": top + 'px',\n    //     //   \"left\": left + 'px'\n    //     // });\n    //     // $scope.syStuFlag = true;\n    //     // $('.zzc').hide();\n    //     // $('.zzc2').show();\n    //   }\n    // }\n    // $('.know').click(function () {\n    //   $('.zzc').hide();\n    //   $('.zzc2').hide();\n    //   localStorage.setItem('closeFlag', '1');\n    //   location.href = '#/myCJAssociatedStore';\n    // });\n    // $('#online-content2').click(function () {\n    //   $('.zzc2').hide();\n    //   var a = $('.mycj-left-bar>ul>li').eq(0);\n    //   console.log(a)\n    //   var left = getElementLeft(a[0]) + 1;\n    //   var top = getElementTop(a[0]) - 4;\n    //   console.log(left, top);\n    //   $('.online-wrap').css({\n    //     \"top\": top + 'px',\n    //     \"left\": left + 'px'\n    //   });\n    //   //$('.reordstu-dlist').css('display','block');\n    //   $('.zzc').show();\n    // });\n    // $scope.jump = function () {\n    //   console.log('1111111111')\n    //   localStorage.setItem('closeFlag', '');\n    //   location.href = '#/dropshipping-orders';\n    // };\n\n    function getElementLeft(element) {\n      var actualLeft = element.offsetLeft;\n      var current = element.offsetParent;\n\n      while (current !== null) {\n        actualLeft += current.offsetLeft;\n        current = current.offsetParent;\n      }\n\n      return actualLeft;\n    }\n\n    function getElementTop(element) {\n      var actualTop = element.offsetTop;\n      var current = element.offsetParent;\n\n      while (current !== null) {\n        actualTop += current.offsetTop;\n        current = current.offsetParent;\n      }\n\n      return actualTop;\n    } //物流的请求\n    //选择物流的请求\n\n\n    var upShId; //税号的id\n\n    var upShIndex; //税号的index\n\n    $('#z-dcl-ord').on('change', '.dcl-ord-selwl', function (event) {\n      event.stopPropagation(); //获取选择框中的物流方式\n\n      var thisWlFs = $(this).val();\n      var countryCode = $(this).parent('.dcl-ord-wltd').siblings('.shipping-info').find('.imp-procus-country').text();\n      var taxidText = $(this).parent('.dcl-ord-wltd').siblings('.shipping-info').children('.taixd-text').text();\n\n      if ((thisWlFs == 'CJPacket' || thisWlFs == 'DHL' || thisWlFs == 'ePacket') && countryCode == 'BR' && !taxidText) {\n        upShId = $(this).parent().siblings('.ord-cai').children('.order-id').text();\n        upShIndex = $('#z-dcl-ord .dcl-ord-selwl').index(this); //订单下标\n\n        console.log(upShIndex, 'upShIndex');\n        $scope.taxidFlag = true;\n      } //如果是切换成的是USPS+ 改变发往仓库\n\n\n      console.log($(this).parent().parent().siblings('.d-toggle-tr').find('.where-from'));\n\n      if (thisWlFs == 'USPS+') {\n        $(this).parent().parent().siblings('.d-toggle-tr').find('.where-from').text('USA');\n      } else {\n        $(this).parent().parent().siblings('.d-toggle-tr').find('.where-from').text('China');\n      }\n\n      var propertyText = $(this).parent().parent().siblings('.d-toggle-tr').find('.property-text').text();\n      console.log(propertyText); //获取隐藏域中可以发的物流数据\n\n      var wlhidedata = $(this).siblings('.dclord-wl-hide').text();\n      wlhidedata = JSON.parse(wlhidedata);\n      console.log(wlhidedata);\n      var wlstuPrice = 0; //存储物流费用\n\n      for (var i = 0; i < wlhidedata.length; i++) {\n        // console.log(wlhidedata[i].logisticName)\n        if (wlhidedata[i].logisticName == thisWlFs) {\n          wlstuPrice = wlhidedata[i].price - 0;\n          $(this).css('border', '1px solid #ececec');\n          break;\n        } else {\n          $(this).css('border', '1px solid #f88f29');\n        }\n      }\n\n      console.log(wlstuPrice); //给邮费赋值\n      // $(this).parent('.dcl-ord-wltd').siblings('.ship-cost-td').children('.logis-info-wlprice').children('.wl-money-span').text(wlstuPrice);\n      //给邮费加上单位\n      // $(this).parent('.dcl-ord-wltd').siblings('.ship-cost-td').children('.logis-info-wlprice').children('.unit-span').text('USD')\n      //获取隐藏域中的商品总金额\n\n      var spallmoney = $(this).parent('.dcl-ord-wltd').siblings('.ship-cost-td').children('.dclord-amount').text() - 0; //给 订单总金额赋值\n\n      var cjAmountMoney = (wlstuPrice + spallmoney).toFixed(2); // var abc = $cjAmountMoney.toFixed(2);\n\n      $(this).parent('.dcl-ord-wltd').siblings('.z-cjord-wm').children('.cj-price-num').children('#cj-a-money').text(cjAmountMoney + 'USD'); // $scope.zlFun();\n\n      console.log(spallmoney);\n      console.log(cjAmountMoney);\n      var wlData = {};\n      var ordId = $(this).parent().siblings('.ord-cai').children('.order-id').text();\n      var nowIndex = $(this).attr('index') * 1;\n      var logistic = $(this).val();\n      console.log(ordId + '===' + logistic);\n      wlData.orderNum = ordId;\n      wlData.logisic = logistic;\n      console.log(logistic);\n      $scope.ordersList.forEach(function (o, i) {\n        if (o.order.ID == ordId) {\n          o.order.LOGISTIC_NAME = logistic;\n          o.order.POSTAGE = wlstuPrice;\n\n          for (var j = 0; j < o.order.LOGISTICINFO.length; j++) {\n            if (thisWlFs == o.order.LOGISTICINFO[j].logisticName) {\n              $scope.ordersList[i].order.cast = o.order.LOGISTICINFO[j].cast == null ? '0' : o.order.LOGISTICINFO[j].cast;\n              break;\n            }\n          }\n        }\n      });\n      console.log($scope.remark);\n      console.log($scope.remarkList);\n      $scope.ordersList[nowIndex].order.POSTAGE = wlstuPrice; // 当前选中的物流\n\n      var _$scope$ordersList$no = $scope.ordersList[nowIndex].order.LOGISTICINFO.filter(function (v) {\n        return v.logisticName === thisWlFs;\n      }),\n          _$scope$ordersList$no2 = _slicedToArray(_$scope$ordersList$no, 1),\n          currentWl = _$scope$ordersList$no2[0];\n\n      $scope.ordersList[nowIndex].order.currentWl_price = currentWl.price;\n      $scope.ordersList[nowIndex].order.currentWl_pack_price = currentWl.packPrice || 0;\n      dsp.postFun('app/order/upOrderLogisics', JSON.stringify(wlData), function (data) {\n        console.log(data);\n\n        if (data.data.result) {\n          // logisRemark($scope.list);\n          for (var j = 0; j < $scope.remarkList.length; j++) {\n            if (logistic == $scope.remarkList[j].nameen) {\n              if ($scope.remarkList[j].remark) {\n                $scope.ordersList[nowIndex].order.remark = $scope.remarkList[j].remark.toString().replace(/<br>/g, '');\n              } else {\n                $scope.ordersList[nowIndex].order.remark = $scope.remarkList[j].remark;\n              }\n\n              break;\n            }\n          }\n\n          console.log(propertyText);\n          console.log(propertyText.indexOf(\"BATTERY\") >= 0 || propertyText.indexOf(\"ELECTRONIC\") >= 0 || propertyText.indexOf(\"HAVE_CREAM\") >= 0 || propertyText.indexOf(\"HAVE_MAGNETISM\") >= 0);\n          console.log(thisWlFs);\n\n          if (thisWlFs == 'ePacket' && (propertyText.indexOf(\"BATTERY\") >= 0 || propertyText.indexOf(\"ELECTRONIC\") >= 0 || propertyText.indexOf(\"HAVE_CREAM\") >= 0 || propertyText.indexOf(\"HAVE_MAGNETISM\") >= 0)) {\n            $scope.ordersList[nowIndex].order.remark = 'We have to use a special ePacket channel to ship this order as it contains sensitive material like: battery, liquid, cream, magnet etc. The shipping cost will be 15% higher than normal ePacket.';\n          }\n\n          console.log($scope.ordersList[nowIndex]);\n\n          for (var i = 0; i < wlhidedata.length; i++) {\n            //如果有偏远费用 提示的优先级最高\n            if (wlhidedata[i].logisticName == thisWlFs) {\n              if (wlhidedata[i]['remoteFee'] > 0) {\n                $scope.ordersList[nowIndex].order.remark = 'Additional Charges for Remote Address: ' + wlhidedata[i]['remoteFee'] + 'USD';\n              }\n            }\n          }\n        }\n      }, function (data) {\n        console.log(data);\n      });\n    });\n\n    $scope.checkItem = function (item) {\n      console.log($scope.checkdWlName);\n      $scope.checkdWlName = item.logisticName;\n      $scope.confirmSelWlFun();\n    };\n\n    $scope.confirmSelWlFun = function () {\n      console.log($scope.checkdWlName);\n      console.log($scope.itemOrdSelected);\n      var curOrdObj = $scope.itemOrdSelected;\n      var curOrdProArr = $scope.itemProductSelected;\n      console.log(curOrdProArr, 'curOrdProArr'); //获取选择框中的物流方式\n\n      var thisWlFs = $scope.checkdWlName;\n      var countryCode = curOrdObj.COUNTRY_CODE;\n      var taxidText = curOrdObj.taxidExtend;\n      var curOrdId = curOrdObj.ID;\n\n      if ((thisWlFs == 'CJPacket' || thisWlFs == 'DHL' || thisWlFs == 'ePacket') && countryCode == 'BR' && !taxidText) {\n        upShId = curOrdId;\n        upShIndex = $scope.curOrdIndex; //订单下标\n\n        console.log(upShIndex, 'upShIndex');\n        $scope.taxidFlag = true;\n      }\n\n      var propertyText = '';\n      curOrdProArr.forEach(function (item, i) {\n        propertyText += curOrdProArr[i].PROPERTY;\n      }); //获取隐藏域中可以发的物流数据\n\n      var wlhidedata = curOrdObj.LOGISTICINFO;\n      var wlstuPrice = 0; //存储物流费用\n\n      for (var i = 0; i < wlhidedata.length; i++) {\n        if (wlhidedata[i].logisticName == thisWlFs) {\n          wlstuPrice = wlhidedata[i].price - 0;\n          break;\n        }\n      }\n\n      curOrdObj.POSTAGE = wlstuPrice;\n      var spallmoney = curOrdObj.ORDER_AMOUNT - 0; //给 订单总金额赋值\n\n      var cjAmountMoney = (wlstuPrice + spallmoney).toFixed(2);\n      var wlData = {};\n      var ordId = curOrdObj.ID;\n      var nowIndex = $scope.curOrdIndex;\n      var logistic = thisWlFs;\n      $scope.ordersList[nowIndex].order.POSTAGE = wlstuPrice;\n      wlData.orderNum = ordId;\n      wlData.logisic = logistic;\n      $scope.ordersList.forEach(function (o, i) {\n        if (o.order.ID == ordId) {\n          o.order.LOGISTIC_NAME = logistic;\n          o.order.POSTAGE = wlstuPrice;\n\n          for (var j = 0; j < o.order.LOGISTICINFO.length; j++) {\n            if (thisWlFs == o.order.LOGISTICINFO[j].logisticName) {\n              $scope.ordersList[i].order.cast = o.order.LOGISTICINFO[j].cast == null ? '0' : o.order.LOGISTICINFO[j].cast;\n              break;\n            }\n          }\n        }\n      });\n      console.log($scope.ordersList[nowIndex].order, '$scope.ordersList[nowIndex].order');\n      $('#z-dcl-ord .dcl-ord-selwl').eq($scope.curOrdIndex).val(thisWlFs);\n      $('#z-dcl-ord .z-cjord-wm').eq($scope.curOrdIndex).children('.cj-price-num').children('#cj-a-money').text(cjAmountMoney + 'USD'); // 当前选中的物流\n\n      var _$scope$ordersList$no3 = $scope.ordersList[nowIndex].order.LOGISTICINFO.filter(function (v) {\n        return v.logisticName === thisWlFs;\n      }),\n          _$scope$ordersList$no4 = _slicedToArray(_$scope$ordersList$no3, 1),\n          currentWl = _$scope$ordersList$no4[0];\n\n      $scope.ordersList[nowIndex].order.currentWl_price = currentWl.price;\n      $scope.ordersList[nowIndex].order.currentWl_pack_price = currentWl.packPrice || 0;\n      dsp.postFun('app/order/upOrderLogisics', JSON.stringify(wlData), function (data) {\n        $scope.selectWlFlag = false;\n\n        if (data.data.result) {\n          for (var j = 0; j < $scope.remarkList.length; j++) {\n            if (logistic == $scope.remarkList[j].nameen) {\n              if ($scope.remarkList[j].remark) {\n                $scope.ordersList[nowIndex].order.remark = $scope.remarkList[j].remark.toString().replace(/<br>/g, '');\n              } else {\n                $scope.ordersList[nowIndex].order.remark = $scope.remarkList[j].remark;\n              }\n\n              break;\n            }\n          }\n\n          if (thisWlFs == 'ePacket' && (propertyText.indexOf(\"BATTERY\") >= 0 || propertyText.indexOf(\"ELECTRONIC\") >= 0 || propertyText.indexOf(\"HAVE_CREAM\") >= 0 || propertyText.indexOf(\"HAVE_MAGNETISM\") >= 0)) {\n            $scope.ordersList[nowIndex].order.remark = 'We have to use a special ePacket channel to ship this order as it contains sensitive material like: battery, liquid, cream, magnet etc. The shipping cost will be 15% higher than normal ePacket.';\n          }\n\n          for (var i = 0; i < wlhidedata.length; i++) {\n            //如果有偏远费用 提示的优先级最高\n            if (wlhidedata[i].logisticName == thisWlFs) {\n              if (wlhidedata[i]['remoteFee'] > 0) {\n                $scope.ordersList[nowIndex].order.remark = 'Additional Charges for Remote Address: ' + wlhidedata[i]['remoteFee'] + 'USD';\n              }\n            }\n          }\n        }\n      }, function (data) {\n        console.log(data);\n      });\n    }; //确定填写税号\n\n\n    $scope.sureShFun = function () {\n      console.log(upShId);\n      console.log(upShIndex);\n\n      if (!$scope.taixeVal) {\n        layer.msg('Please enter the tax number');\n        return;\n      }\n\n      layer.load(2);\n      var uptaxid = {};\n      uptaxid.cjorderid = upShId;\n      uptaxid.taxid = $scope.taixeVal;\n      console.log(JSON.stringify(uptaxid));\n      dsp.postFun('app/order/updateTaxid', JSON.stringify(uptaxid), function (data) {\n        console.log(data);\n        layer.closeAll(\"loading\");\n\n        if (data.data.code == 1) {\n          $scope.taxidFlag = false;\n          layer.msg('Add Success');\n          $scope.ordersList[upShIndex].order.taxidExtend = $scope.taixeVal;\n          $scope.taixeVal = '';\n        } else {\n          layer.msg('Add Failed');\n        }\n      }, function (data) {\n        console.log(data);\n        layer.closeAll(\"loading\");\n      });\n    };\n\n    $scope.upShBtnFun = function (item, index) {\n      $scope.taxidFlag = true;\n      upShId = item.ID;\n      upShIndex = index;\n    };\n\n    $scope.overOption1 = function (item) {\n      $scope.remark = '';\n      $scope.bulkWlList.forEach(function (o, i) {\n        if (item.order.LOGISTIC_NAME == o.nameen) {\n          $scope.remark = o.remark;\n        }\n      });\n\n      if ($scope.remark) {\n        item.isremark = true;\n      }\n    };\n\n    $scope.overOption2 = function (item) {\n      item.isremark = false;\n    }; //留言功能\n\n\n    $scope.editnoteFlag = false;\n    var changenoteid = '';\n    var $noteObj = {};\n    var $hidenoteObj = {};\n\n    $scope.editNote = function (item, $event) {\n      // $event.stopPropagation();\n      $scope.editnoteFlag = true;\n      changenoteid = item.ID;\n      var textstr = '<textarea type=\"text\" id=\"dcl-note\"></textarea>';\n\n      if (item.NOTE_ATTRIBUTES == '' && $($event.target).parent().parent().find('#dcl-note').length == 0 || item.NOTE_ATTRIBUTES == null && $($event.target).parent().parent().find('#dcl-note').length == 0) {\n        //&&$($event.target).parent().siblings('#dcl-note')==undefined\n        $($event.target).parent().parent().prepend(textstr); // alert('创建一个文本框')\n      }\n\n      $hidenoteObj = $($event.target).parent().siblings('.hide-note-p'); //获取隐藏域的笔记内容\n\n      $('.editmess-text').val($hidenoteObj.text()); //给留言框赋当前值\n\n      $noteObj = $($event.target).parent().siblings('#dcl-note'); //获取当前的留言框\n      // return false;\n    }; //留言的取消按钮\n\n\n    $scope.cancelmessFun = function () {\n      $scope.editnoteFlag = false;\n      $('.editmess-text').val('');\n      $noteObj.attr('disabled', 'true');\n    }; //确定留言功能\n\n\n    $scope.entermessFun = function () {\n      var noteText = $.trim($('.editmess-text').val());\n      $hidenoteObj.text(noteText); //给隐藏域里笔记内容赋值\n\n      console.log(noteText);\n      var noteData = {};\n      noteData.orderNum = changenoteid;\n      noteData.note = noteText;\n      console.log(noteText);\n      console.log(noteData);\n      console.log($noteObj);\n      dsp.postFun('app/order/upOrderNote', JSON.stringify(noteData), function (data) {\n        $scope.editnoteFlag = false; //关闭留言弹窗\n\n        $noteObj.removeAttr('disabled');\n        $noteObj.val(noteText); //给修改的留言赋值\n\n        $noteObj.attr('disabled', 'true');\n        console.log(data);\n      }, function (data) {\n        console.log(data);\n      });\n    }; //国家切换，税收显示\n\n\n    $scope.showTaxid = false;\n\n    $scope.cityChange = function (city) {\n      $scope.addCountryCode = city.substr(0, 2);\n      $scope.logisticsWay();\n      console.log($scope.addCountryCode);\n    }; // $scope.countrySelect = (res) => {\n    //     console.log(res)\n    // }\n    //数组去重\n\n\n    function unique(arr) {\n      var result = new Map();\n      return arr.filter(function (a) {\n        return !result.has(a) && result.set(a, 1);\n      });\n    } //修改地址\n\n\n    $scope.modefyAddFun = function (pro, item, index) {\n      console.log(item);\n      console.log(pro);\n      $scope.property = []; //商品属性\n\n      $scope.productTypes = []; //商品类型\n\n      $scope.productOrdSku = []; //商品sku\n\n      $scope.productPrice = []; //商品价格\n\n      $scope.addModefyFlag = true;\n      $scope.addItemId = item.ID;\n      $scope.addItemIndex = index;\n      $scope.address1 = item.SHIPPING_ADDRESS; //地址\n\n      $scope.address2 = item.shippingAddress2;\n      $scope.addCity = item.CITY; //城市\n\n      $scope.addProvince = item.PROVINCE;\n      $scope.addZip = item.ZIP; //邮编\n\n      $scope.addPhone = item.PHONE;\n      $scope.addName = item.CUSTOMER_NAME;\n      $scope.addTaxid = item.dutyNo; //税号\n\n      $scope.addLogisiticName = item.LOGISTIC_NAME; //选择的发货地址\n\n      $scope.addAreaId = item.areaId; //发货地区Id\n\n      $scope.updateId = item.areaId;\n      $scope.addLogisiticinfo = item.LOGISTICINFO; //发货仓列表\n\n      $scope.addOrderWeight = item.ORDERWEIGHT; //商品总重量\n\n      $scope.addQuantity = item.ORDER_QUANTITY; //商品总数量\n\n      $scope.addCountryCode = item.COUNTRY_CODE; //目的国家\n\n      $scope.addStartCountry = item.startCountryCode; //发货国家缩写\n\n      $scope.addVolume = item.volume; //商品体积\n\n      $scope.customerId = item.MERCHANTN_NUMBER; //客户id\n\n      $scope.parameter = [{\n        orderId: $scope.addItemId,\n        transferAreaId: $scope.addAreaId\n      }]; //更新发货仓列表\n\n      $(\"#init_select\").val(item.areaId).select2();\n      $('#init_select3').select2();\n      var enName = countryEnName(item.COUNTRY_CODE);\n      $scope.countryEnName = enName;\n      console.log($scope.countryEnName);\n      console.log(enName);\n\n      if (enName) {\n        $scope.couneryInfo = item.COUNTRY_CODE + '#' + enName; //国家\n\n        $(\"#init_select2\").val(item.COUNTRY_CODE + '#' + enName).select2();\n      } else {\n        $scope.couneryInfo = '';\n      }\n\n      console.log($scope.couneryInfo);\n      pro.forEach(function (item) {\n        $scope.property.push(item.PROPERTY); //添加商品属性\n\n        $scope.productTypes.push(item.product_type); //添加商品类型\n\n        $scope.productOrdSku.push(item.SKU); //添加商品sku\n\n        $scope.productPrice.push(item.PRICE);\n      });\n      $scope.property = $scope.property.join(',').split(',');\n      $scope.property = unique($scope.property);\n      $scope.productPrice.sort();\n      $scope.maxPrice = $scope.productPrice[$scope.productPrice.length - 1];\n      $scope.phoneErr = false;\n      $scope.zipErr = false;\n      $scope.taxidErr = false;\n      $scope.opinion().then();\n    };\n\n    $scope.checkPhone = function (phone) {\n      phone = phone.replace(/[^\\d\\+\\-\\(\\)]/g, \"\");\n      $scope.addPhone = phone;\n    };\n\n    function countryEnName(code) {\n      console.log(code);\n      var len = $scope.countryList.length;\n      console.log(len);\n      var enName;\n\n      if (len > 0) {\n        for (var i = 0; i < len; i++) {\n          if (code == $scope.countryList[i].ID) {\n            enName = $scope.countryList[i].NAME_EN;\n            break;\n          }\n        }\n      }\n\n      return enName;\n    } //改变发货仓,请求物流\n\n\n    $scope.changeArea = function (areaId) {\n      $scope.addLogisiticName = '';\n      $scope.parameter[0].transferAreaId = areaId;\n      console.log(areaId);\n      $scope.areaList.forEach(function (item) {\n        if (item.areaId === +areaId) {\n          console.log(item.countryCode);\n          $scope.addStartCountry = item.countryCode;\n        }\n      });\n      $scope.logisticsWay();\n      console.log($scope.addStartCountry);\n    };\n\n    $scope.wuliuCode = []; //改变物流方式\n\n    $scope.changeLogisitic = function () {\n      if ($scope.addLogisiticinfo) {\n        var dataIndex = $scope.addLogisiticinfo.findIndex(function (item) {\n          return item.nameEn === $scope.addLogisiticName;\n        });\n\n        if (dataIndex > -1) {\n          var obj = $scope.addLogisiticinfo[dataIndex];\n          var index = obj.ruleTips.findIndex(function (i) {\n            return i.msgCode.split('')[0] === '2';\n          });\n\n          if (index > -1 || $scope.addTaxid) {\n            $scope.showTaxid = true;\n\n            if (!$scope.addTaxid) {\n              layer.msg('Please enter the tax ID.');\n            }\n          } else {\n            $scope.showTaxid = false;\n          }\n        }\n      }\n    }; //请求物流接口，获取物流方式\n\n\n    $scope.logisticsWay = function () {\n      var optionList = {\n        srcAreaCode: $scope.addStartCountry,\n        destAreaCode: $scope.addCountryCode,\n        weight: $scope.addOrderWeight,\n        //商品重量\n        productProp: $scope.property,\n        //商品属性\n        phone: $scope.addPhone,\n        zip: $scope.addZip,\n        dutyNo: $scope.addTaxid,\n        //do it\n        productTypes: $scope.productTypes,\n        //商品类型\n        skuList: $scope.productOrdSku,\n        //商品sku\n        amount: $scope.maxPrice,\n        uid: $scope.addItemId,\n        volume: $scope.addVolume,\n        //商品体积\n        platforms: '',\n        //平台\n        customerCode: $scope.customerId //客户id\n\n      };\n      console.log(optionList);\n      console.log(JSON.stringify(optionList));\n\n      if (!$scope.addTaxid) {\n        $scope.showTaxid = false;\n      }\n\n      if (!$scope.addLogisiticName) {\n        $scope.showTaxid = false;\n        layer.msg('Please select a shipping method.');\n      }\n\n      return new Promise(function (resolve, reject) {\n        dsp.postFun('freightService/cujiaLogisticsFreight/freight/option/list', JSON.stringify(optionList), function (res) {\n          $scope.arrayLogistics = res.data.data;\n          $scope.addLogisiticinfo = $scope.arrayLogistics;\n\n          if ($scope.addLogisiticinfo) {\n            var dataIndex = $scope.addLogisiticinfo.findIndex(function (item) {\n              return item.nameEn === $scope.addLogisiticName;\n            });\n\n            if (dataIndex > -1) {\n              var obj = $scope.addLogisiticinfo[dataIndex];\n              var index = obj.ruleTips.findIndex(function (i) {\n                return i.msgCode.split('')[0] === '2';\n              });\n\n              if (!$scope.addLogisiticName) {\n                return;\n              }\n\n              if (index > -1) {\n                $scope.showTaxid = true;\n                resolve(true);\n              } else if ($scope.showTaxid && !$scope.addTaxid) {\n                layer.msg('Please enter the tax ID.');\n                resolve(true);\n              } else if ($scope.addTaxid) {\n                $scope.showTaxid = true;\n                resolve(true);\n              } else {\n                $scope.showTaxid = false;\n              }\n            }\n          }\n\n          resolve(false);\n        });\n      });\n    }; //校验判断 校验城市地址邮编等发生变化了给发货方式重新赋值\n\n\n    $scope.opinion = function () {\n      return new Promise(function (resolve, reject) {\n        dsp.closeLoad();\n\n        if (!$scope.address1) {\n          layer.msg('Please enter the address.');\n          resolve(false);\n        } else if (!$scope.addCity) {\n          layer.msg('Please enter the city.');\n          resolve(false);\n        } else if (!$scope.addName) {\n          layer.msg('Please enter name.');\n          resolve(false);\n        } else if (!$scope.couneryInfo) {\n          layer.msg('Please select a country.');\n          resolve(false);\n        } else {\n          $scope.logisticsWay().then(function (data) {\n            if (data) {\n              if ($scope.showTaxid && !$scope.addTaxid) {\n                layer.msg('Please enter the tax ID.');\n                resolve(false);\n              } else {\n                resolve(true);\n              }\n            } else {\n              resolve(true);\n            }\n          });\n        }\n      });\n    }; //失去光标校验\n\n\n    $scope.lost = function () {\n      console.log('lost');\n      $scope.opinion().then();\n    }; //确认编辑\n\n\n    $scope.sureModeFun = function () {\n      layer.load(2);\n      console.log($scope.addItemIndex);\n      var addUpdata = {};\n      addUpdata.id = $scope.addItemId;\n      addUpdata.shipping_address = $scope.address1;\n      addUpdata.shipping_address2 = $scope.address2;\n      addUpdata.city = $scope.addCity;\n      addUpdata.province = $scope.addProvince;\n      addUpdata.zip = $scope.addZip;\n      addUpdata.phone = $scope.addPhone;\n      addUpdata.name = $scope.addName;\n      addUpdata.taxid = $scope.addTaxid;\n      addUpdata.startCountryCode = $scope.addStartCountry; //发货国家缩写\n\n      addUpdata.LOGISTIC_NAME = $scope.addLogisiticName; //发货物流名称\n\n      addUpdata.areaId = $scope.addAreaId; //发货区域id\n\n      addUpdata.country = $scope.countryEnName; //国家\n\n      addUpdata.countryCode = $scope.addCountryCode; //目的国家缩写\n\n      addUpdata.type = '1';\n      console.log(addUpdata);\n      console.log(JSON.stringify(addUpdata));\n\n      if ($scope.couneryInfo) {\n        addUpdata.country = $scope.couneryInfo.split('#')[1];\n        addUpdata.countryCode = $scope.couneryInfo.split('#')[0];\n      }\n\n      $scope.opinion().then(function (data) {\n        layer.load(2);\n\n        if (data) {\n          //验证成功后请求Shipping From 和 update接口\n          console.log('1');\n          dsp.postFun('order/order/orderTransferArea', {\n            transferOrderDetailPMS: $scope.parameter,\n            routeDiscounteTransfer: false\n          }, function (data) {\n            discounteTransferFlag = false;\n\n            if (data.data.statusCode == 200) {\n              closebulkWareFlag();\n              $scope.zchecked_all = false;\n              dsp.postFun('app/order/updateFiled', JSON.stringify(addUpdata), function (_ref) {\n                var data = _ref.data;\n                console.log(data.ruleMsg);\n                layer.closeAll(\"loading\");\n\n                if (data.msgCode === '505') {\n                  $scope.phoneErr = data.ruleMsg.filter(function (item) {\n                    return item.type === 'phone';\n                  }) || [];\n                  $scope.zipErr = data.ruleMsg.filter(function (item) {\n                    return item.type === 'zip';\n                  }) || [];\n                  $scope.taxidErr = data.ruleMsg.filter(function (item) {\n                    return item.type === 'dutyNo';\n                  }) || [];\n                } else if (data.result > 0) {\n                  $scope.addModefyFlag = false;\n                  layer.msg('Modified Successfully');\n                  $scope.addressOrderList = [];\n                  $scope.checkAddressList = [];\n                  freshList();\n                } else {\n                  layer.msg('Modify failed');\n                }\n              }, function (data) {\n                dsp.closeLoad();\n                console.log(data);\n              });\n            } else {\n              layer.closeAll(\"loading\");\n            }\n          });\n        } else {\n          dsp.closeLoad();\n        }\n      });\n    }; //封装更新列表\n    //提交过程中更新Shopping From\n\n\n    $scope.updateSF = function () {\n      dsp.postFun('order/order/orderTransferArea', {\n        transferOrderDetailPMS: $scope.parameter,\n        routeDiscounteTransfer: false\n      }, function (data) {\n        discounteTransferFlag = false;\n        layer.closeAll(\"loading\");\n\n        if (data.data.statusCode == 200) {\n          closebulkWareFlag();\n          $scope.zchecked_all = false; // layer.msg(\"Successfully changed shipping area！\")\n        } else {\n          layer.msg(data.data.message);\n        }\n      });\n    };\n\n    var bs = new Base64();\n    var codeInlocal = localStorage.getItem('code');\n    console.log(codeInlocal);\n    var btnWidth = 0;\n    var btnHeight = 0;\n\n    if (codeInlocal) {\n      var timer = setInterval(function () {\n        var myDate = new Date();\n        var tipHour = myDate.getHours(); //获取当前小时数(0-23)\n\n        var tipMinute = myDate.getMinutes(); //获取当前分钟数(0-59)\n\n        var tipSecond = myDate.getSeconds(); //获取当前秒数(0-59)\n\n        $('#tiphour').text(tipHour + ':');\n        $('#tipminute').text(tipMinute + ':');\n        $('#tipsecond').text(tipSecond);\n        codeInlocal = localStorage.getItem('code');\n        $scope.tipsOrdStatues = localStorage.getItem('ordTips');\n\n        if (codeInlocal == '200') {\n          // $scope.refreshBtnFlag = true;\n          $('.refresh-btn').show();\n          clearInterval(timer);\n          console.log(myDate);\n          $scope.tipsOrdStatues = localStorage.getItem('ordTips');\n          $('.titOrdTips').text($scope.tipsOrdStatues);\n        }\n      }, 1000);\n    } //刷新价格\n\n\n    $scope.freshBtnFun = function () {\n      $scope.productList2 = [];\n      $scope.searchPriceBySKU = '';\n      getProductList2();\n      $scope.freshPriceFlag = true;\n      $('#checkAll2').attr('src', 'static/image/public-img/iconxz.png').removeClass('checkAll');\n    };\n\n    $scope.freshPriceFun = function (sku) {\n      $scope.freshPriceFlag = false;\n      var freshData = {};\n      freshData.sku = sku;\n      dsp.postFun('app/order/refreshOrderPrice', JSON.stringify(freshData), function (data) {\n        console.log(data);\n        layer.closeAll('loading');\n\n        if (data.data.result) {\n          layer.msg('Change success');\n          freshList();\n        } else {\n          layer.msg('Change failed');\n        }\n      }, function (data) {\n        console.log(data);\n        layer.closeAll('loading');\n      });\n    }; //刷新物流\n\n\n    $scope.freshlogisticBtnFun = function () {\n      $scope.productList = [];\n      $scope.searchWuliuBySKU = '';\n      getProductList();\n      $scope.freshLogisticsFlag = true;\n      $('#checkAll').attr('src', 'static/image/public-img/iconxz.png').removeClass('checkAll');\n    };\n\n    $scope.pagesize2 = '5';\n    $scope.pagesize3 = '5';\n    $scope.pagenum2 = '1';\n    $scope.pagenum3 = '1';\n\n    $scope.searchWuliu = function () {\n      $scope.pagenum2 = '1';\n      getProductList();\n    };\n\n    $scope.searchPrice = function () {\n      $scope.pagenum3 = '1';\n      getProductList2();\n    };\n\n    function getProductList2() {\n      var sendData = {\n        pageSize: $scope.pagesize3,\n        page: $scope.pagenum3,\n        sku: $scope.searchPriceBySKU ? $scope.searchPriceBySKU : ''\n      };\n      dsp.load();\n      dsp.postFun('app/order/getSkuByMerchantn', JSON.stringify(sendData), function (data) {\n        console.log(data.data);\n        dsp.closeLoad();\n\n        if (data.data.statusCode == 'CODE_200') {\n          var result = data.data.result;\n          $.each(result, function (i, v) {\n            var sku = v.sku;\n            var arr = sku.split('-')[0];\n            v.sku = arr;\n          });\n          $scope.productList2 = result;\n          $scope.totalNum3 = data.data.count;\n          pageFun3();\n        } else {\n          layer.msg('Failed to get list of items');\n        }\n      });\n    }\n\n    function getProductList() {\n      var sendData = {\n        pageSize: $scope.pagesize2,\n        page: $scope.pagenum2,\n        sku: $scope.searchWuliuBySKU ? $scope.searchWuliuBySKU : ''\n      };\n      dsp.load();\n      dsp.postFun('app/order/getSkuByMerchantn', JSON.stringify(sendData), function (data) {\n        console.log(data.data);\n        dsp.closeLoad();\n\n        if (data.data.statusCode == 'CODE_200') {\n          var result = data.data.result;\n          $.each(result, function (i, v) {\n            // console.log(i,v)\n            var sku = v.sku;\n            var arr = sku.split('-')[0];\n            v.sku = arr;\n          });\n          $scope.productList = result;\n          $scope.totalNum2 = data.data.count;\n          pageFun2();\n        } else {\n          layer.msg('Failed to get list of items');\n        }\n      });\n    }\n\n    function pageFun2() {\n      console.log('11111');\n      $(\".pagegroup\").jqPaginator({\n        totalCounts: $scope.totalNum2 || 1,\n        pageSize: $scope.pagesize2 * 1,\n        visiblePages: 5,\n        currentPage: $scope.pagenum2 * 1,\n        activeClass: 'current',\n        first: '<a class=\"prev\" href=\"javascript:void(0);\">&lt;&lt;<\\/a>',\n        prev: '<a class=\"prev\" href=\"javascript:void(0);\">&lt;<\\/a>',\n        next: '<a class=\"next\" href=\"javascript:void(0);\">&gt;<\\/a>',\n        last: '<a class=\"next\" href=\"javascript:void(0);\">&gt;&gt;<\\/a>',\n        page: '<a href=\"javascript:void(0);\">{{page}}<\\/a>',\n        onPageChange: function onPageChange(n, type) {\n          if (type == 'init') {\n            return;\n          }\n\n          $scope.pagenum2 = n + '';\n          getProductList();\n        }\n      });\n    }\n\n    function pageFun3() {\n      console.log('11111');\n      $(\".pagegroup2\").jqPaginator({\n        totalCounts: $scope.totalNum3 || 1,\n        pageSize: $scope.pagesize3 * 1,\n        visiblePages: 5,\n        currentPage: $scope.pagenum3 * 1,\n        activeClass: 'current',\n        first: '<a class=\"prev\" href=\"javascript:void(0);\">&lt;&lt;<\\/a>',\n        prev: '<a class=\"prev\" href=\"javascript:void(0);\">&lt;<\\/a>',\n        next: '<a class=\"next\" href=\"javascript:void(0);\">&gt;<\\/a>',\n        last: '<a class=\"next\" href=\"javascript:void(0);\">&gt;&gt;<\\/a>',\n        page: '<a href=\"javascript:void(0);\">{{page}}<\\/a>',\n        onPageChange: function onPageChange(n, type) {\n          if (type == 'init') {\n            return;\n          }\n\n          $scope.pagenum3 = n + '';\n          getProductList2();\n        }\n      });\n    } //跳页\n\n\n    $scope.pagenumchange3 = function () {\n      var totalPage = Math.ceil(($scope.totalNum3 - 0) / ($scope.pagesize3 - 0));\n      console.log(totalPage);\n\n      if ($scope.pagenum3 > totalPage || $scope.pagenum3 < 1) {\n        if ($scope.pagenum3 < 1) {\n          $scope.pagenum3 = '1';\n        }\n\n        layer.msg('Page does not exist.');\n        return;\n      }\n\n      getProductList2();\n    }; //条数改变\n\n\n    $scope.pagesizechange3 = function () {\n      $scope.pagenum3 = \"1\";\n      console.log($scope.pagesize);\n      getProductList2();\n    }; //跳页\n\n\n    $scope.pagenumchange2 = function () {\n      var totalPage = Math.ceil(($scope.totalNum2 - 0) / ($scope.pagesize2 - 0));\n      console.log(totalPage);\n\n      if ($scope.pagenum2 > totalPage || $scope.pagenum2 < 1) {\n        if ($scope.pagenum2 < 1) {\n          $scope.pagenum2 = '1';\n        }\n\n        layer.msg('Page does not exist.');\n        return;\n      }\n\n      getProductList();\n    }; //条数改变\n\n\n    $scope.pagesizechange2 = function () {\n      $scope.pagenum2 = \"1\";\n      console.log($scope.pagesize);\n      getProductList();\n    }; //全选\n\n\n    $('#checkAll').click(function () {\n      if ($(this).hasClass('checkAll')) {\n        $(this).attr('src', 'static/image/public-img/iconxz.png').removeClass('checkAll');\n        $('.fresh-body1').find('.checkImg').attr('src', 'static/image/public-img/iconxz.png').removeClass('checked');\n      } else {\n        $(this).attr('src', 'static/image/public-img/multiple11.png').addClass('checkAll');\n        $('.fresh-body1').find('.checkImg').attr('src', 'static/image/public-img/multiple11.png').addClass('checked');\n      }\n    });\n    $('#checkAll2').click(function () {\n      if ($(this).hasClass('checkAll')) {\n        $(this).attr('src', 'static/image/public-img/iconxz.png').removeClass('checkAll');\n        $('.fresh-body2').find('.checkImg').attr('src', 'static/image/public-img/iconxz.png').removeClass('checked');\n      } else {\n        $(this).attr('src', 'static/image/public-img/multiple11.png').addClass('checkAll');\n        $('.fresh-body2').find('.checkImg').attr('src', 'static/image/public-img/multiple11.png').addClass('checked');\n      }\n    });\n    $('.fresh-body1').on('click', '.checkImg', function () {\n      if ($(this).hasClass('checked')) {\n        $(this).attr('src', 'static/image/public-img/iconxz.png').removeClass('checked');\n      } else {\n        $(this).attr('src', 'static/image/public-img/multiple11.png').addClass('checked');\n      }\n\n      var len = $('.fresh-body1 .checkImg').length;\n      var len2 = $('.fresh-body1 .checkImg.checked').length;\n\n      if (len == len2) {\n        $('#checkAll').attr('src', 'static/image/public-img/multiple11.png').addClass('checkAll');\n      } else {\n        $('#checkAll').attr('src', 'static/image/public-img/iconxz.png').removeClass('checkAll');\n      }\n    });\n    $('.fresh-body2').on('click', '.checkImg', function () {\n      if ($(this).hasClass('checked')) {\n        $(this).attr('src', 'static/image/public-img/iconxz.png').removeClass('checked');\n      } else {\n        $(this).attr('src', 'static/image/public-img/multiple11.png').addClass('checked');\n      }\n\n      var len = $('.fresh-body2 .checkImg').length;\n      var len2 = $('.fresh-body2 .checkImg.checked').length;\n\n      if (len == len2) {\n        $('#checkAll2').attr('src', 'static/image/public-img/multiple11.png').addClass('checkAll');\n      } else {\n        $('#checkAll2').attr('src', 'static/image/public-img/iconxz.png').removeClass('checkAll');\n      }\n    });\n\n    $scope.freshLogisFun = function (sku) {\n      layer.load(2);\n      $scope.freshLogisticsFlag = false;\n      var freshData = {};\n      freshData.sku = sku;\n      dsp.postFun('app/order/refreshLogisticsPrice', JSON.stringify(freshData), function (data) {\n        console.log(data);\n        layer.closeAll('loading');\n\n        if (data.data.result) {\n          layer.msg('Change success');\n          freshList();\n        } else {\n          layer.msg('Change failed');\n        }\n      }, function (data) {\n        console.log(data);\n        layer.closeAll('loading');\n      });\n    };\n\n    function freshList() {\n      var searchinpVal = $.trim($('.ord-search-inp').val());\n      $('#z-dcl-ord .zchecked-all').attr('src', 'static/image/direct-orders/multiple1.png');\n      $scope.ordersList = [];\n      dsp.loadPercent($('.orders-list'), $(window).height() - 171, 47, 0);\n      var orData = {};\n      tjFun(orData);\n      orData.data = JSON.stringify(orData.data);\n      console.log(JSON.stringify(orData));\n      dsp.postFun('app/order/queryOrders', JSON.stringify(orData), dclsFun, dcleFun);\n\n      function dclsFun(data) {\n        var list1 = data.data.result;\n        $scope.list = data.data.result;\n        $scope.list = JSON.parse(list1);\n        $scope.ordersList = $scope.list.ordersList;\n        console.log(data);\n        $scope.pcountN = $scope.list.countNumber; //获取总订单的条数\n\n        if ($scope.pcountN > 0) {\n          dsp.removeNodataPic($('.orders-list'));\n          dsp.closeLoadPercent($('.orders-list'));\n        } else {\n          addNotSjFun();\n          dsp.closeLoadPercent($('.orders-list'));\n        }\n\n        $scope.ordstatusNum = $scope.list.allOrderCount2; //各种状态订单的数量\n\n        logisRemark($scope.list);\n        importFun(); //分页函数\n\n        numFun(); //调用给订单赋值的函数\n      }\n\n      function dcleFun() {\n        layer.closeAll(\"loading\");\n        dsp.closeLoadPercent($('.orders-list'));\n        dsp.cjMesFun(1);\n      }\n    }\n\n    $('#updata-btn-wrap').mouseenter(function () {\n      $('.ord-updata-div').show();\n    });\n    $('#updata-btn-wrap').mouseleave(function () {\n      $('.ord-updata-div').hide();\n    });\n\n    $scope.refershFun = function () {\n      $scope.syStuFlag = false;\n      $('.reordstu-dlist').animate({\n        height: '275px'\n      }, 300);\n      $scope.syStu = 0;\n      $scope.resOrdStu = 0;\n      $('#dcl-sel').val('100');\n      $scope.ordersList = [];\n      dsp.loadPercent($('.orders-list'), $(window).height() - 171, 47, 0);\n      var orData = {};\n      tjFun(orData);\n      orData.data = JSON.stringify(orData.data);\n      dsp.postFun('app/order/queryOrders', JSON.stringify(orData), dclsFun, dcleFun);\n\n      function dclsFun(data) {\n        console.log(data.data);\n        var list1 = data.data.result;\n        $scope.list = data.data.result;\n        $scope.list = JSON.parse(list1);\n        $scope.ordersList = $scope.list.ordersList;\n        $scope.pcountN = $scope.list.countNumber; //获取总订单的条数\n\n        if ($scope.pcountN > 0) {\n          dsp.removeNodataPic($('.orders-list'));\n          dsp.closeLoadPercent($('.orders-list'));\n        } else {\n          addNotSjFun();\n          dsp.closeLoadPercent($('.orders-list'));\n        }\n\n        $scope.ordstatusNum = $scope.list.allOrderCount2; //各种状态订单的数量\n\n        logisRemark($scope.list);\n        importFun(); //分页函数\n\n        numFun(); //调用给订单赋值的函数\n      }\n\n      function dcleFun() {\n        layer.closeAll(\"loading\");\n        dsp.closeLoadPercent($('.orders-list'));\n        dsp.cjMesFun(1);\n      }\n    }; //设置默认时间\n\n\n    function GetDateStr(AddDayCount) {\n      var dd = new Date();\n      dd.setDate(dd.getDate() + AddDayCount); //获取AddDayCount天后的日期\n\n      var y = dd.getFullYear();\n      var m = dd.getMonth() + 1; //获取当前月份的日期\n\n      var d = dd.getDate();\n\n      if (m < 10) {\n        m = '0' + m;\n      }\n\n      if (d < 10) {\n        d = '0' + d;\n      }\n\n      return y + \"-\" + m + \"-\" + d;\n    }\n\n    var aDate = GetDateStr(-45);\n    var enDate = GetDateStr(0);\n    $(\"#cj-stime\").val(aDate); //关键语句\n    // $(\"#cj-etime\").val('Now');   //关键语句\n\n    var orData = {};\n    orData.userId = bs.decode(localStorage.getItem('userId'));\n    orData.data = {};\n    orData.data.status = '1'; //请求的订单状态\n\n    orData.data.canhandler = 'y';\n    orData.data.page = 1; //请求的第几页   10*1-10Ò³Âë\n\n    orData.data.limit = 100; //每页限制的订单条数\n    //获取时间参数\n\n    var yStoresTime = $('#y-ord-sdate').val();\n    var yStoreeTime = $('#y-ord-edate').val();\n    var cjsTime = $('#cj-stime').val();\n    var cjeTime = $('#cj-etime').val();\n    orData.data.storeOrderDateBegin = yStoresTime; //店铺开始时间\n\n    orData.data.storeOrderDateEnd = yStoreeTime; //店铺结束时间\n\n    orData.data.cjOrderDateBegin = cjsTime; //cj开始时间\n\n    orData.data.cjOrderDateEnd = cjeTime; //cj结束时间\n\n    $scope.pageLimit = orData.data.limit;\n    $scope.countNumber = ''; //Ò»¹²¶àÉÙÌõ¶©µ¥\n\n    $scope.list = ''; //¶©µ¥ºÍ²úÆ·\n\n    $scope.orderList = ''; //¶©µ¥µÄÁÐ±íÊý¾Ý\n\n    $scope.productList = ''; //²úÆ·µÄÁÐ±íÊý¾Ý\n\n    $scope.flag = false; //ÅÐ¶Ï×´Ì¬\n    //给待提交订单里的下拉框赋值\n\n    $('#dcl-sel').val('100');\n    $('.direct-orders-ctrltatus-nav').click(function () {\n      bianliangtime++;\n    });\n    var a = $stateParams.idlist;\n\n    if (a) {\n      //console.log(a);\n      var idList = base64.decode(a);\n      console.log(idList);\n      orData.data.orderNumber = idList;\n    }\n\n    orData.data = JSON.stringify(orData.data);\n    $scope.pcountN = 0; //存储待提交订单的总条数 process required\n\n    console.log(JSON.stringify(orData));\n    dsp.postFun('app/order/queryOrders', JSON.stringify(orData), dclsFun, dcleFun);\n\n    function dclsFun(data) {\n      var list1 = data.data.result;\n      $scope.list = JSON.parse(list1);\n      console.log($scope.list.orderList);\n      $scope.shops = $scope.list.shops; //店铺的数组\n\n      delShopFun($scope.shops);\n      var excelShop = {};\n      excelShop.id = 'excel';\n      excelShop.name = 'Excel';\n      excelShop.rNAME = 'Excel';\n      $scope.shops.push(excelShop);\n      console.log($scope.shops);\n      $scope.ordersList = $scope.list.ordersList;\n      console.log($scope.ordersList);\n      console.log($scope.ordersList.orderArea);\n      $scope.pcountN = $scope.list.countNumber; //获取总订单的条数\n\n      console.log($scope.list.allOrderCount2);\n      $scope.ordstatusNum = $scope.list.allOrderCount2; //各种状态订单的数量\n\n      if ($scope.pcountN > 0) {\n        dsp.removeNodataPic($('.orders-list'));\n        dsp.closeLoadPercent($('.orders-list'));\n      } else {\n        addNotSjFun();\n        dsp.closeLoadPercent($('.orders-list'));\n      }\n\n      logisRemark($scope.list);\n      importFun(); //分页函数\n\n      numFun(); //调用给订单赋值的函数\n    }\n\n    function dcleFun() {\n      layer.closeAll(\"loading\");\n      dsp.closeLoadPercent($('.orders-list'));\n      dsp.cjMesFun(1);\n    } //给订单状态赋值的函数\n\n\n    function numFun() {\n      $scope.impprocessNum = $scope.ordstatusNum.yi;\n      $scope.cartNum = $scope.ordstatusNum.er;\n      $scope.incompleteNum = $scope.ordstatusNum.san;\n      $scope.cancelNum = $scope.ordstatusNum.si;\n      $scope.refundNum = $scope.ordstatusNum.wu;\n      $scope.allProNum = $scope.ordstatusNum.jiu;\n\n      if ($scope.impprocessNum == 0 && $scope.cartNum == 0 && $scope.incompleteNum == 0 && $scope.cancelNum == 0 && $scope.refundNum == 0) {\n        $scope.dataFound = true; //隐藏没有数据的图片\n\n        $scope.isordFlag = true; //显示关联搜索的内容\n      } else {\n        $scope.isordFlag = false; //隐藏关联搜索的内容\n      }\n    } //给物流加标记 - 物流备注信息分开写 [20-01-19]\n\n\n    function logisRemark(orderData) {\n      dsp.postFun('order/order/logisticsRemarkList', {}, function (res) {\n        var _ref2 = res || {},\n            data = _ref2.data;\n\n        if (data.statusCode == '200') {\n          logisRemarkHandle(Object.assign(orderData, {\n            remark: data.result\n          }));\n        } else {\n          logisRemarkHandle(Object.assign(orderData, {\n            remark: []\n          }));\n        }\n      }, function () {\n        logisRemarkHandle(Object.assign(orderData, {\n          remark: []\n        }));\n      });\n    } //给物流加标记\n\n\n    function logisRemarkHandle(res) {\n      console.log('订单信息 ->', res);\n      $scope.remarkList = res.remark;\n      console.log($scope.remarkList);\n      var listLength = $scope.ordersList.length;\n\n      for (var i = 0; i < listLength; i++) {\n        if ($scope.ordersList[i].order.LOGISTIC_NAME) {\n          for (var j = 0; j < $scope.remarkList.length; j++) {\n            if ($scope.ordersList[i].order.LOGISTIC_NAME == $scope.remarkList[j].nameen) {\n              if ($scope.remarkList[j].remarkstr) {\n                $scope.ordersList[i].order.remark = $scope.remarkList[j].remarkstr.toString().replace(/<br>/g, '');\n              } else {\n                $scope.ordersList[i].order.remark = $scope.remarkList[j].remark;\n              }\n\n              break; // console.log($scope.ordersList[i].order)\n            }\n          }\n\n          for (var k = 0; k < $scope.ordersList[i].order.LOGISTICINFO.length; k++) {\n            if ($scope.ordersList[i].order.LOGISTIC_NAME == $scope.ordersList[i].order.LOGISTICINFO[k].logisticName) {\n              $scope.ordersList[i].order.cast = $scope.ordersList[i].order.LOGISTICINFO[k].cast == null ? '0' : $scope.ordersList[i].order.LOGISTICINFO[k].cast;\n              break;\n            }\n          }\n\n          if ($scope.ordersList[i].order.LOGISTICINFO) {\n            for (var n = 0, nLen = $scope.ordersList[i].order.LOGISTICINFO.length; n < nLen; n++) {\n              if ($scope.ordersList[i].order.LOGISTIC_NAME == $scope.ordersList[i].order.LOGISTICINFO[n].logisticName && $scope.ordersList[i].order.LOGISTICINFO[n].remoteFee > 0) {\n                $scope.ordersList[i].order.remark = 'Additional Charges for Remote Address: ' + $scope.ordersList[i].order.LOGISTICINFO[n].remoteFee + 'USD';\n                break;\n              }\n            }\n          }\n        } //地址1包含固定值 限制相应的物流\n\n\n        if ($scope.ordersList[i].order.SHIPPING_ADDRESS && $scope.ordersList[i].order.SHIPPING_ADDRESS.indexOf('Po Box') >= 0) {\n          for (var _l = 0; _l < $scope.ordersList[i].order.LOGISTICINFO.length; _l++) {\n            if ($scope.ordersList[i].order.LOGISTIC_NAME == 'CJ Normal Express') {\n              $scope.ordersList[i].order.LOGISTIC_NAME = null;\n            }\n\n            if ($scope.ordersList[i].order.LOGISTICINFO[_l].logisticName == 'CJ Normal Express') {\n              $scope.ordersList[i].order.LOGISTICINFO.splice(_l, 1);\n              break;\n            }\n          }\n        } //循环检测epacket带电的订单\n\n\n        if ($scope.ordersList[i].order.LOGISTIC_NAME == 'ePacket') {\n          if ($scope.ordersList[i].product) {\n            for (var j = 0, len = $scope.ordersList[i].product.length; j < len; j++) {\n              if ($scope.ordersList[i].product[j].PROPERTY.indexOf(\"BATTERY\") >= 0 || $scope.ordersList[i].product[j].PROPERTY.indexOf(\"ELECTRONIC\") >= 0 || $scope.ordersList[i].product[j].PROPERTY.indexOf(\"HAVE_CREAM\") >= 0 || $scope.ordersList[i].product[j].PROPERTY.indexOf(\"HAVE_MAGNETISM\") >= 0) {\n                $scope.ordersList[i].order.remark = 'We have to use a special ePacket channel to ship this order as it contains sensitive material like: battery, liquid, cream, magnet etc. The shipping cost will be 15% higher than normal ePacket.';\n                break;\n              }\n            }\n          }\n        } //检测sku\n\n\n        if ($scope.ordersList[i].product) {\n          for (var k = 0, klen = $scope.ordersList[i].product.length; k < klen; k++) {\n            if ($scope.ordersList[i].product[k].SKU.indexOf('CJJJJTJT00947') != -1 || $scope.ordersList[i].product[k].SKU.indexOf('CJJJJTJT00700') != -1) {\n              if ($scope.ordersList[i].order.LOGISTIC_NAME == 'PostNL' || $scope.ordersList[i].order.LOGISTIC_NAME == 'S.F China Domestic') {\n                // console.log('默认是postnl')\n                $scope.ordersList[i].order.LOGISTICINFO = [];\n              } else {\n                if ($scope.ordersList[i].order.LOGISTICINFO) {\n                  // console.log('有备选物流')\n                  for (var l = 0, llen = $scope.ordersList[i].order.LOGISTICINFO.length; l < llen; l++) {\n                    if ($scope.ordersList[i].order.LOGISTICINFO[l].logisticName == 'PostNL' || $scope.ordersList[i].order.LOGISTICINFO[l].logisticName == 'S.F China Domestic') {\n                      $scope.ordersList[i].order.LOGISTIC_NAME = null;\n                      var logInfoArr = [];\n                      logInfoArr.push($scope.ordersList[i].order.LOGISTICINFO[l]);\n                      $scope.ordersList[i].order.LOGISTICINFO = logInfoArr; // console.log('备选有psotnl')\n\n                      break;\n                    } // console.log(l,llen)\n\n\n                    if (l == llen - 1) {\n                      $scope.ordersList[i].order.LOGISTIC_NAME = null;\n                      $scope.ordersList[i].order.LOGISTICINFO = []; // console.log('备选没有psotnl')\n                    }\n                  }\n                } else {// console.log('没有备选物流')\n                  }\n              }\n            }\n\n            if ($scope.ordersList[i].product[k].SKU.indexOf('CJJJJTJT01777') != -1) {\n              if ($scope.ordersList[i].order.LOGISTIC_NAME == 'CJ normal express') {\n                // console.log('默认是CJ normal express')\n                $scope.ordersList[i].order.LOGISTICINFO = [];\n              } else {\n                if ($scope.ordersList[i].order.LOGISTICINFO) {\n                  for (var m = 0, mlen = $scope.ordersList[i].order.LOGISTICINFO.length; m < mlen; m++) {\n                    if ($scope.ordersList[i].order.LOGISTICINFO[m].logisticName == 'CJ normal express') {\n                      $scope.ordersList[i].order.LOGISTIC_NAME = null;\n                      var logInfoArr = [];\n                      logInfoArr.push($scope.ordersList[i].order.LOGISTICINFO[m]);\n                      $scope.ordersList[i].order.LOGISTICINFO = logInfoArr; // console.log('备选有CJ normal express')\n\n                      break;\n                    }\n                  }\n                } else {// console.log('没有备选物流')\n                }\n              }\n            }\n\n            if ($scope.userId == '180c6f9410dd4415b45fba5c2695beee' && $scope.ordersList[i].product[k].SKU.indexOf('CJJZGJYL00009') != -1) {\n              if ($scope.ordersList[i].order.LOGISTIC_NAME == 'Electric PostNL') {\n                // console.log('默认是CJ normal express')\n                $scope.ordersList[i].order.LOGISTICINFO = [];\n              } else {\n                if ($scope.ordersList[i].order.LOGISTICINFO) {\n                  for (var m = 0, mlen = $scope.ordersList[i].order.LOGISTICINFO.length; m < mlen; m++) {\n                    if ($scope.ordersList[i].order.LOGISTICINFO[m].logisticName == 'Electric PostNL') {\n                      $scope.ordersList[i].order.LOGISTIC_NAME = null;\n                      var logInfoArr = [];\n                      logInfoArr.push($scope.ordersList[i].order.LOGISTICINFO[m]);\n                      $scope.ordersList[i].order.LOGISTICINFO = logInfoArr; // console.log('备选有CJ normal express')\n\n                      break;\n                    }\n                  }\n                } else {// console.log('没有备选物流')\n                }\n              }\n            }\n          }\n        }\n      }\n    } //显示大图\n\n\n    $('.orders-table').on('mouseenter', '.sp-smallimg', function () {\n      $(this).siblings('.hide-bigimg').show();\n    });\n    $('.orders-table').on('mouseenter', '.hide-bigimg', function () {\n      $(this).show();\n    });\n    $('.orders-table').on('mouseleave', '.sp-smallimg', function () {\n      $(this).siblings('.hide-bigimg').hide();\n    });\n    $('.orders-table').on('mouseleave', '.hide-bigimg', function () {\n      $(this).hide();\n    }); //批量修改物流 获取国家列表\n\n    dsp.postFun('app/order/getOrderCountry', null, function (data) {\n      console.log(data);\n      $scope.counList = data.data;\n      console.log($scope.counList);\n    }, function (data) {\n      console.log(data);\n    }); //获取物流方式\n\n    dsp.postFun('app/erplogistics/getLogisticType', null, function (data) {\n      console.log(data);\n      $scope.bulkWlList = data.data;\n      console.log($scope.bulkWlList);\n    }, function (data) {\n      console.log(data);\n    });\n    $scope.couneryInfo = '';\n    dsp.postFun('app/logistic/getcountry', null, function (data) {\n      console.log(data);\n\n      if (data.data.statusCode == 200) {\n        var countryObj = JSON.parse(data.data.result);\n        $scope.countryList = countryObj.countryList;\n        console.log($scope.countryList);\n      }\n    }, function (data) {\n      console.log(data);\n    });\n    console.log($scope.couneryInfo);\n    $scope.isChangeFlag = false;\n    $scope.nologistCs = 'y'; //是否无物流 查询没有物流的订单\n    //根据国家查询订单\n\n    $scope.counChangeFun = function () {\n      $scope.ordersList = [];\n      dsp.loadPercent($('.orders-list'), $(window).height() - 171, 47, 0);\n      console.log($scope.countryName);\n\n      if ($scope.countryName) {\n        //选中国家\n        $scope.isChangeFlag = true;\n        var upwlData = {};\n        tjFun(upwlData);\n        upwlData.data.logisticName = $scope.nologistCs;\n        upwlData.data.country = $scope.countryName;\n        upwlData.data = JSON.stringify(upwlData.data);\n        dsp.postFun('app/order/queryOrders', JSON.stringify(upwlData), function (data) {\n          console.log(data);\n          var list1 = JSON.parse(data.data.result);\n          console.log(list1);\n          $scope.ordersList = list1.ordersList;\n          console.log($scope.ordersList);\n          $scope.pcountN = list1.countNumber; //获取总订单的条数\n\n          console.log($scope.pcountN);\n\n          if ($scope.pcountN > 0) {\n            dsp.removeNodataPic($('.orders-list'));\n            dsp.closeLoadPercent($('.orders-list'));\n          } else {\n            addNotSjFun();\n            dsp.closeLoadPercent($('.orders-list'));\n          }\n\n          logisRemark(list1);\n          importFun(); //分页函数\n        }, function (err) {\n          layer.closeAll(\"loading\");\n          dsp.closeLoadPercent($('.orders-list'));\n          dsp.cjMesFun(1);\n        });\n      } else {\n        //所有国家\n        $scope.isChangeFlag = false;\n        var upwlData = {};\n        tjFun(upwlData);\n        upwlData.data.logisticName = '';\n        upwlData.data.country = '';\n        upwlData.data = JSON.stringify(upwlData.data);\n        dsp.postFun('app/order/queryOrders', JSON.stringify(upwlData), function (data) {\n          console.log(data);\n          var list1 = JSON.parse(data.data.result);\n          console.log(list1);\n          $scope.ordersList = list1.ordersList;\n          console.log($scope.ordersList);\n          $scope.pcountN = list1.countNumber; //获取总订单的条数\n\n          if ($scope.pcountN > 0) {\n            dsp.removeNodataPic($('.orders-list'));\n            dsp.closeLoadPercent($('.orders-list'));\n          } else {\n            addNotSjFun();\n            dsp.closeLoadPercent($('.orders-list'));\n          }\n\n          logisRemark(list1);\n          importFun(); //分页函数\n        }, function (err) {\n          layer.closeAll(\"loading\");\n          dsp.closeLoadPercent($('.orders-list'));\n          dsp.cjMesFun(1);\n        });\n      }\n    };\n\n    $scope.ischeckFlag = true; //是否选中\n\n    $scope.ischekFun = function (ev) {\n      $(ev.target).prop('checked', 'true');\n      $scope.ischeckFlag = !$scope.ischeckFlag;\n      console.log($scope.ischeckFlag);\n\n      if ($scope.ischeckFlag) {\n        $scope.ischeckFlag = true;\n        $scope.nologistCs = 'y';\n        $scope.counChangeFun();\n      } else {\n        $scope.ischeckFlag = false;\n        $scope.nologistCs = '';\n        $scope.counChangeFun();\n      }\n    }; //修改物流\n\n\n    $scope.bulkChangeWlFun = function () {\n      if ($scope.logisName) {\n        $scope.ordersList = [];\n        dsp.loadPercent($('.orders-list'), $(window).height() - 171, 47, 0);\n        var ids = '';\n        $('#z-dcl-ord .zcheckbox').each(function () {\n          ids += $(this).siblings('.dclord-sys-time').text() + ',';\n        });\n        console.log($scope.logisName);\n        console.log(ids);\n        var xgwlData = {};\n        xgwlData.logisic = $scope.logisName;\n        xgwlData.orderNums = ids;\n        console.log(JSON.stringify(xgwlData));\n        dsp.postFun('app/order/upOrderLogisics', JSON.stringify(xgwlData), function (data) {\n          console.log(data);\n\n          if (data.data.result == true) {\n            // alert(123)\n            $scope.logisName = ''; //把物流设置为请选择\n\n            var upwlData = {};\n            tjFun(upwlData);\n            upwlData.data.logisticName = $scope.nologistCs;\n            upwlData.data.country = $scope.countryName;\n            upwlData.data = JSON.stringify(upwlData.data);\n            dsp.postFun('app/order/queryOrders', JSON.stringify(upwlData), function (data) {\n              console.log(data);\n              var list1 = JSON.parse(data.data.result);\n              console.log(list1);\n              $scope.ordersList = list1.ordersList;\n              console.log($scope.ordersList);\n              $scope.pcountN = list1.countNumber; //获取总订单的条数\n\n              if ($scope.pcountN > 0) {\n                dsp.removeNodataPic($('.orders-list'));\n                dsp.closeLoadPercent($('.orders-list'));\n              } else {\n                addNotSjFun();\n                dsp.closeLoadPercent($('.orders-list'));\n              }\n\n              logisRemark(list1);\n              importFun(); //分页函数\n            }, function (err) {\n              layer.closeAll(\"loading\");\n              dsp.closeLoadPercent($('.orders-list'));\n              dsp.cjMesFun(1);\n            });\n          } else {\n            layer.closeAll(\"loading\");\n            dsp.closeLoadPercent($('.orders-list'));\n            layer.msg('Modify the logistics failure');\n          }\n        }, function (data) {\n          layer.closeAll(\"loading\");\n          dsp.closeLoadPercent($('.orders-list'));\n          console.log(data);\n        });\n      }\n    }; //高级搜索的物流查询\n\n\n    $scope.gjChangeWlFun = function () {\n      console.log($scope.gjlogisName);\n\n      if ($scope.gjlogisName) {\n        $scope.nologistCs = $scope.gjlogisName;\n      } else {\n        $scope.nologistCs = '';\n        console.log($scope.gjlogisName);\n      }\n\n      $scope.ordersList = [];\n      dsp.loadPercent($('.orders-list'), $(window).height() - 171, 47, 0);\n      var upwlData = {};\n      tjFun(upwlData);\n      upwlData.data.logisticName = $scope.nologistCs;\n      upwlData.data.country = $scope.countryName;\n      upwlData.data = JSON.stringify(upwlData.data);\n      console.log(upwlData);\n      dsp.postFun('app/order/queryOrders', JSON.stringify(upwlData), function (data) {\n        console.log(data);\n        var list1 = JSON.parse(data.data.result);\n        console.log(list1);\n        $scope.ordersList = list1.ordersList;\n        console.log($scope.ordersList);\n        $scope.pcountN = list1.countNumber; //获取总订单的条数\n\n        console.log($scope.pcountN);\n\n        if ($scope.pcountN > 0) {\n          dsp.removeNodataPic($('.orders-list'));\n          dsp.closeLoadPercent($('.orders-list'));\n        } else {\n          addNotSjFun();\n          dsp.closeLoadPercent($('.orders-list'));\n        }\n\n        logisRemark(list1);\n        importFun(); //分页函数\n      }, function (err) {\n        layer.closeAll(\"loading\");\n        dsp.closeLoadPercent($('.orders-list'));\n        dsp.cjMesFun(1);\n      });\n    };\n\n    function tjFun(tjcs) {\n      var showList = $('#dcl-sel').val() - 0;\n      var yStoresTime = $('#y-ord-sdate').val();\n      var yStoreeTime = $('#y-ord-edate').val();\n      var cjsTime = $('#cj-stime').val();\n      var cjeTime = $('#cj-etime').val();\n      var yStoreName = $.trim($('#y-pro-name').val());\n      var cjStoreName = $.trim($('#cj-pro-name').val());\n      var berName = $.trim($('.buyer-inp').val());\n      var searchinpVal = $('.ord-search-inp').val();\n      var seaWeight = $('.ord-sewei').val();\n      var seaSku = $('.ord-sesku').val();\n      var ordType = '';\n\n      if ($('.type-sel').val() == 'All') {\n        ordType = '';\n      } else if ($('.type-sel').val() == 'Shopify Imported') {\n        ordType = '2';\n      } else if ($('.type-sel').val() == 'Excel Imported') {\n        ordType = '1';\n      }\n\n      tjcs.data = {};\n      tjcs.data.status = '1'; //请求的订单状态\n\n      tjcs.data.canhandler = 'y';\n      tjcs.data.page = 1; //请求的第几页\n\n      tjcs.data.limit = showList; //每页限制的订单条数\n\n      tjcs.data.orderNumber = searchinpVal;\n      tjcs.data.storeOrderDateBegin = yStoresTime;\n      tjcs.data.cjOrderDateBegin = cjsTime;\n      tjcs.data.storeOrderDateEnd = yStoreeTime;\n      tjcs.data.cjOrderDateEnd = cjeTime;\n      tjcs.data.storeProductName = yStoreName;\n      tjcs.data.cjProductName = cjStoreName;\n      tjcs.data.buyerName = berName;\n      tjcs.data.orderType = ordType;\n      tjcs.data.weight = seaWeight;\n      tjcs.data.sku = seaSku;\n      tjcs.data.storeNumber = $scope.storeName;\n      tjcs.data.country = $scope.countryName;\n      tjcs.data.logisticName = $scope.gjlogisName;\n\n      if ($scope.userId == '738CB2BD-0D8C-4587-9779-8CFA9F788047' || $scope.userId == '{8DA0EC3E-E4A7-4D9B-8876-2A025515EBE0}') {\n        tjcs.data.storage = $scope.storage;\n      }\n    }\n\n    $scope.filterWeight = \"\";\n\n    $scope.isJustNumber = function (val) {\n      val = Number(val);\n\n      if (isNaN(val * 1) || val * 1 < 0) {\n        $scope.filterWeight = \"\";\n        return;\n      }\n\n      if (val > 9999) {\n        $scope.filterWeight = Number(\"\".concat(val).slice(0, -1));\n        return;\n      }\n\n      if (val.toString().split(\".\")[1] && val.toString().split(\".\")[1].length > 2) {\n        $scope.filterWeight = Number(Number(val).toFixed(3).slice(0, -1));\n        return;\n      }\n    };\n\n    $('.inp-num-go2').keydown(function () {\n      var curVal = $('.inp-num-go2').val();\n      curVal = curVal.replace(/[^\\d]/g, \"\");\n      $('.inp-num-go2').val(curVal);\n    });\n    $('.inp-num-go2').blur(function () {\n      var curVal = $('.inp-num-go2').val();\n      curVal = curVal.replace(/[^\\d]/g, \"\");\n      $('.inp-num-go2').val(curVal);\n    }); //鼠标移入移除 显示商品\n\n    $('.showsp-img').mouseenter(function () {\n      if ($(this).attr('src') == 'static/image/public-img/up.png') {\n        $(this).attr('src', 'static/image/public-img/up-hover.png');\n      } else if ($(this).attr('src') == 'static/image/public-img/down.png') {\n        $(this).attr('src', 'static/image/public-img/down-hover.png');\n      }\n    });\n    $('.showsp-img').mouseleave(function () {\n      if ($(this).attr('src') == 'static/image/public-img/up-hover.png') {\n        $(this).attr('src', 'static/image/public-img/up.png');\n      } else if ($(this).attr('src') == 'static/image/public-img/down-hover.png') {\n        $(this).attr('src', 'static/image/public-img/down.png');\n      }\n    });\n    $('.showsp-img').click(function () {\n      if ($(this).attr('src') == 'static/image/public-img/up-hover.png') {\n        $(this).attr('src', 'static/image/public-img/down-hover.png');\n        $('.orders-table .d-toggle-tr').show();\n        $('.orders-table .order-detail').addClass('order-click-active');\n      } else if ($(this).attr('src') == 'static/image/public-img/down-hover.png') {\n        $(this).attr('src', 'static/image/public-img/up-hover.png');\n        $('.orders-table .d-toggle-tr').hide();\n        $('.orders-table .order-detail').removeClass('order-click-active');\n      }\n    }); //点击事件\n\n    $('.orders-table').on('click', '.order-detail', function (event) {\n      // console.log(event)\n      if ($(event.target).hasClass('zcheckbox') || $(event.target).hasClass('dcl-ord-selwl')) {\n        return;\n      }\n\n      if ($(this).hasClass('order-click-active')) {\n        $(this).next().hide();\n        $(this).removeClass('order-click-active');\n      } else {\n        $(this).next().show();\n        $(this).addClass('order-click-active');\n      }\n    });\n    $('.orders-table').on('click', '.d-toggle-tr', function (event) {\n      $(this).show();\n      $(this).prev().addClass('order-click-active');\n    }); // 订单\n\n    $('.orders-table').on('mouseenter', '.order-detail>td', function () {\n      if ($(this).hasClass('order-time')) {\n        return;\n      }\n\n      $(this).parent().next().show();\n      $('.orders-table .order-detail').removeClass('order-detail-active');\n      $(this).parent().addClass('order-detail-active');\n    });\n    $('.orders-table').on('mouseleave', '.order-detail', function () {\n      if ($(this).hasClass('order-click-active')) {\n        $(this).next().show();\n      } else {\n        $(this).next().hide();\n      }\n    }); //商品\n\n    $('.orders-table').on('mouseenter', '.d-toggle-tr', function () {\n      $(this).show();\n    });\n    $('.orders-table').on('mouseleave', '.d-toggle-tr', function () {\n      if ($(this).prev().hasClass('order-click-active')) {\n        $(this).show();\n      } else {\n        $(this).hide();\n      }\n    }); //table\n\n    $('.orders-table').mouseleave(function () {\n      $('.orders-table .order-detail').removeClass('order-detail-active');\n    });\n    $scope.navList = [{\n      name: 'Process Required',\n      href: \"#/direct-orders\",\n      show: true\n    }, {\n      name: 'Cart',\n      href: \"#/imp-cart\"\n    }, {\n      name: 'Incomplete Orders',\n      href: \"#/imp-incomp\"\n    }, {\n      name: 'Canceled',\n      href: \"#/imp-cancel\"\n    }, {\n      name: 'Search All',\n      href: \"#/search-all\"\n    }, {\n      name: 'Store Orders',\n      href: \"#/AuthorizeOrder\"\n    }];\n    $('.direct-leftbara').click(function () {\n      $('.direct-leftbara').css('background-image', '');\n      $(this).css('background-image', 'linear-gradient(0deg,rgba(253, 162, 44, 1) 0%, rgba(247, 140, 41, 1) 78%, rgba(241, 118, 37, 1) 100%)');\n    }); // 左侧的导航添加滚动事件\n\n    $(document).scroll(function () {\n      if ($(document).scrollTop() >= 80) {\n        $('.left-nav').css({\n          position: 'fixed',\n          top: '80px'\n        });\n      } else {\n        $('.left-list').css({\n          position: 'relative',\n          top: '0'\n        });\n      }\n    }); //给被删除的订单添加弹框\n\n    $scope.showdelFun = function (ev, index, item) {\n      if (item.shopOrderStatus && item.shopOrderStatus != 'processing') {\n        $('.dcl-ord-tbody').eq(index).find('.hasdel-con').show();\n      }\n    };\n\n    $scope.hidedelFun = function (ev, index) {\n      $('.dcl-ord-tbody').eq(index).find('.hasdel-con').hide(); // console.log(index)\n    };\n\n    $scope.HasdeleteSureFun = function (index, item) {\n      $scope.isdelhasFlag = true;\n      $scope.hasIndex = index;\n      $scope.hasItemId = item.ID;\n    };\n\n    $scope.suredHasFun = function () {\n      layer.load(2);\n      $scope.isdelhasFlag = false;\n      var deleteData = {};\n      deleteData.orderNums = $scope.hasItemId;\n      deleteData.type = 2;\n      console.log(JSON.stringify(deleteData));\n      dsp.postFun('app/order/deleteOrder', JSON.stringify(deleteData), function (data) {\n        console.log(data);\n        layer.closeAll(\"loading\");\n\n        if (data.data.result == true) {\n          $scope.ordersList.splice($scope.hasIndex, 1);\n          layer.msg('Delete Success');\n        } else {\n          layer.closeAll(\"loading\");\n          layer.msg('Delete Error');\n        }\n      });\n    }; //恢复订单\n\n\n    $scope.keepOrdFun = function (index, item) {\n      $scope.iskeephasFlag = true;\n      $scope.hasIndex = index;\n      $scope.hasItemId = item.ID;\n    };\n\n    $scope.surekeepHasFun = function () {\n      layer.load(2);\n      $scope.iskeephasFlag = false;\n      var deleteData = {};\n      deleteData.id = $scope.hasItemId;\n      dsp.postFun('app/order/continueOrder', JSON.stringify(deleteData), function (data) {\n        console.log(data);\n        layer.closeAll(\"loading\");\n\n        if (data.data.result > 0) {\n          $scope.ordersList[$scope.hasIndex].order.shopOrderStatus = '';\n          layer.msg('Keep Success');\n        } else {\n          layer.closeAll(\"loading\");\n          layer.msg('Keep Error');\n        }\n      });\n    }; //恢复所有订单\n\n\n    $scope.keepAllFun = function () {\n      $scope.iskeepAllFlag = true;\n    };\n\n    $scope.surekeepAllFun = function () {\n      $scope.iskeepAllFlag = false;\n      layer.load(2);\n      dsp.postFun('app/order/continueOrderAll', {}, function (data) {\n        console.log(data);\n\n        if (data.data.result > 0) {\n          layer.msg('Keep Success');\n          freshList();\n        } else {\n          layer.closeAll(\"loading\");\n          layer.msg('Keep Error');\n        }\n      });\n    }; //删除所有订单\n\n\n    $scope.HasdeleteallFun = function (index, item) {\n      console.log(item);\n      $scope.shopStuType = item.shopOrderStatus;\n      $scope.isdeleteAllFlag = true;\n    };\n\n    $scope.suredeleteAllFun = function () {\n      $scope.isdeleteAllFlag = false;\n      console.log($scope.shopStuType);\n      layer.load(2);\n      var deleteAll = {};\n      deleteAll.type = $scope.shopStuType;\n      dsp.postFun('app/order/deleteOrderAll', JSON.stringify(deleteAll), function (data) {\n        console.log(data);\n\n        if (data.data.result > 0) {\n          layer.msg('Delete Success');\n          freshList();\n        } else {\n          layer.closeAll(\"loading\");\n          layer.msg('Delete Error');\n        }\n      });\n    };\n\n    var heBingIds = '';\n\n    $scope.heBingOrdFun = function () {\n      //合并订单\n      var hbAddressArr = [],\n          selCount = 0;\n      heBingIds = '';\n      $(\"#z-dcl-ord .zcheckbox\").each(function () {\n        if ($(this).attr('src') == 'static/image/direct-orders/multiple2.png') {\n          var hbItemObj = {};\n          hbItemObj.SHIPPING_ADDRESS = $(this).parent().siblings('.shipping-info').children('.adress1').text();\n          hbItemObj.shippingAddress2 = $(this).parent().siblings('.shipping-info').children('.adress2').text();\n          hbItemObj.CITY = $(this).parent().siblings('.shipping-info').children('.buyer-adress').children('.imp-procus-city').text();\n          hbItemObj.PROVINCE = $(this).parent().siblings('.shipping-info').children('.buyer-adress').children('.imp-procus-province').text();\n          hbItemObj.COUNTRY_CODE = $(this).parent().siblings('.shipping-info').children('.buyer-adress').children('.imp-procus-country').text();\n          hbItemObj.ordId = $(this).parent().siblings('.ord-cai').children('.order-id').text();\n          heBingIds += $(this).parent().siblings('.ord-cai').children('.order-id').text() + ',';\n          hbItemObj.cusName = $(this).parent().siblings('.shipping-info').children('.buyer-name').children('.cus-name').text();\n          hbItemObj.phoneNum = $(this).parent().siblings('.shipping-info').children('.phone-num').text();\n          hbItemObj.zip = $(this).parent().siblings('.shipping-info').children('.buyer-adress').children('.post-code').text();\n          selCount++;\n          hbAddressArr.push(hbItemObj);\n        }\n      });\n      var splitSelIdsArr = hbAddressArr.map(function (item) {\n        return item.ordId;\n      });\n      console.log(splitSelIdsArr);\n      console.log($scope.ordersList); // $scope.ordersList.some(item => {\n      //   if(item.order.ORDERSOURCE_TYPE === '7' && splitSelIdsArr.includes(item.order.ID)) {\n      //     console.log('123123')\n      //   }\n      // })\n\n      if ($scope.ordersList.some(function (item) {\n        return item.order.ORDERSOURCE_TYPE === '7' && splitSelIdsArr.includes(item.order.ID);\n      })) {\n        layer.msg('Orders cannot be combined.');\n        return;\n      }\n\n      console.log(hbAddressArr); // console.log(splitSelIds)\n\n      if (selCount > 1) {\n        if (mesIsEqual(hbAddressArr)) {\n          //国家 邮编 电话 姓名是否相同\n          $scope.heBingFlag = true;\n          $scope.hbAdrList = delAddRepFun(hbAddressArr);\n          $scope.hbAdrList[0]['flag'] = true;\n          $scope.addressOrdId = $scope.hbAdrList[0].ordId;\n          var checkedList = [];\n          $scope.ordersList.forEach(function (item) {\n            if (splitSelIdsArr.includes(item.order.ID)) checkedList = [].concat(_toConsumableArray(checkedList), [item.order]);\n          }); //去除没有店铺的选中项\n\n          checkedList = checkedList.filter(function (item) {\n            return item.STORE_NUMBER;\n          });\n          console.log(checkedList);\n          var uniqueArr = uniqueArrFn(checkedList, 'STORE_NUMBER');\n          $scope.mergeShopList = uniqueArr.map(function (item) {\n            return {\n              shopName: item.STORE_NAME,\n              shopId: item.STORE_NUMBER\n            };\n          });\n          $scope.selectMergeShop = $scope.mergeShopList.length === 1 ? $scope.mergeShopList[0].shopId : '';\n          $scope.selectErrText = ''; // console.log($scope.mergeShopList)\n        }\n      } else {\n        layer.msg('Please select at least one order');\n        return;\n      }\n    };\n\n    function uniqueArrFn() {\n      var arr = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n      var field = arguments.length > 1 ? arguments[1] : undefined;\n      var json = {};\n      return arr.filter(function (item) {\n        if (json[item[field]]) {\n          return false;\n        } else {\n          json[item[field]] = 1;\n          return true;\n        }\n      });\n    }\n\n    function mesIsEqual(arr) {\n      for (var i = 1, len = arr.length; i < len; i++) {\n        if ($.trim(arr[0].COUNTRY_CODE).toUpperCase() != $.trim(arr[i].COUNTRY_CODE).toUpperCase()) {\n          layer.msg('Cannot be combined due to different country', {\n            time: 4000\n          });\n          return false;\n        }\n\n        if ($.trim(arr[0].cusName).toUpperCase() != $.trim(arr[i].cusName).toUpperCase()) {\n          layer.msg('Cannot be combined due to different receiver name', {\n            time: 4000\n          });\n          return false;\n        }\n\n        if ($.trim(arr[0].phoneNum) != $.trim(arr[i].phoneNum)) {\n          layer.msg('Cannot be combined due to different phone numbers', {\n            time: 4000\n          });\n          return false;\n        }\n\n        if ($.trim(arr[0].zip).toUpperCase() != $.trim(arr[i].zip).toUpperCase()) {\n          layer.msg('Cannot be combined due to different postal codes', {\n            time: 4000\n          });\n          return false;\n        }\n      }\n\n      return true;\n    }\n\n    function delAddRepFun(array) {\n      var temp = [];\n      var l = array.length;\n\n      for (var i = 0; i < l; i++) {\n        for (var j = i + 1; j < l; j++) {\n          if (array[i].COUNTRY_CODE.toUpperCase() == array[j].COUNTRY_CODE.toUpperCase() && array[i].CITY.toUpperCase() == array[j].CITY.toUpperCase() && array[i].PROVINCE.toUpperCase() == array[j].PROVINCE.toUpperCase() && array[i].SHIPPING_ADDRESS.toUpperCase() == array[j].SHIPPING_ADDRESS.toUpperCase() && array[i].shippingAddress2.toUpperCase() == array[j].shippingAddress2.toUpperCase()) {\n            i++;\n            j = i;\n          }\n        }\n\n        temp.push(array[i]);\n      }\n\n      return temp;\n    }\n\n    $scope.sureHbFun = function () {\n      if ($scope.mergeShopList.length && !$scope.selectMergeShop) return $scope.selectErrText = 'Please select a store.';\n      $scope.selectErrText = '';\n      layer.load(2);\n      var params = {\n        ids: heBingIds,\n        addressOrderId: $scope.addressOrdId,\n        selectedShopId: $scope.selectMergeShop\n      };\n      dsp.postFun('order/order/mergeOrder', params, function (data) {\n        console.log(data);\n\n        if (data.data.statusCode == 200) {\n          var hbResArr = JSON.parse(data.data.result);\n          var resSucCount = 0,\n              resErrorCount = 0,\n              errorMessage;\n\n          if (hbResArr && JSON.stringify(hbResArr) != '[]') {\n            $scope.heBingFlag = false;\n\n            for (var i = 0, len = hbResArr.length; i < len; i++) {\n              if (hbResArr[i].result) {\n                resSucCount++;\n              } else {\n                resErrorCount++;\n                errorMessage = hbResArr[i].message[0];\n              }\n            }\n\n            if (resSucCount > 0 && resErrorCount < 1) {\n              layer.msg('Combine success');\n              resSucFreshFun();\n            } else {\n              if (resSucCount > 0) {\n                resSucFreshFun();\n                layer.msg(errorMessage, {\n                  time: 3000\n                });\n              } else {\n                errorMessage = hbResArr[0].message[0];\n                layer.closeAll(\"loading\");\n                layer.msg(errorMessage, {\n                  time: 3000\n                });\n              }\n            }\n          } else {\n            layer.closeAll(\"loading\");\n            layer.msg('Combine error');\n          }\n        } else {\n          layer.closeAll(\"loading\");\n          layer.msg(data.data.message);\n        }\n      }, function (data) {\n        console.log(data);\n        layer.closeAll(\"loading\");\n      });\n    };\n\n    var hbRecoverOrdProCount;\n\n    $scope.heBingRecover = function () {\n      var selCount = 0;\n      heBingIds = '';\n      hbRecoverOrdProCount = 0;\n      $(\"#z-dcl-ord .zcheckbox\").each(function () {\n        if ($(this).attr('src') == 'static/image/direct-orders/multiple2.png') {\n          heBingIds += $(this).parent().siblings('.ord-cai').children('.order-id').text() + ',';\n          hbRecoverOrdProCount = $(this).parent().siblings('.pro-count').text();\n          selCount++;\n        }\n      });\n      console.log(heBingIds.substring(0, 2));\n\n      if (selCount == 1 && heBingIds.substring(0, 2) == 'HB') {\n        $scope.heBingRecoverFlag = true;\n      } else {\n        layer.msg('You can recover only one combined order per operation. Please select a combined order.', {\n          time: 4000\n        });\n        return;\n      }\n    };\n\n    $scope.sureRecoverHbFun = function () {\n      layer.load(2);\n      dsp.postFun('order/order/recoverMergeOrder', {\n        'ids': heBingIds,\n        'quantity': hbRecoverOrdProCount\n      }, function (data) {\n        console.log(data);\n\n        if (data.data.statusCode == 200) {\n          $scope.heBingRecoverFlag = false;\n          layer.msg('recover success');\n          resSucFreshFun();\n        } else {\n          layer.closeAll(\"loading\");\n          layer.msg('Orders are possibly unqualified for recovery.', {\n            time: 3000\n          });\n        }\n      }, function (data) {\n        layer.closeAll(\"loading\");\n      });\n    };\n\n    $scope.radioCheckFun = function (item) {\n      for (var i = 0, len = $scope.hbAdrList.length; i < len; i++) {\n        $scope.hbAdrList[i]['flag'] = false;\n      }\n\n      item['flag'] = true;\n      $scope.addressOrdId = item.ordId;\n      console.log($scope.hbAdrList, $scope.addressOrdId);\n    }; //拆分订单\n\n\n    var splitSelIds = '';\n    $scope.selCountNum = 0;\n    $scope.duoPinCount = 0;\n    $scope.danPinCount = 0;\n    $scope.caiFenProArr = []; //可以拆分的商品\n\n    $scope.yiCaiFenArr = []; //已经拆分的商品\n\n    $scope.productSplitFun = function () {\n      var bool = false;\n      $scope.selCountNum = 0;\n      $scope.duoPinCount = 0;\n      $scope.danPinCount = 0;\n      $scope.caiFenProArr = []; //可以拆分的商品\n\n      $scope.yiCaiFenArr = []; //已经拆分的商品\n\n      $scope.ordSpGroup = [];\n      var itemOrdId, $curObj, itemOrdSpNum, spItemNum;\n      $(\"#z-dcl-ord .zcheckbox\").each(function () {\n        if ($(this).attr('src') == 'static/image/direct-orders/multiple2.png') {\n          itemOrdId = $.trim($(this).parent().siblings('.ord-cai').children('.order-id').text());\n          $scope.selCountNum++;\n          $curObj = $(this).parent().parent().parent().find('.d-toggle-tab');\n          itemOrdSpNum = $(this).siblings('.ord-sp-num').text();\n\n          if (itemOrdSpNum > 1) {\n            $scope.duoPinCount++; // console.log('多品')\n\n            for (var i = 0, len = $scope.ordersList.length; i < len; i++) {\n              if (itemOrdId == $scope.ordersList[i].order.ID) {\n                if ($scope.ordersList[i].order.ORDERSOURCE_TYPE === '7') {\n                  layer.msg('Orders cannot be splited.');\n                  bool = true;\n                  return false;\n                }\n\n                for (var k = 0, kLen = $scope.ordersList[i].product.length; k < kLen; k++) {\n                  $scope.ordersList[i].product[k]['ORDER_NUMBER'] = $scope.ordersList[i].order.ORDER_NUMBER;\n\n                  if ($scope.ordersList[i].product[k].QUANTITY > 1) {\n                    for (var j = 0; j < $scope.ordersList[i].product[k].QUANTITY; j++) {\n                      $scope.caiFenProArr = $scope.caiFenProArr.concat(JSON.parse(JSON.stringify($scope.ordersList[i].product[k])));\n                      console.log($scope.caiFenProArr); // console.log('我有多个')\n                    }\n                  } else {\n                    $scope.caiFenProArr = $scope.caiFenProArr.concat($scope.ordersList[i].product[k]);\n                    console.log($scope.caiFenProArr); // console.log('我有一个')\n                  }\n                } // break\n\n              }\n            }\n\n            $scope.caiFenProArr = $scope.caiFenProArr.filter(function (o) {\n              return o.product_type !== '3';\n            });\n            console.log($scope.caiFenProArr);\n          } else if (itemOrdSpNum == 1) {\n            $scope.danPinCount++;\n            console.log('单品');\n          } else {\n            console.log('没有商品');\n          }\n        }\n      }); // const splitSelIdsArr = splitSelIds.split(',').filter(i => i)\n      // console.log(splitSelIds)\n      // $scope.ordersList.some(item => {\n      //   if(item.order.ORDERSOURCE_TYPE === '7' && splitSelIdsArr.includes(item.order.Id)) {\n      //     console.log('123')\n      // }} )\n      // if($scope.ordersList.some(item => item.order.ORDERSOURCE_TYPE === '7' && splitSelIdsArr.includes(item.order.Id))) {\n      //   layer.msg('Supplier-shipped goods cannot be split');\n      //   return;\n      // }\n\n      if (!bool) {\n        if ($scope.selCountNum > 0) {\n          if ($scope.duoPinCount > 0) {\n            $scope.splitTkFlag = true;\n          } else {\n            layer.msg('Only orders with more than 1 product can be split.', {\n              time: 3000\n            });\n          }\n        } else {\n          layer.msg('Please select order(s) first!');\n        }\n      }\n    };\n\n    var checkedArr = []; //选中的商品\n\n    $scope.ordSpGroup = [];\n    var groupNum = 0;\n\n    $scope.splitBtnFun = function () {\n      //是否可以拆分\n      checkedArr = [];\n\n      for (var i = 0, len = $scope.caiFenProArr.length; i < len; i++) {\n        if ($scope.caiFenProArr[i].check) {\n          checkedArr.push($scope.caiFenProArr[i]);\n        }\n      }\n\n      if (checkedArr.length > 0) {\n        if (isRepeatFun(checkedArr) === false) {\n          // console.log('你选中的不是同一个订单下的商品')\n          layer.msg('The products selected are not from the same order.');\n        } else {\n          //判断是否选中了所有该订单下的商品 如果选中所有不能拆分\n          var inSpCusOrdId = checkedArr[0].ORDER_NUMBER;\n          var caiFenArrNotFoundFlag = false;\n\n          for (var i = 0, iLen = $scope.caiFenProArr.length; i < iLen; i++) {\n            if ($scope.caiFenProArr[i].ORDER_NUMBER == inSpCusOrdId && !$scope.caiFenProArr[i].check) {\n              // $scope.caiFenFlag = true; //无需提示 直接移动拆分\n              splitClickFun();\n              break;\n            }\n\n            if (i == $scope.caiFenProArr.length - 1) {\n              caiFenArrNotFoundFlag = true;\n            }\n          }\n\n          console.log(caiFenArrNotFoundFlag);\n\n          if (caiFenArrNotFoundFlag) {\n            if ($scope.yiCaiFenArr.length > 0) {\n              for (var j = 0, jLen = $scope.yiCaiFenArr.length; j < jLen; j++) {\n                if ($scope.yiCaiFenArr[j].ORDER_NUMBER == inSpCusOrdId) {\n                  splitClickFun();\n                  break;\n                }\n\n                if (j == $scope.yiCaiFenArr.length - 1) {\n                  layer.msg('Each group cannot include all products from the same order.', {\n                    time: 3000\n                  });\n                }\n              }\n            } else {\n              layer.msg('Each group cannot include all products from the same order.', {\n                time: 3000\n              });\n            }\n          }\n        }\n      } else {\n        // console.log('请选择商品')\n        layer.msg('Please select the products.');\n      }\n    };\n\n    function splitClickFun() {\n      var itemIdGoup = [];\n      groupNum++;\n      $scope.caiFenFlag = false;\n      var spIds = '';\n      var heBingArr = [],\n          heBingWeight = 0,\n          targetArr = [];\n      heBingArr.push(JSON.parse(JSON.stringify(checkedArr[0])));\n\n      for (var i = 0, len = checkedArr.length; i < len; i++) {\n        checkedArr[i]['groupNum'] = groupNum;\n        checkedArr[i].check = false;\n        spIds += checkedArr[i].ID + ',';\n\n        for (var k = $scope.caiFenProArr.length - 1; k >= 0; k--) {\n          if (checkedArr[i].ID == $scope.caiFenProArr[k].ID) {\n            heBingWeight += $scope.caiFenProArr[k].GRAMS;\n            targetArr.push(JSON.parse(JSON.stringify($scope.caiFenProArr[k])));\n            $scope.caiFenProArr.splice(k, 1);\n            break;\n          }\n        }\n      }\n\n      heBingArr[0].weight = heBingWeight;\n      heBingArr[0]['yuanSu'] = targetArr;\n      spIds = spIds.substring(0, spIds.length - 1);\n      var proIdStr = proIdStrFun(spIds);\n      itemIdGoup.push({\n        productid: proIdStr,\n        groupNum: groupNum\n      });\n      $scope.yiCaiFenArr = $scope.yiCaiFenArr.concat(heBingArr);\n      var obj = {};\n      obj[checkedArr[0].CJOrderId] = itemIdGoup;\n\n      if ($scope.ordSpGroup.length > 0) {\n        for (var k = 0, kLen = $scope.ordSpGroup.length; k < kLen; k++) {\n          if ($scope.ordSpGroup[k][checkedArr[0].CJOrderId]) {\n            $scope.ordSpGroup[k][checkedArr[0].CJOrderId].push(itemIdGoup[0]);\n            break;\n          }\n\n          if (k == kLen - 1) {\n            $scope.ordSpGroup.push(obj);\n          }\n        }\n      } else {\n        $scope.ordSpGroup.push(obj);\n      }\n\n      console.log($scope.ordSpGroup);\n    }\n\n    $scope.recoverFun = function (proNum, spId, ordId, item) {\n      $scope.itemGroupNum = proNum;\n      $scope.itemSpId = spId;\n      $scope.ordIdNum = ordId;\n      $scope.targetArr = item.yuanSu;\n      $scope.recoverFlag = true;\n    };\n\n    $scope.sureIsRecoverFun = function () {\n      for (var g = $scope.ordSpGroup.length - 1; g >= 0; g--) {\n        if ($scope.ordSpGroup[g][$scope.ordIdNum] && $scope.ordSpGroup[g][$scope.ordIdNum][0].groupNum == $scope.itemGroupNum) {\n          $scope.ordSpGroup.splice(g, 1);\n          break;\n        }\n      }\n\n      for (var i = $scope.yiCaiFenArr.length - 1; i >= 0; i--) {\n        if ($scope.yiCaiFenArr[i] && $scope.yiCaiFenArr[i].groupNum == $scope.itemGroupNum) {\n          for (var j = 0, jLen = $scope.yiCaiFenArr[i].yuanSu.length; j < jLen; j++) {\n            $scope.caiFenProArr.push(JSON.parse(JSON.stringify($scope.yiCaiFenArr[i].yuanSu[j])));\n          }\n\n          $scope.yiCaiFenArr.splice(i, 1);\n        }\n      }\n\n      $scope.recoverFlag = false;\n    };\n\n    $scope.closeSplitTkFun = function () {\n      $scope.isCloseSplitFlag = true;\n    };\n\n    $scope.sureCloseSplitTkFun = function () {\n      $scope.splitTkFlag = false;\n      $scope.isCloseSplitFlag = false;\n      $scope.yiCaiFenArr = [];\n      $scope.caiFenProArr = [];\n      $scope.ordSpGroup = [];\n    };\n\n    $scope.splitComFun = function () {\n      //确定拆分\n      if ($scope.yiCaiFenArr.length < 1) {\n        layer.msg('Please select at least one product.');\n        return;\n      }\n\n      $scope.confirmEndFlag = true;\n    };\n\n    var initClickFlag = true;\n\n    $scope.splitConfirmEndFun = function () {\n      // console.log('触发几次')\n      if (!initClickFlag) {\n        return;\n      }\n\n      initClickFlag = false;\n      $scope.confirmEndFlag = false;\n      $scope.splitTkFlag = false;\n      layer.load(2);\n      var cjOrdId, spId;\n      var jsonObj = {};\n\n      if ($scope.caiFenProArr.length > 0) {\n        for (var i = 0, len = $scope.caiFenProArr.length; i < len; i++) {\n          cjOrdId = $scope.caiFenProArr[i].CJOrderId;\n          spId = $scope.caiFenProArr[i].ID;\n\n          if (jsonObj[cjOrdId]) {\n            jsonObj[cjOrdId] += ',' + spId;\n          } else {\n            jsonObj[cjOrdId] = spId;\n          }\n        }\n\n        console.log(jsonObj);\n        var proIdStr;\n\n        for (var key in jsonObj) {\n          proIdStr = proIdStrFun(jsonObj[key]);\n\n          for (var x = 0, xLen = $scope.ordSpGroup.length; x < xLen; x++) {\n            if ($scope.ordSpGroup[x][key]) {\n              $scope.ordSpGroup[x][key].push({\n                'productid': proIdStr\n              });\n              break;\n            }\n\n            if (x == xLen - 1) {\n              var weiCaiArr = [];\n              var ordItemObj = {};\n              weiCaiArr.push({\n                'productid': proIdStr\n              });\n              ordItemObj[key] = weiCaiArr;\n              $scope.ordSpGroup.push(ordItemObj);\n            }\n          }\n        }\n      }\n\n      console.log($scope.ordSpGroup);\n      $scope.caiFenProArr = []; //拼完左边清空 防止再次拼接\n\n      dsp.postFun('order/order/splitOrderByProduct', JSON.stringify($scope.ordSpGroup), function (data) {\n        console.log(data);\n        initClickFlag = true;\n\n        if (data.data.statusCode == 200) {\n          $scope.yiCaiFenArr = [];\n          $scope.ordSpGroup = [];\n          var splitResArr = JSON.parse(data.data.result);\n          var resSucCount = 0,\n              resErrorCount = 0,\n              errorMessage;\n          console.log(splitResArr);\n\n          if (splitResArr && JSON.stringify(splitResArr) != '[]') {\n            for (var i = 0, len = splitResArr.length; i < len; i++) {\n              if (splitResArr[i].result) {\n                resSucCount++;\n              } else {\n                resErrorCount++;\n                errorMessage = splitResArr[i].message[0]; // console.log(errorMessage)\n              }\n            }\n\n            if (resSucCount > 0 && resErrorCount < 1) {\n              layer.msg('split success');\n              resSucFreshFun();\n            } else {\n              if (resSucCount > 0) {\n                resSucFreshFun();\n                layer.msg(errorMessage, {\n                  time: 3000\n                });\n              } else {\n                errorMessage = splitResArr[0].message[0];\n                layer.closeAll(\"loading\");\n                layer.msg(errorMessage, {\n                  time: 3000\n                });\n              }\n            }\n          } else {\n            layer.msg(\"Oops, split failed. sNotes: 1. The Item Quantity is supposed to be greater than 1; 2. Unknown reasons. Please try it again\");\n            layer.closeAll(\"loading\");\n          }\n        } else {\n          layer.msg(\"Oops, split failed. sNotes: 1. The Item Quantity is supposed to be greater than 1; 2. Unknown reasons. Please try it again\");\n          layer.closeAll(\"loading\");\n        }\n      }, function (data) {\n        console.log(data);\n        initClickFlag = true;\n        layer.closeAll(\"loading\");\n      });\n    };\n\n    function resSucFreshFun() {\n      $('#z-dcl-ord .zchecked-all').attr('src', 'static/image/direct-orders/multiple1.png');\n      var orData = {};\n      tjFun(orData);\n      orData.data = JSON.stringify(orData.data);\n      dsp.postFun('app/order/queryOrders', JSON.stringify(orData), dclsFun, dcleFun);\n\n      function dclsFun(data) {\n        console.log(data.data);\n        var list1 = data.data.result;\n        $scope.list = data.data.result;\n        $scope.list = JSON.parse(list1);\n        $scope.ordersList = $scope.list.ordersList;\n        console.log($scope.ordersList);\n        $scope.pcountN = $scope.list.countNumber; //获取总订单的条数\n\n        if ($scope.pcountN > 0) {\n          dsp.removeNodataPic($('.orders-list'));\n          dsp.closeLoadPercent($('.orders-list'));\n        } else {\n          addNotSjFun();\n          dsp.closeLoadPercent($('.orders-list'));\n        }\n\n        layer.closeAll(\"loading\");\n        $scope.ordstatusNum = $scope.list.allOrderCount2; //各种状态订单的数量\n\n        logisRemark($scope.list);\n        importFun(); //分页函数\n\n        numFun(); //调用给订单赋值的函数\n      }\n\n      function dcleFun() {\n        layer.closeAll(\"loading\");\n        dsp.closeLoadPercent($('.orders-list'));\n        dsp.cjMesFun(1);\n      }\n    }\n\n    function proIdStrFun(spIds) {\n      var csProArr = spIds.split(',');\n      var csHashObj = {};\n\n      for (var j = 0, jLen = csProArr.length; j < jLen; j++) {\n        if (csHashObj[csProArr[j]]) {\n          csHashObj[csProArr[j]] = csHashObj[csProArr[j]] - 0 + 1;\n        } else {\n          csHashObj[csProArr[j]] = 1;\n        }\n      }\n\n      var proIdStr = JSON.stringify(csHashObj).replace('{', '').replace('}', '').replace(/\\\"/g, '');\n      return proIdStr;\n    }\n\n    function isRepeatFun(arr) {\n      var outCusId;\n\n      for (var i = 0, len = arr.length; i < len; i++) {\n        outCusId = arr[i].ORDER_NUMBER;\n\n        for (var j = 0, jLen = arr.length; j < jLen; j++) {\n          if (outCusId != arr[j].ORDER_NUMBER) {\n            return false;\n          }\n        }\n      }\n    } //recover\n\n\n    var recoverIds;\n\n    $scope.recoverOrdBtn = function () {\n      recoverIds = '';\n      var selCount = 0;\n      $(\"#z-dcl-ord .zcheckbox\").each(function () {\n        if ($(this).attr('src') == 'static/image/direct-orders/multiple2.png') {\n          recoverIds += $(this).parent().siblings('.ord-cai').children('.order-id').text() + ',';\n          selCount++;\n        }\n      });\n\n      if (selCount > 0) {\n        $scope.isRecoverFlag = true;\n      } else {\n        layer.msg('Please select order(s) first!');\n        return;\n      }\n    };\n\n    $scope.sureRecoverFun = function () {\n      dsp.load();\n      var upJson = {};\n      upJson.ids = recoverIds;\n      dsp.postFun('order/order/recoverSplitOrder', JSON.stringify(upJson), function (data) {\n        dsp.closeLoad();\n        $scope.isRecoverFlag = false;\n\n        if (data.data.statusCode == 200) {\n          var _dclsFun = function _dclsFun(data) {\n            console.log(data.data);\n            var list1 = data.data.result;\n            $scope.list = data.data.result;\n            $scope.list = JSON.parse(list1);\n            $scope.ordersList = $scope.list.ordersList;\n            console.log($scope.ordersList);\n            $scope.pcountN = $scope.list.countNumber; //获取总订单的条数\n\n            if ($scope.pcountN > 0) {\n              dsp.removeNodataPic($('.orders-list'));\n              dsp.closeLoadPercent($('.orders-list'));\n            } else {\n              addNotSjFun();\n              dsp.closeLoadPercent($('.orders-list'));\n            }\n\n            $scope.ordstatusNum = $scope.list.allOrderCount2; //各种状态订单的数量\n\n            logisRemark($scope.list);\n            importFun(); //分页函数\n\n            numFun(); //调用给订单赋值的函数\n          };\n\n          var _dcleFun = function _dcleFun() {\n            layer.closeAll(\"loading\");\n            dsp.closeLoadPercent($('.orders-list'));\n            dsp.cjMesFun(1);\n          };\n\n          layer.msg('recover success');\n          $('#z-dcl-ord .zchecked-all').attr('src', 'static/image/direct-orders/multiple1.png');\n          var orData = {};\n          tjFun(orData);\n          orData.data = JSON.stringify(orData.data);\n          dsp.postFun('app/order/queryOrders', JSON.stringify(orData), _dclsFun, _dcleFun);\n        } else {\n          layer.msg('Orders are possibly unqualified for recovery.', {\n            time: 3000\n          });\n        }\n      }, function (data) {\n        console.log(data);\n        dsp.closeLoad();\n      });\n    }; //重量拆分\n\n\n    $scope.isSplitFun = function () {\n      $scope.selCountNum = 0;\n      $scope.duoPinCount = 0;\n      $scope.danPinCount = 0;\n      $scope.caiFenProArr = []; //可以拆分的商品\n\n      $scope.yiCaiFenArr = []; //已经拆分的商品\n\n      splitSelIds = '';\n      var itemOrdId;\n      var $curObj, itemOrdSpNum, spItemNum;\n      $(\"#z-dcl-ord .zcheckbox\").each(function () {\n        if ($(this).attr('src') == 'static/image/direct-orders/multiple2.png') {\n          itemOrdId = $.trim($(this).parent().siblings('.ord-cai').children('.order-id').text());\n          $scope.selCountNum++;\n          $curObj = $(this).parent().parent().parent().find('.d-toggle-tab');\n          itemOrdSpNum = $(this).siblings('.ord-sp-num').text();\n\n          if (itemOrdSpNum > 1) {\n            $scope.duoPinCount++;\n            splitSelIds += $(this).parent().siblings('.ord-cai').children('.order-id').text() + ',';\n          } else if (itemOrdSpNum == 1) {\n            $scope.danPinCount++;\n          } else {\n            console.log('没有商品');\n          }\n        }\n      });\n      var splitSelIdsArr = splitSelIds.split(',').filter(function (i) {\n        return i;\n      });\n      console.log(splitSelIdsArr);\n      console.log($scope.ordersList);\n\n      if ($scope.ordersList.some(function (item) {\n        return item.order.ORDERSOURCE_TYPE === '7' && splitSelIdsArr.includes(item.order.ID);\n      })) {\n        layer.msg('Orders cannot be split.');\n        return;\n      }\n\n      if ($scope.selCountNum > 0) {\n        if ($scope.duoPinCount > 0) {\n          $scope.splitFlag = true;\n        } else {\n          layer.msg('Only orders with more than 1 product can be split.', {\n            time: 3000\n          });\n        }\n      } else {\n        layer.msg('Please select order(s) first!');\n      }\n    };\n\n    $scope.splitOrdFun = function () {\n      if (!$scope.splitWeight) {\n        layer.msg('Please enter weight!');\n        return;\n      }\n\n      if ($scope.splitWeight > 2000 || $scope.splitWeight < 1) {\n        layer.msg('Please enter a correct weight');\n        return;\n      }\n\n      layer.load(2);\n      $scope.splitFlag = false;\n      var splData = {};\n      splData.ids = splitSelIds;\n      splData.weight = Math.floor($scope.splitWeight);\n      dsp.postFun('order/order/splitOrderByWeight', JSON.stringify(splData), function (data) {\n        console.log(data);\n\n        if (data.data.statusCode == 200) {\n          var splitResArr = JSON.parse(data.data.result);\n          var resSucCount = 0,\n              resErrorCount = 0,\n              errorMessage;\n          console.log(splitResArr);\n\n          if (splitResArr && JSON.stringify(splitResArr) != '[]') {\n            for (var i = 0, len = splitResArr.length; i < len; i++) {\n              if (splitResArr[i].result) {\n                resSucCount++;\n              } else {\n                resErrorCount++;\n                errorMessage = splitResArr[i].message[0];\n              }\n            }\n\n            if (resSucCount > 0 && resErrorCount < 1) {\n              layer.msg('split success');\n              resSucFreshFun();\n            } else {\n              if (resSucCount > 0) {\n                resSucFreshFun();\n                layer.msg(errorMessage, {\n                  time: 3000\n                });\n              } else {\n                errorMessage = splitResArr[0].message[0];\n                dsp.closeLoad();\n                layer.msg(errorMessage, {\n                  time: 3000\n                });\n              }\n            }\n          } else {\n            layer.msg(\"Oops, split failed.\\n              Notes: 1. The Item Quantity is supposed to be greater than 1; 2. Unknown reasons. Please try it again\");\n            dsp.closeLoad();\n          }\n        } else {\n          dsp.closeLoad();\n          layer.msg(\"Oops, split failed.\\n            Notes: 1. The Item Quantity is supposed to be greater than 1; 2. Unknown reasons. Please try it again\");\n        }\n      }, function (data) {\n        console.log(data);\n        dsp.closeLoad();\n      });\n    };\n\n    $scope.properMesFun = function (pro, sku) {\n      console.log(pro);\n      console.log(sku);\n      $scope.newCusDesignArr = [];\n\n      if (Object.prototype.toString.call(pro) === \"[object Array]\") {\n        $scope.properMesType = 'arrayType';\n        $scope.propertiesFlag = true;\n      } else if (Object.prototype.toString.call(pro) === '[object Object]') {\n        $scope.properMesType = 'objectType';\n        $scope.propertiesFlag = true;\n\n        if (pro.type == 3 || pro.type == 4) {\n          if (pro.customPodDesign) {\n            for (var i = 0, len = pro.customPodDesign.length; i < len; i++) {\n              pro.customPodDesign[i]['img'] = pro.customPodDesign[i].links[0];\n              $scope.newCusDesignArr.push(pro.customPodDesign[i]);\n            }\n          } else if (pro.customDesign || pro.customeDesign) {\n            var customDesign = pro.customDesign || pro.customeDesign;\n\n            for (var _i2 = 0, _len = customDesign.length; _i2 < _len; _i2++) {\n              customDesign[_i2]['img'] = customDesign[_i2].links[0];\n              $scope.newCusDesignArr.push(customDesign[_i2]);\n            }\n          }\n        }\n\n        console.log($scope.newCusDesignArr);\n      } else {\n        $scope.properMesType = 'otherType';\n        layer.msg('No POD details available at present.');\n      }\n\n      $scope.propertiesMes = pro;\n      $scope.propertiesMes.customMessgae = pro.customMessgae || pro.customMessage;\n      console.log($scope.propertiesMes);\n    };\n\n    $scope.tuCengFun = function (arr) {\n      $scope.tuCengArr = arr;\n      $scope.tuCengFlag = true;\n    };\n\n    $scope.copyDelFun = function (val) {\n      //如果这里换为 input 则不支持换行\n      val = JSON.stringify(val);\n      var temp = document.createElement('textarea');\n      temp.value = val;\n      console.log(val, temp.value);\n      document.body.appendChild(temp);\n      temp.select(); // 选择对象\n\n      document.execCommand(\"Copy\"); // 执行浏览器复制命令\n\n      temp.style.display = 'none';\n      layer.msg('Copied Successfully');\n    };\n\n    function isObjArr(value) {\n      if (Object.prototype.toString.call(value) === \"[object Array]\") {\n        console.log('value是数组');\n      } else if (Object.prototype.toString.call(value) === '[object Object]') {\n        console.log('value是对象');\n      } else {\n        console.log('value不是数组也不是对象');\n      }\n    }\n\n    $scope.exportOrder = function () {\n      $scope.dcordFlag = true;\n      console.log($scope.ordersList);\n    };\n\n    $scope.goActexportOrder = function () {\n      var checkIds = '';\n\n      for (var i = 0, len = $scope.ordersList.length; i < len; i++) {\n        if ($scope.ordersList[i].check) {\n          checkIds += $scope.ordersList[i].order.ID + ',';\n        }\n      }\n\n      var orData = {};\n      tjFun(orData);\n      orData.data.exportOrderIds = checkIds;\n      orData.data = JSON.stringify(orData.data);\n      layer.load(2);\n      dsp.postFun('app/client_erp/exportOrders', JSON.stringify(orData), function (data) {\n        layer.closeAll('loading');\n        console.log(data);\n\n        if (data.data.statusCode == 200) {\n          $scope.dcordFlag = false;\n          $scope.dcordCallbackFlag = true;\n          $scope.excelHref = JSON.parse(data.data.result).href;\n        } else {\n          layer.msg('Export order error.');\n        }\n      });\n    };\n\n    $scope.bjSkuFun = function (ev) {\n      $(ev.target).hide(); //把自己隐藏掉\n\n      $(ev.target).siblings('.bj-spsku').removeAttr('disabled');\n      $(ev.target).siblings('.bjsame-btn').show();\n    };\n\n    $scope.bjSkuQxFun = function (ev, sku) {\n      //隐藏保存 取消的按钮\n      $(ev.target).parent().find('.bjsame-btn').hide(); //显示编辑按钮\n\n      $(ev.target).siblings('.xg-spskubtn').show();\n      $(ev.target).siblings('.bj-spsku').val(sku); //给这条商品设置禁止输入\n\n      $(ev.target).siblings('.bj-spsku').attr('disabled', 'true');\n    };\n\n    function updateSKUFail(item) {\n      var sku = item.sku.split('-')[0];\n      layer.confirm('<p style=\"padding:20px 0\">SKU modified. Please connect the variant first.</p>', {\n        title: false,\n        closeBtn: 0,\n        btn: ['Connect', 'Cancel'] //按钮\n\n      }, function (index) {\n        layer.close(index);\n        location.href = \"#/products-connection/pending-connection///\".concat(base64.encode(sku));\n      });\n    }\n\n    $scope.bjSkuSureFun = function (ev, item, pindex, index, pItem) {\n      var bjSkuInpVal = $.trim($(ev.target).siblings('.bj-spsku').val());\n\n      if (bjSkuInpVal.includes('BZSP')) {\n        layer.msg('You cannot modify it to a packaging product SKU.');\n        return false;\n      }\n\n      layer.load(2);\n      var upData = {\n        id: item.ID,\n        sku: bjSkuInpVal,\n        STORE_NAME: pItem.STORE_NAME,\n        isGroupSku: item.isGroupProduct == 1 ? '1' : '0'\n      };\n      dsp.postFun('app/order/cjUpdateSku', JSON.stringify(upData), function (data) {\n        console.log(data);\n        dsp.closeLoad();\n\n        if (data.data.code && data.data.code != 200) {\n          layer.msg(data.data.message);\n          return;\n        }\n\n        if (data.data.result == 1) {\n          layer.msg('Modified Successfully');\n          console.log($scope.ordersList[pindex]);\n          $scope.ordersList[pindex].product[index].SKU = bjSkuInpVal;\n          $scope.ordersList[pindex].product[index].PRICE = data.data.price;\n          var oneOrdCjAmount = 0;\n          $scope.ordersList[pindex].product.forEach(function (item, i) {\n            if (item.SKU.indexOf('BZSP') == -1) oneOrdCjAmount += item.PRICE * item.QUANTITY;\n          });\n          $scope.ordersList[pindex].order.ORDER_AMOUNT = oneOrdCjAmount.toFixed(2) - 0; //显示编辑按钮\n\n          $(ev.target).siblings('.xg-spskubtn').show(); //隐藏保存 取消的按钮\n\n          $(ev.target).parent().find('.bjsame-btn').hide(); //给这条商品设置禁止输入\n\n          $(ev.target).siblings('.bj-spsku').attr('disabled', 'true');\n\n          if (data.data.type == 'image') {\n            $scope.ordersList[pindex].product[index].image = data.data.img;\n          } else {\n            $scope.ordersList[pindex].product[index].cjImage = data.data.img;\n          }\n        } else {\n          dsp.closeLoad();\n          var itemModSku = $scope.ordersList[pindex].product[index].SKU;\n          var itemSpModSku = itemModSku.split('-');\n\n          if (data.data.code == '501') {\n            return updateSKUFail({\n              sku: bjSkuInpVal\n            });\n          }\n\n          if (itemSpModSku[0] == bjSkuInpVal.split('-')[0]) {\n            layer.msg('Modify Failed');\n          } else {\n            layer.msg('SKU not found');\n          }\n        }\n      }, function (data) {\n        dsp.closeLoad();\n      });\n    };\n\n    var dclordersid = ''; //待处理订单正常订单的id\n\n    var splitordcs = ''; //存储拆分出来的参数\n\n    var splitNormalId = \"\"; //存储被拆分订单的id\n\n    var splitcjid = ''; //拆分出来订单的商品id\n\n    var splitowlfs = ''; //拆分订单的物流方式\n\n    var dclordwlstu = ''; //订单的物流方式\n\n    var remarkFlag = false;\n    var remarkCon = ''; //待处理订单被拆分过的订单\n\n    var ordRemark = ''; //存储被拆分订单的属性\n\n    var dclSecNum = 0; //存储待处理选中的订单数量\n    //给待处理订单添加选中非选中状态\n\n    $('#z-dcl-ord').on('click', '.zcheckbox', function (event) {\n      event.stopPropagation();\n\n      if ($(this).attr('src') == 'static/image/direct-orders/multiple1.png') {\n        // alert(1)\n        $(this).attr('src', 'static/image/direct-orders/multiple2.png');\n        dclSecNum++;\n        ordRemark = $(this).parent().parent().attr(\"remark\");\n        var equalNum = $(this).parent().parent().attr(\"equal\");\n\n        if (equalNum !== undefined) {\n          //被拆分过\n          $('#z-dcl-ord .order-detail').each(function () {\n            //循环所有的订单\n            if ($(this).attr('equal') == equalNum) {\n              $(this).children('.order-time').children('.zcheckbox').attr('src', 'static/image/direct-orders/multiple2.png');\n            }\n          });\n        }\n\n        if (dclSecNum == $('#z-dcl-ord .zcheckbox').length) {\n          $('#z-dcl-ord .zchecked-all').attr('src', 'static/image/direct-orders/multiple2.png');\n        }\n      } else if ($(this).attr('src') == 'static/image/direct-orders/multiple2.png') {\n        $(this).attr('src', 'static/image/direct-orders/multiple1.png');\n        var equalNum1 = $(this).parent().parent().attr(\"equal\");\n\n        if (equalNum1 !== undefined) {\n          //被拆分过\n          $('#z-dcl-ord .order-detail').each(function () {\n            //循环所有的订单\n            if ($(this).attr('equal') == equalNum1) {\n              $(this).children('.order-time').children('.zcheckbox').attr('src', 'static/image/direct-orders/multiple1.png');\n            }\n          });\n        }\n\n        dclSecNum--;\n\n        if (dclSecNum != $('#z-dcl-ord .zcheckbox').length) {\n          $('#z-dcl-ord .zchecked-all').attr('src', 'static/image/direct-orders/multiple1.png');\n        }\n      }\n    }); //给待处理订单添加全选事件\n\n    $('#z-dcl-ord').on('click', '.zchecked-all', function () {\n      var listNum = 0;\n\n      if ($(this).attr('src') == 'static/image/direct-orders/multiple1.png') {\n        $(this).attr('src', 'static/image/direct-orders/multiple2.png');\n        $('#z-dcl-ord .zcheckbox').each(function () {\n          //循环所有的订单\n          var questionOrdVal = $(this).siblings('.isdel-instore').text();\n          console.log(questionOrdVal);\n\n          if (!questionOrdVal || questionOrdVal == 'processing') {\n            $(this).attr('src', 'static/image/direct-orders/multiple2.png');\n            listNum++;\n          }\n        });\n        dclSecNum = listNum;\n      } else {\n        $(this).attr('src', 'static/image/direct-orders/multiple1.png');\n        $('#z-dcl-ord .zcheckbox').each(function () {\n          //循环所有的订单\n          var questionOrdVal = $(this).siblings('.isdel-instore').text();\n\n          if (!questionOrdVal || questionOrdVal == 'processing') {\n            $(this).attr('src', 'static/image/direct-orders/multiple1.png');\n          }\n        });\n        dclSecNum = 0;\n      }\n    }); // 生成一个随机函数给拆分的订单赋值\n\n    $scope.numFun1 = function () {\n      var str = '';\n\n      for (var i = 0; i < 5; i++) {\n        str += Math.floor(Math.random() * 10);\n      }\n\n      return str;\n    };\n\n    function transLogist(arr) {\n      layer.load(2);\n      dsp.postFun(\"app/order/updateOrderLogisicsBatch\", {\n        orderNums: arr.join(','),\n        logisic: 'USPS+'\n      }, function (data) {\n        layer.closeAll(\"loading\");\n\n        if (data.data.code == 200) {\n          closebulkWareFlag();\n          $scope.zchecked_all = false;\n          freshList(); //刷新列表\n\n          layer.msg(\"Successfully changed shipping area！\");\n        } else {\n          layer.msg(data.data.message);\n        }\n      });\n    }\n\n    $scope.usRefuse = function () {\n      $scope.usInventoryFlag = false;\n      discounteTransferFlag = false;\n      checkStock();\n    };\n\n    $scope.sureFromUS = function () {\n      var arr = $scope.usInventoryList.map(function (item) {\n        var newItem = {\n          orderId: item,\n          transferAreaId: '2' //同意默认转到美国仓\n\n        };\n        return newItem;\n      });\n      discounteTransferFlag = true;\n      $scope.usInventoryFlag = false;\n      transferAreaFun(arr).then(function (data) {\n        if (data) {\n          transLogist($scope.usInventoryList);\n        }\n      });\n    };\n\n    function checkOrderDiscount() {\n      var arr = [];\n      $scope.ordersList.filter(function (item) {\n        if (item.check) {\n          arr.push(item.order.ID);\n        }\n      });\n      var ids = arr.join(',');\n\n      if (arr.length > 0) {\n        layer.load(2);\n        dsp.postFun('order/order/checkOrderLogisticsDiscount', {\n          ids: ids\n        }, function (_ref3) {\n          var data = _ref3.data;\n          var result = data.result;\n          layer.closeAll();\n\n          if (data.statusCode == '200' && result.length > 0) {\n            $scope.usInventoryFlag = true;\n            $scope.usInventoryList = result;\n          } else {\n            checkStock();\n          }\n        }, function (data) {\n          console.log(data);\n        });\n      } else {\n        $scope.addCartFlag = true;\n      }\n    } //把待处理订单提交到待提交的按钮\n\n\n    function checkStock() {\n      var arr = [];\n      $scope.ordersList.forEach(function (item) {\n        if (item.check) {\n          // if(item.order.areaId !== '1') {\n          arr.push(item.order.ID);\n        }\n      });\n      var ids = arr.join(\",\");\n\n      if (ids) {\n        dsp.postFun('order/order/checkInventory', {\n          ids: ids\n        }, function (data) {\n          var resData = data.data;\n\n          if (resData.statusCode == 200) {\n            $scope.noInventoryArr = resData.result;\n\n            if ($scope.noInventoryArr.length > 0) {\n              $scope.notifi = true;\n\n              if ($scope.noInventoryArr.length <= 4) {\n                $scope.ordersText = $scope.noInventoryArr.join(\", \");\n              } else {\n                $scope.ordersText = $scope.noInventoryArr.slice(0, 4).join(\", \") + \"...\";\n              }\n            } else {\n              $scope.addCartFlag = true;\n            }\n          } else if (data.data.statusCode == 400) {\n            $scope.errorShowFlag = true;\n            var temp = JSON.parse(data.data.result);\n            $scope.logisticsReasonList = temp.map(function (item) {\n              return {\n                recordNum: item,\n                message: data.data.message\n              };\n            });\n          }\n        }, function (data) {\n          console.log(data);\n        });\n      } else {\n        $scope.addCartFlag = true;\n      }\n    }\n\n    var jsonOrd = {}; //存储提交订单后 需要往后台发送的参数\n\n    jsonOrd.data = {};\n    $scope.noInventoryArr = [];\n    $scope.addToCartFun = addToCartFun;\n\n    function addToCartFun() {\n      var selectNum = 0; //存储被选中的条数\n\n      var dhlNoPhoneNum = 0;\n      var delOrdCount = 0; //多少条被shopify删除的订单\n\n      var $targetDom; //当前订单行\n\n      var thisOrdWlfs; //获取将要提交的物流方式\n\n      var thisOrdPhoneNum; //当前行的手机号\n\n      var thisCity; //获取订单城市地址\n\n      var thisProvince; //获取订单省份地址\n\n      var thisCountry; //获取订单国家简码\n\n      var checkedTaxidText; //税号\n\n      var cityEqualProvince = false; //发往美国订单是否有城市跟国家相同\n\n      $scope.bxisTaxidFlag = 0; // 需要释放\n\n      var idList = [];\n      var idstr = ''; //var kucunIds = '';\n\n      $('#z-dcl-ord .order-detail').each(function () {\n        //点击提交的时候去循环查找选中的订单\n        $targetDom = $(this).children('#cj-ord-num');\n        thisOrdWlfs = $targetDom.siblings('.dcl-ord-wltd').children('.dcl-ord-selwl').val(); //获取物流方式\n\n        console.log('thisOrdWlfs:', thisOrdWlfs);\n        thisOrdPhoneNum = $targetDom.siblings('.shipping-info').children('.phone-num').text();\n\n        if ($(this).children('.order-time').children('.zcheckbox').attr('src') == 'static/image/direct-orders/multiple2.png') {\n          thisCity = $(this).children('.shipping-info').find('.imp-procus-city').text();\n          thisProvince = $(this).children('.shipping-info').find('.imp-procus-province').text();\n          thisCountry = $(this).children('.shipping-info').find('.imp-procus-country').text();\n          checkedTaxidText = $(this).children('.shipping-info').children('.taixd-text').text();\n          thisCity = thisCity.toUpperCase();\n          thisProvince = thisProvince.toUpperCase();\n\n          if (thisCountry == 'US') {\n            console.log('us');\n\n            if (thisCity != 'NEW YORK' && thisCity != 'NY' && thisProvince != 'NEW YORK' && thisProvince != 'NY') {\n              if (thisCity == thisProvince) {\n                cityEqualProvince = true;\n              }\n            } else {\n              console.log('是纽约');\n            }\n          }\n\n          if (thisCountry == 'BR' && !checkedTaxidText) {\n            $scope.bxisTaxidFlag++;\n          }\n\n          if ($targetDom.children('.isdel-instore').text() && $targetDom.children('.isdel-instore').text() != 'processing') {\n            delOrdCount++;\n            selectNum++;\n          } else {\n            if ((thisOrdWlfs.indexOf('DHL') != -1 || thisOrdWlfs == \"China EMS\" || thisOrdWlfs == \"S.F China Domestic\" || thisOrdWlfs == \"YTO China Domestic\" || thisOrdWlfs == \"South Africa Special Line\" || thisOrdWlfs == \"CJ Normal Express\") && !thisOrdPhoneNum) {\n              console.log('该行必须要有手机号');\n              $scope.isDhlFlag = true;\n              selectNum++;\n              dhlNoPhoneNum++;\n            } else {\n              selectNum++;\n            }\n          }\n\n          var data = {\n            \"id\": $(this).attr('data-id'),\n            \"adderss\": $(this).attr('data-adress')\n          };\n          idList.push(data);\n        } else {\n          var ids = $(this).find('.dclord-sys-time').html();\n          idstr += ids + ',';\n        }\n      });\n\n      if (cityEqualProvince) {\n        layer.msg('Address incorrect, City and State should not be same!');\n        return;\n      }\n\n      if ($scope.bxisTaxidFlag > 0) {\n        $scope.isBxFlag = true;\n        return;\n      }\n\n      if (selectNum <= 0) {\n        layer.msg('Please select order(s) first!');\n        return;\n      }\n\n      $scope.shopifyRemoveNum = delOrdCount;\n      $scope.nonePhoneNum = dhlNoPhoneNum;\n      $scope.addCartOrdNum = selectNum;\n\n      if (dhlNoPhoneNum == selectNum) {\n        var index = layer.msg(\"Please fill in the recipient's phone number for the selected orders.\", {\n          time: 4000\n        });\n        layer.style(index, {\n          width: '500px'\n        });\n      } else {\n        $scope.noInventoryArr = []; // checkStock()\n\n        checkOrderDiscount();\n      } //loading加载\n\n\n      var lottieDom = null;\n\n      function ceateLoading(id) {\n        var element = document.getElementById(id);\n        element.parentElement.style.display = 'flex';\n        if (!element) return;\n\n        if (!lottieDom) {\n          lottieDom = lottie.loadAnimation({\n            container: element,\n            renderer: 'svg',\n            loop: true,\n            autoplay: true,\n            path: '/egg/image/cj_lottie.json'\n          });\n        }\n      }\n\n      function removeLoading(id) {\n        var element = document.getElementById(id);\n        element.parentElement.style.display = 'none';\n        lottieDom.destroy();\n      } //提交至购物车\n\n\n      $scope.sureAddCartFun = function () {\n        var cjOrderNumber = $scope.addressOrderList.join(',');\n        console.log($scope.addressOrderList);\n\n        if ($scope.addressOrderList.length) {\n          var orderIdList = {\n            'type': 1,\n            'cjOrderNumber': cjOrderNumber\n          };\n          ceateLoading('addcardLoad');\n          $scope.addCartFlag = false;\n          dsp.postFun('app/address/checkAddress', JSON.stringify(orderIdList), function (res) {\n            removeLoading('addcardLoad');\n            console.log(res);\n\n            if (res.data.data.length) {\n              $scope.checkAddressList = res.data.data;\n            }\n\n            $scope.textFun = function (data) {\n              var list = [];\n              data.forEach(function (i) {\n                list.push(i.msgEn);\n              });\n              list = list.join(',');\n              return list;\n            };\n\n            if ($scope.checkAddressList && $scope.checkAddressList.length) {\n              $scope.checkAddress = true;\n              $scope.addCartFlag = false;\n              return;\n            } else {\n              $scope.opinionOrder();\n            }\n\n            console.log('checkAddressList', $scope.checkAddressList);\n            console.log($scope.addressOrderList);\n          });\n        } //地址不完整弹窗\n\n\n        $scope.checkAddress = false;\n\n        $scope.closeCheckAddress2 = function () {\n          $scope.checkAddress = false;\n          $scope.checkAddressList = [];\n        };\n\n        $scope.closeCheckAddress = function () {\n          if ($scope.addressOrderList.length !== $scope.checkAddressList.length) {\n            $scope.checkAddressList.forEach(function (item) {\n              if ($scope.addressOrderList.includes(item.orderId)) {\n                $scope.addressOrderList = $scope.addressOrderList.filter(function (i) {\n                  return i !== item.orderId;\n                });\n              }\n            });\n            console.log($scope.addressOrderList);\n            $scope.opinionOrder();\n          }\n\n          $scope.checkAddress = false;\n        };\n\n        $scope.opinionOrder = function () {\n          var aa = 0;\n          var selFlagBol = false; //判断提交的订单中有没有没有物流方式的订单\n\n          dclordersid = ''; //再次点击确定提交按钮时 清空\n          // normaldclwl = ''; //再次点击确定提交按钮时 清空物流方式\n\n          splitordcs = ''; //再次点击确定提交按钮时 清空存储拆分出来的参数\n\n          var isDhlPhoneNum;\n          var isHaveTax = false; //判断提交的订单中有没有地区是BR的，但是没有税号的订单\n\n          $(\"#z-dcl-ord .zcheckbox\").each(function (i) {\n            splitNormalId = ''; //再次点击确定提交按钮时 清空被拆分订单的id\n\n            splitowlfs = ''; //再次点击确定提交按钮时 清空物流方式\n\n            splitcjid = ''; //再次点击确定提交按钮时 清空拆分出来订单的商品id\n\n            var ordersid = '';\n            var itemWlName = $(this).parent().siblings('.dcl-ord-wltd').children('.dcl-ord-selwl').val(); //获取物流方式\n\n            isDhlPhoneNum = $(this).parent().siblings('.shipping-info').children('.phone-num').text();\n            var taxNumber = $(this).parent().siblings('.shipping-info').children('.taixd-text').text(); //税号\n\n            var countryCode = $(this).parent().siblings('.shipping-info').find('.imp-procus-country').text(); //城市\n\n            if ($(this).attr('src') == 'static/image/direct-orders/multiple2.png') {\n              //判断城市是否是BR, 并且物流是否为CJPacket或DHL或ePacket\n              if (\"BR\" == countryCode && !taxNumber) {\n                isHaveTax = true;\n              }\n\n              if (itemWlName && itemWlName != 'Please select') {\n                //如果有物流方式\n                ordersid = $(this).parent().siblings('.ord-cai').children('.order-id').text();\n                console.log(ordersid);\n\n                if ($scope.addressOrderList.includes(ordersid)) {\n                  //获取订单的物流方式\n                  dclordwlstu = $(this).parent().siblings('.dcl-ord-wltd').children('.dcl-ord-selwl').val(); //获取商品是否匹配\n\n                  ordRemark = $(this).parent().parent().attr(\"remark\");\n\n                  if ((itemWlName.indexOf('DHL') != -1 || itemWlName == \"China EMS\" || itemWlName == \"S.F China Domestic\" || itemWlName == \"YTO China Domestic\" || itemWlName == \"South Africa Special Line\" || itemWlName == \"CJ Normal Express\") && !isDhlPhoneNum) {\n                    console.log('该行订单缺少必要的手机号手机号');\n                  } else {\n                    var isNoInventoryIdFlag = true;\n\n                    if ($scope.noInventoryArr.length > 0) {\n                      for (var _i3 = 0, len = $scope.noInventoryArr.length; _i3 < len; _i3++) {\n                        if (ordersid == $scope.noInventoryArr[_i3]) {\n                          isNoInventoryIdFlag = false;\n                          break;\n                        }\n                      }\n                    }\n\n                    if (isNoInventoryIdFlag) {\n                      //不是缺少库存的订单\n                      dclordersid += ordersid + \"#\" + dclordwlstu + ',';\n                    }\n                  }\n                }\n              }\n            }\n          });\n\n          if (isHaveTax) {\n            layer.closeAll(\"loading\");\n            layer.msg('The orders contains an order with a city of BR but no CPF/CNPJ');\n            return;\n          } //按订单的状态提交\n\n\n          jsonOrd.data = {};\n          jsonOrd.data.normal = dclordersid;\n          jsonOrd.data.splitNormal = splitordcs;\n          jsonOrd.data = JSON.stringify(jsonOrd.data);\n          console.log(jsonOrd);\n          console.log(dclordersid);\n\n          if (!dclordersid) {\n            layer.closeAll(\"loading\");\n            layer.msg('No available orders. Please select orders with shipping methods.');\n            return;\n          } else {\n            var orderNumber = $scope.ordersList;\n            console.log(orderNumber);\n            var arr = [];\n\n            if ($scope.checkAddressList) {\n              $scope.checkAddressList.forEach(function (item) {\n                orderNumber.forEach(function (i) {\n                  if (i.order.ID === item.orderId) {\n                    arr.push(i);\n                  }\n                });\n              });\n              arr.forEach(function (item) {\n                idList = idList.filter(function (i) {\n                  return i.id !== item.order.ORDER_NUMBER;\n                });\n              });\n            }\n\n            var data = {\n              \"orderInfo\": idList,\n              \"orderId\": idstr\n            };\n            console.log(data);\n            console.log(JSON.stringify(data));\n            dsp.postFun('app/order/repeatVerification', JSON.stringify(data), function (data) {\n              $scope.addCartFlag = false;\n              console.log(data);\n\n              if (data.data.flag == false) {\n                var count = data.data.count;\n                var idstr = data.data.ids;\n                var carlist = {\n                  \"list\": idstr,\n                  \"data\": jsonOrd\n                };\n                $scope.carNumber = count;\n                $('.carZZC').show().find('.carNumber').attr('data-number', JSON.stringify(carlist));\n              } else if (data.data.flag == true) {\n                console.log(data.data.flag);\n                addCart();\n              }\n            });\n          }\n        };\n      };\n    }\n\n    $scope.ordersList = [];\n\n    function addCart() {\n      console.log(jsonOrd);\n      dsp.loadPercent($('.orders-list'), $(window).height() - 171, 47, 0);\n      dsp.postFun('app/order/submitOrders', JSON.stringify(jsonOrd), function (data) {\n        // alert('chenggong')\n        if (data.data.statusCode == 200) {\n          var _dclsFun2 = function _dclsFun2(data) {\n            var list1 = data.data.result; // console.log(list);\n\n            $scope.list = data.data.result;\n            $scope.list = JSON.parse(list1);\n            $scope.ordersList = $scope.list.ordersList;\n            console.log($scope.ordersList);\n            $scope.pcountN = $scope.list.countNumber; //获取总订单的条数\n\n            if ($scope.pcountN > 0) {\n              dsp.removeNodataPic($('.orders-list'));\n              dsp.closeLoadPercent($('.orders-list'));\n            } else {\n              addNotSjFun();\n              dsp.closeLoadPercent($('.orders-list'));\n            }\n\n            $scope.ordstatusNum = $scope.list.allOrderCount2; //各种状态订单的数量\n\n            logisRemark($scope.list);\n            importFun(); //分页函数\n\n            numFun(); //调用给订单赋值的函数\n          };\n\n          var _dcleFun2 = function _dcleFun2() {\n            layer.closeAll(\"loading\");\n            dsp.closeLoadPercent($('.orders-list'));\n            dsp.cjMesFun(1);\n          };\n\n          $('#z-dcl-ord .zchecked-all').attr('src', 'static/image/direct-orders/multiple1.png');\n          var orData = {};\n          tjFun(orData);\n          orData.data = JSON.stringify(orData.data);\n          console.log(JSON.stringify(orData));\n          dsp.postFun('app/order/queryOrders', JSON.stringify(orData), _dclsFun2, _dcleFun2);\n        } else if (data.data.statusCode == 406 || data.data.statusCode == 500) {\n          var _dclsFun3 = function _dclsFun3(data) {\n            var list1 = data.data.result; // console.log(list);\n\n            $scope.list = data.data.result;\n            $scope.list = JSON.parse(list1);\n            $scope.ordersList = $scope.list.ordersList;\n            $scope.pcountN = $scope.list.countNumber; //获取总订单的条数\n\n            if ($scope.pcountN > 0) {\n              dsp.removeNodataPic($('.orders-list'));\n              dsp.closeLoadPercent($('.orders-list'));\n            } else {\n              addNotSjFun();\n              dsp.closeLoadPercent($('.orders-list'));\n            }\n\n            $scope.ordstatusNum = $scope.list.allOrderCount2; //各种状态订单的数量\n\n            logisRemark($scope.list);\n            importFun(); //分页函数\n\n            numFun(); //调用给订单赋值的函数\n          };\n\n          var _dcleFun3 = function _dcleFun3() {\n            layer.closeAll(\"loading\");\n            dsp.closeLoadPercent($('.orders-list'));\n            dsp.cjMesFun(1);\n          };\n\n          if (data.data.statusCode == 406) {\n            layer.msg(data.data.message);\n          } else if (data.data.statusCode == 500) {\n            dsp.cjMesFun(1);\n          }\n\n          $('#z-dcl-ord .zchecked-all').attr('src', 'static/image/direct-orders/multiple1.png');\n          var orData = {};\n          tjFun(orData);\n          orData.data = JSON.stringify(orData.data);\n          dsp.postFun('app/order/queryOrders', JSON.stringify(orData), _dclsFun3, _dcleFun3);\n        } else if (data.data.statusCode == 5000) {\n          $scope.addCartResonFlag = true;\n          $scope.addCartResonText = data.data.message;\n          resSucFreshFun();\n        } else if (data.data.statusCode == 400) {\n          $scope.errorShowFlag = true;\n          var temp = JSON.parse(data.data.result);\n          $scope.logisticsReasonList = temp.map(function (item) {\n            return {\n              recordNum: item,\n              message: data.data.message\n            };\n          });\n        } else {\n          layer.closeAll(\"loading\");\n          dsp.closeLoadPercent($('.orders-list'));\n          dsp.cjMesFun(1);\n          return;\n        }\n      }, function () {\n        layer.closeAll(\"loading\");\n        dsp.closeLoadPercent($('.orders-list'));\n        dsp.cjMesFun(1);\n      });\n    }\n\n    $scope.cancelBx = function () {\n      $scope.isBxFlag = false;\n      $scope.bxisTaxidFlag = 0;\n    };\n\n    $scope.confirmBx = function () {\n      $('#z-dcl-ord .order-detail').each(function () {\n        //点击提交的时候去循环查找选中的订单\n        var thisOrdWlfs; //获取将要提交的物流方式\n\n        var thisCountry; //获取订单国家简码\n\n        var checkedTaxidText;\n\n        if ($(this).children('.order-time').children('.zcheckbox').attr('src') == 'static/image/direct-orders/multiple2.png') {\n          thisCountry = $(this).children('.shipping-info').find('.imp-procus-country').text();\n          thisOrdWlfs = $(this).children('#cj-ord-num').siblings('.dcl-ord-wltd').children('.dcl-ord-selwl').val();\n          checkedTaxidText = $(this).children('.shipping-info').children('.taixd-text').text();\n\n          if (thisCountry == 'BR' && !checkedTaxidText) {\n            $(this).children('.order-time').children('.zcheckbox').attr('src', 'static/image/direct-orders/multiple1.png');\n            var brOrder = $(this).children('.order-time')[0].innerText;\n            $scope.addressOrderList = $scope.addressOrderList.filter(function (item) {\n              return item !== brOrder;\n            });\n          }\n        }\n      });\n      $scope.bxisTaxidFlag = 0;\n      $scope.isBxFlag = false;\n    };\n\n    $('.carNumber').click(function (e) {\n      var data = JSON.parse($(this).attr('data-number'));\n      var idList = data.list;\n      console.log(idList);\n      var a = base64.encode(idList);\n      console.log(a);\n      var newTab = window.open('about:blank');\n      newTab.location.href = 'myCJ.html#/direct-orders/' + a; //$('.carZZC').hide();\n    });\n    $('.carWrapConfirmBtn').click(function () {\n      $scope.addressOrderList = [];\n      $scope.checkAddressList = [];\n      $scope.addCartFlag = false;\n      var data = JSON.parse($('.carNumber').attr('data-number'));\n      console.log(data);\n      var jsonOrd = data.data;\n      var listId = data.list;\n      console.log(listId);\n      var newids = listId.split(',');\n      var newList = [];\n      var newStr = '';\n      $.each(newids, function (i, v) {\n        console.log(v);\n\n        if (i == 0) {\n          newStr += v;\n        } else {\n          if (v != '') {\n            newStr += ',' + v;\n          }\n        }\n      });\n      var savData = {\n        \"orderIds\": newStr\n      };\n      console.log(savData);\n      $scope.ordersList = [];\n      dsp.loadPercent($('.orders-list'), $(window).height() - 171, 47, 0);\n      dsp.postFun('app/order/submitOrders', JSON.stringify(jsonOrd), function (data) {\n        // alert('chenggong')\n        console.log(data.data);\n\n        if (data.data.statusCode == 200) {\n          var _dclsFun4 = function _dclsFun4(data) {\n            console.log(data.data);\n            var list1 = data.data.result; // console.log(list);\n\n            $scope.list = data.data.result;\n            $scope.list = JSON.parse(list1);\n            $scope.ordersList = $scope.list.ordersList;\n            console.log($scope.ordersList);\n            $scope.pcountN = $scope.list.countNumber; //获取总订单的条数\n\n            if ($scope.pcountN > 0) {\n              dsp.removeNodataPic($('.orders-list'));\n              dsp.closeLoadPercent($('.orders-list'));\n            } else {\n              addNotSjFun();\n              dsp.closeLoadPercent($('.orders-list'));\n            }\n\n            $scope.ordstatusNum = $scope.list.allOrderCount2; //各种状态订单的数量\n\n            logisRemark($scope.list);\n            importFun(); //分页函数\n\n            numFun(); //调用给订单赋值的函数\n          };\n\n          var _dcleFun4 = function _dcleFun4() {\n            layer.closeAll(\"loading\");\n            dsp.closeLoadPercent($('.orders-list'));\n            dsp.cjMesFun(1);\n          };\n\n          $('.carZZC').hide();\n          $('#z-dcl-ord .zchecked-all').attr('src', 'static/image/direct-orders/multiple1.png');\n          var orData = {};\n          tjFun(orData);\n          orData.data = JSON.stringify(orData.data);\n          console.log(JSON.stringify(orData));\n          dsp.postFun('app/order/queryOrders', JSON.stringify(orData), _dclsFun4, _dcleFun4);\n        } else if (data.data.statusCode == 406 || data.data.statusCode == 500) {\n          var _dclsFun5 = function _dclsFun5(data) {\n            console.log(data.data);\n            var list1 = data.data.result; // console.log(list);\n\n            $scope.list = data.data.result;\n            $scope.list = JSON.parse(list1);\n            $scope.ordersList = $scope.list.ordersList;\n            console.log($scope.ordersList);\n            $scope.pcountN = $scope.list.countNumber; //获取总订单的条数\n\n            if ($scope.pcountN > 0) {\n              dsp.removeNodataPic($('.orders-list'));\n              dsp.closeLoadPercent($('.orders-list'));\n            } else {\n              addNotSjFun();\n              dsp.closeLoadPercent($('.orders-list'));\n            }\n\n            $scope.ordstatusNum = $scope.list.allOrderCount2; //各种状态订单的数量\n\n            logisRemark($scope.list);\n            importFun(); //分页函数\n\n            numFun(); //调用给订单赋值的函数\n          };\n\n          var _dcleFun5 = function _dcleFun5() {\n            layer.closeAll(\"loading\");\n            dsp.closeLoadPercent($('.orders-list'));\n            dsp.cjMesFun(1);\n          };\n\n          if (data.data.statusCode == 406) {\n            layer.msg(data.data.message);\n          } else if (data.data.statusCode == 500) {\n            dsp.cjMesFun(1);\n          }\n\n          $('.carZZC').hide();\n          $('#z-dcl-ord .zchecked-all').attr('src', 'static/image/direct-orders/multiple1.png');\n          var orData = {};\n          tjFun(orData);\n          orData.data = JSON.stringify(orData.data);\n          console.log(JSON.stringify(orData));\n          dsp.postFun('app/order/queryOrders', JSON.stringify(orData), _dclsFun5, _dcleFun5);\n        } else if (data.data.statusCode == 5000) {\n          $('.carZZC').hide();\n          $scope.addCartResonFlag = true;\n          $scope.addCartResonText = data.data.message;\n          resSucFreshFun();\n        } else if (data.data.statusCode == 400) {\n          $scope.errorShowFlag = true;\n          var temp = JSON.parse(data.data.result);\n          $scope.logisticsReasonList = temp.map(function (item) {\n            return {\n              recordNum: item,\n              message: data.data.message\n            };\n          });\n        } else {\n          layer.closeAll(\"loading\");\n          dsp.closeLoadPercent($('.orders-list'));\n          dsp.cjMesFun(1);\n          return;\n        }\n      }, function () {\n        layer.closeAll(\"loading\");\n        dsp.closeLoadPercent($('.orders-list'));\n        dsp.cjMesFun(1);\n      });\n      dsp.postFun('app/order/addRepeatOrderId', JSON.stringify(savData), function (data) {\n        console.log(data.data);\n      });\n    });\n\n    $scope.closeCarWrap = function () {\n      if ($scope.checkAddressList) {\n        $scope.checkAddressList.forEach(function (item) {\n          $scope.addressOrderList.push(item.orderId);\n        });\n      }\n\n      $scope.checkAddressList = [];\n      $('.carZZC').hide();\n    }; //给DHL输入手机号\n\n\n    var listIndex; //第几条订单\n\n    $scope.inpPhoneFun = function (index, ev) {\n      ev.stopPropagation();\n      $(ev.target).hide();\n      $(ev.target).siblings('.dhlsameclass').show();\n      listIndex = index;\n    };\n\n    $scope.surePhoneFun = function (index, ev, item) {\n      ev.stopPropagation();\n      var evInpVal = '';\n      console.log(evInpVal);\n      evInpVal = $.trim($(ev.target).siblings('.inp-phoneNum').val());\n      console.log(listIndex);\n\n      if (evInpVal) {\n        dsp.postFun('app/order/updatePhone', {\n          id: item.ID,\n          phone: evInpVal\n        }, function (data) {\n          console.log(data);\n\n          if (data.data.statusCode == \"CODE_200\") {\n            $scope.ordersList[listIndex].order.PHONE = evInpVal;\n          } else {\n            layer.msg('Change the phone number to fail.');\n          }\n        }, function (data) {\n          console.log(data);\n        });\n        $(ev.target).siblings('#lrPhoneBtn').show();\n        $(ev.target).parent().find('.dhlsameclass').hide();\n      } else {\n        layer.msg('Please enter phone number');\n      }\n    };\n\n    $scope.qxPhoneFun = function (ev) {\n      ev.stopPropagation();\n      $(ev.target).siblings('#lrPhoneBtn').show();\n      $(ev.target).parent().find('.dhlsameclass').hide();\n    }; //批量为客户的dhl设置手机号\n\n\n    $scope.openSetDhlFun = function (wlName) {\n      $scope.dhlNoPhoneFlag = true;\n      $scope.bulkEditWlName = wlName;\n    };\n\n    $scope.bulkSetDhlPhone = function () {\n      if ($scope.dhlPhoneNum) {\n        console.log($scope.dhlPhoneNum);\n      } else {\n        layer.msg('Please enter phone number');\n        return;\n      }\n\n      var updhlData = {};\n      updhlData.phone = $scope.dhlPhoneNum;\n      updhlData.logisticName = $scope.bulkEditWlName;\n      dsp.postFun('app/order/upDHLPhone', JSON.stringify(updhlData), function (data) {\n        $scope.dhlNoPhoneFlag = false;\n        console.log(data);\n\n        if (data.data.result == true) {\n          var _dclsFun6 = function _dclsFun6(data) {\n            $scope.copyFlag = false;\n            console.log(data.data);\n            var list1 = data.data.result;\n            $scope.list = JSON.parse(list1);\n            $scope.ordersList = $scope.list.ordersList;\n            console.log($scope.ordersList);\n            $scope.pcountN = $scope.list.countNumber; //获取总订单的条数\n            // layer.msg('Please check the failed ones on the Draft.')\n\n            if ($scope.pcountN > 0) {\n              dsp.removeNodataPic($('.orders-list'));\n              dsp.closeLoadPercent($('.orders-list'));\n            } else {\n              addNotSjFun();\n              dsp.closeLoadPercent($('.orders-list'));\n            }\n\n            $scope.ordstatusNum = $scope.list.allOrderCount2; //各种状态订单的数量\n\n            logisRemark($scope.list);\n            importFun(); //分页函数\n\n            numFun(); //调用给订单赋值的函数\n          };\n\n          var _dcleFun6 = function _dcleFun6() {\n            layer.closeAll(\"loading\");\n            dsp.closeLoadPercent($('.orders-list'));\n            dsp.closeLoadPercent($('.orders-list'));\n          };\n\n          layer.msg('Set up success');\n          $scope.dhlPhoneNum = '';\n          $scope.ordersList = [];\n          dsp.loadPercent($('.orders-list'), $(window).height() - 171, 47, 0);\n          var showList = $('#dcl-sel').val() - 0;\n          var orData = {};\n          tjFun(orData);\n          orData.data = JSON.stringify(orData.data);\n          dsp.postFun('app/order/queryOrders', JSON.stringify(orData), _dclsFun6, _dcleFun6);\n        } else {\n          layer.msg('Set up failed');\n        }\n      }, function (data) {\n        console.log(data);\n      });\n    };\n\n    $scope.isPhoneRegFun = function (ev) {\n      $(ev.target).val($(ev.target).val().replace(/[^\\d\\-\\+\\()\\s]/g, ''));\n    };\n\n    $('.input-dhlphone').on('keyup', function () {\n      $(this).val($(this).val().replace(/[^\\d\\-\\+\\()\\s]/g, ''));\n    });\n\n    $scope.importNewFun = function (e) {\n      e.stopPropagation();\n      $('.dcl-tc-wrap').show();\n    }; //选择上传 粘贴弹框的取消按钮\n\n\n    $('.can-dtw-tc').click(function () {\n      $('.dcl-tc-wrap').hide(); // $('#svc-xl').hide();\n    }); //点击copy按钮 显示copy弹窗\n\n    $('.dtwt-r').click(function () {\n      $('.copy-row-ul li').remove(); //清空复制粘贴里面所有的数据\n\n      $('.dcl-tc-wrap').hide();\n      $('.copy-wrap').show();\n      $('.copy-row-ul').eq(1).attr('isfir', '1');\n    }); //粘贴的取消按钮\n\n    $('#copy-cancel-btn').click(function () {\n      $('.copy-wrap').hide();\n      $('.copy-row-ul li').remove();\n      $('.add-text-btn').attr('src', 'static/image/public-img/add.png');\n    }); //粘贴的文本框\n\n    $scope.isadd = false;\n    var $currentObj = {}; //增加文本的图片按钮\n\n    $scope.addTextCon = function ($event) {\n      var excelTit = $($event.currentTarget).parent().parent().siblings('.c-head-tit').text(); // alert(excelTit);\n\n      $('#excel-tit').text(excelTit);\n      $currentObj = $($event.currentTarget).parent().parent();\n\n      if ($currentObj.attr('isfir') == 1) {\n        $('#add-textarea').val(''); //清空文本框\n\n        $scope.isadd = true;\n        $('.add-text-btn').attr('src', 'static/image/public-img/add.png');\n        $($event.currentTarget).attr('src', 'static/image/public-img/add-active.png');\n        $currentObj = $($event.currentTarget).parent().parent(); // console.log($currentObj)\n\n        $currentObj.children('.hide-add-data').remove();\n        $currentObj.children('.copy-row-li').remove();\n      } else if ($('.copy-row-ul').eq(1).children('.copy-row-li').length <= 0) {\n        layer.msg('Please enter order number first.');\n        return;\n      } else if ($('.copy-row-ul').eq(1).children('.copy-row-li').length > 0) {\n        $('#add-textarea').val(''); //清空文本框\n\n        $scope.isadd = true;\n        $('.add-text-btn').attr('src', 'static/image/public-img/add.png');\n        $($event.currentTarget).attr('src', 'static/image/public-img/add-active.png');\n        $currentObj = $($event.currentTarget).parent().parent(); // console.log($currentObj)\n\n        $currentObj.children('.hide-add-data').remove();\n        $currentObj.children('.copy-row-li').remove();\n      } // var textObj = $($event.currentTarget).\n      // alert($($event.currentTarget).index())\n\n    }; // 文本框的取消按钮\n\n\n    $scope.closeaddTextCon = function () {\n      $scope.isadd = false;\n    }; //文本框的确定按钮\n\n\n    var biaoji = 0;\n\n    $scope.enteraddTextCon = function (index) {\n      $scope.isadd = false; //关闭文本框\n\n      var str = '';\n\n      if ($('#add-textarea').val() == '') {\n        return;\n      } else {\n        str = $('#add-textarea').val();\n      } // var str = $('#add-textarea').val();\n\n\n      console.log(str); // console.log(str.indexOf('OrderNumber'))\n\n      var hideStr = '<p style=\"display:none;\" class=\"hide-add-data\">' + str + '</p>'; // style=\"display:none;\"\n      // console.log(str);\n\n      var strArr = str.split('\\n');\n\n      if (strArr && JSON.stringify(strArr) != '[]') {\n        if (!strArr[strArr.length - 1]) {\n          strArr.pop(); //去除最后一个元素\n        }\n      }\n\n      var listData = ''; //存储粘贴的数据\n\n      var sortNum = ''; //存储订单的序号\n\n      var index = 0;\n      console.log(strArr);\n      console.log(strArr.length);\n\n      if ($currentObj.attr('isfir') == 1) {\n        biaoji = strArr.length;\n      }\n\n      console.log(biaoji);\n\n      for (var i = 0; i < biaoji; i++) {\n        index++;\n\n        if ($currentObj.attr('isfir') == 1) {\n          if (strArr[i] == '') {\n            biaoji = i;\n            break;\n          } else {\n            $('#ctc-sort li').remove();\n            sortNum += '<li class=\"copy-row-li\"><span>' + index + '</span></li>';\n            listData += '<li class=\"copy-row-li\">' + strArr[i] + '</li>';\n          }\n        } else {\n          if (strArr[i] == undefined) {\n            break; // listData += '<li class=\"copy-row-li\"></li>';\n          } else {\n            listData += '<li class=\"copy-row-li\">' + strArr[i] + '</li>';\n          }\n        }\n      } // console.log(sortNum)\n\n\n      $('#ctc-sort').append(sortNum);\n      $currentObj.append(hideStr);\n      $currentObj.append(listData);\n    }; //提交粘贴的内容\n\n\n    $scope.copyFlag = false;\n    $('#copy-con-btn').click(function () {\n      layer.load(2);\n      $('.hide-add-data').text();\n      console.log($('.hide-add-data').text());\n      var $dataObj = $('.hide-add-data');\n      console.log($dataObj.length); // var queryData = '';//存储提交的数据\n\n      var strLen = 13;\n\n      if ($('#ctc-taxNumber .hide-add-data').text() == null || $('#ctc-taxNumber .hide-add-data').text().length == 0) {\n        //税号可以为空\n        strLen = 12;\n      }\n\n      if ($dataObj.length !== strLen) {\n        //$dataObj.length!==12\n        layer.closeAll(\"loading\");\n        layer.msg('Please fill the form completely.');\n        return;\n      } else {\n        // var $rowObj = $('.copy-row-ul');\n        // console.log($rowObj)\n        var len1 = $dataObj.eq(0).text().split('\\n').length; // 判断所有的数组长度是否相等\n\n        console.log($dataObj.length);\n        var flag = false; //判断粘贴的条数是否相等\n\n        for (var i = 1; i < $dataObj.length; i++) {\n          if (len1 == $dataObj.eq(i).text().split('\\n').length) {\n            flag = true;\n            console.log(i);\n          } else {\n            flag = false;\n            console.log(i);\n            layer.closeAll(\"loading\"); // $('.copy-row-ul').eq(i).css('background','pink')\n\n            layer.msg('The lines are not equal to each other.');\n            return;\n          }\n        }\n\n        var queryData = {}; //存储提交的数据\n\n        if (flag) {\n          //flag\n          for (var i = 0; i < $dataObj.length; i++) {\n            // queryData += $dataObj.eq(i).text()+'#';\n            switch (i) {\n              case 0:\n                // queryData += 'Order Number:'+$dataObj.eq(i).text()+'#';\n                queryData.orderNumber = $dataObj.eq(0).text();\n                break;\n\n              case 1:\n                queryData.Sku = $dataObj.eq(1).text();\n                break;\n\n              case 2:\n                queryData.Quantity = $dataObj.eq(2).text();\n                break;\n\n              case 3:\n                queryData.productTitle = $dataObj.eq(3).text();\n                break;\n\n              case 4:\n                queryData.customerName = $dataObj.eq(4).text();\n                break;\n\n              case 5:\n                queryData.address1 = $dataObj.eq(5).text();\n                break;\n\n              case 6:\n                // queryData += 'Order Number:'+$dataObj.eq(i).text()+'#';\n                queryData.address2 = $dataObj.eq(6).text();\n                break;\n\n              case 7:\n                queryData.city = $dataObj.eq(7).text();\n                break;\n\n              case 8:\n                queryData.province = $dataObj.eq(8).text();\n                break;\n\n              case 9:\n                queryData.zip = $dataObj.eq(9).text();\n                break;\n\n              case 10:\n                queryData.country = $dataObj.eq(10).text();\n                break;\n\n              case 11:\n                // queryData += 'Order Number:'+$dataObj.eq(i).text()+'#';\n                queryData.phoneNumber = $dataObj.eq(11).text();\n                break;\n\n              case 12:\n                // queryData += 'Order Number:'+$dataObj.eq(i).text()+'#';\n                queryData.taxNumber = $dataObj.eq(12).text();\n                break;\n\n              default:\n                break;\n            }\n          } // console.log(queryData)\n          // console.log(JSON.stringify(queryData))app/order/analysisOrder\n\n\n          dsp.postFun(\"order/oldOrder/analysisOrder\", JSON.stringify(queryData), function (data) {\n            // console.log(data)\n            console.log(data);\n            console.log(data.data.message); // console.log(data.data.result);\n\n            if (data.data.statusCode == '300') {\n              layer.closeAll(\"loading\");\n              layer.msg(data.data.message, {\n                time: 3000\n              });\n              return;\n            }\n\n            if (data.data.statusCode == '200') {\n              console.log(data.data.message);\n              var successObj = JSON.parse(data.data.message);\n              console.log(successObj); // alert(successObj)\n\n              if (successObj.result == 'true') {\n                layer.closeAll(\"loading\");\n                $('.copy-wrap').hide(); //隐藏粘贴框\n\n                $scope.copyFlag = true;\n                $scope.copyprototalNum = successObj.totalNumber - 0;\n                $scope.copysuceNum = successObj.success - 0;\n                $scope.copyfailNum = successObj.nothing - 0;\n                $scope.copytotalNum = $scope.copysuceNum + $scope.copyfailNum;\n                $scope.copycombinedNum = $scope.copyprototalNum - $scope.copytotalNum; //有多少订单合并\n              } else {\n                layer.closeAll(\"loading\");\n                layer.msg(successObj.message, {\n                  time: 3000\n                });\n                return;\n              }\n            }\n          });\n          $('.add-text-btn').attr('src', 'static/image/public-img/add.png');\n        }\n      }\n    }); //粘贴订单成功失败弹框的确定按钮\n\n    $scope.copyConFun = function () {\n      // $scope.copyFlag = false;\n      if ($scope.copyfailNum > 0) {\n        if ($scope.copysuceNum > 0) {\n          var _dclsFun7 = function _dclsFun7(data) {\n            $scope.copyFlag = false;\n            console.log(data.data);\n            var list1 = data.data.result;\n            $scope.list = JSON.parse(list1);\n            $scope.ordersList = $scope.list.ordersList;\n            console.log($scope.ordersList);\n            $scope.pcountN = $scope.list.countNumber; //获取总订单的条数\n            // layer.msg('Please check the failed ones on the Draft.')\n\n            if ($scope.pcountN > 0) {\n              dsp.removeNodataPic($('.orders-list'));\n              dsp.closeLoadPercent($('.orders-list'));\n            } else {\n              addNotSjFun();\n              dsp.closeLoadPercent($('.orders-list'));\n            }\n\n            $scope.ordstatusNum = $scope.list.allOrderCount2; //各种状态订单的数量\n\n            logisRemark($scope.list);\n            importFun(); //分页函数\n\n            numFun(); //调用给订单赋值的函数\n          };\n\n          var _dcleFun7 = function _dcleFun7() {\n            layer.closeAll(\"loading\");\n            dsp.closeLoadPercent($('.orders-list'));\n            dsp.closeLoadPercent($('.orders-list'));\n          }; // $scope.draftFun();\n\n\n          $scope.ordersList = [];\n          dsp.loadPercent($('.orders-list'), $(window).height() - 171, 47, 0);\n          var showList = $('#dcl-sel').val() - 0;\n          var orData = {};\n          tjFun(orData);\n          orData.data = JSON.stringify(orData.data);\n          dsp.postFun('app/order/queryOrders', JSON.stringify(orData), _dclsFun7, _dcleFun7);\n          openDFun();\n        } else {\n          // layer.msg('Please check the failed ones on the Draft.')\n          $scope.copyFlag = false; // $scope.draftFun();\n\n          openDFun();\n        }\n      } else {\n        var _dclsFun8 = function _dclsFun8(data) {\n          console.log(data.data);\n          var list1 = data.data.result;\n          $scope.list = JSON.parse(list1);\n          $scope.ordersList = $scope.list.ordersList;\n          console.log($scope.ordersList);\n          $scope.pcountN = $scope.list.countNumber; //获取总订单的条数\n          // layer.msg('Please check the failed ones on the Draft.')\n\n          if ($scope.pcountN > 0) {\n            dsp.removeNodataPic($('.orders-list'));\n            dsp.closeLoadPercent($('.orders-list'));\n          } else {\n            addNotSjFun();\n            dsp.closeLoadPercent($('.orders-list'));\n          }\n\n          $scope.ordstatusNum = $scope.list.allOrderCount2; //各种状态订单的数量\n\n          logisRemark($scope.list);\n          importFun(); //分页函数\n\n          numFun(); //调用给订单赋值的函数\n        };\n\n        var _dcleFun8 = function _dcleFun8() {\n          layer.closeAll(\"loading\");\n          dsp.closeLoadPercent($('.orders-list'));\n          dsp.cjMesFun(1);\n        };\n\n        $scope.copyFlag = false; // statement\n\n        $scope.ordersList = [];\n        dsp.loadPercent($('.orders-list'), $(window).height() - 171, 47, 0);\n        $scope.excelCanFlag = true;\n        $scope.copyFlag = false; // $window.location.reload();\n\n        var showList = $('#dcl-sel').val() - 0;\n        var orData = {};\n        tjFun(orData);\n        orData.data = JSON.stringify(orData.data);\n        dsp.postFun('app/order/queryOrders', JSON.stringify(orData), _dclsFun8, _dcleFun8);\n      }\n    }; //鼠标移入切换图片\n\n\n    $('.dtwt-l').mouseenter(function (event) {\n      $(this).children('img').attr('src', 'static/image/public-img/excel-aimg.png');\n    });\n    $('.dtwt-l').mouseleave(function (event) {\n      $(this).children('img').attr('src', 'static/image/public-img/excel-img.png');\n    });\n    $('.dtwt-r').mouseenter(function (event) {\n      $(this).children('img').attr('src', 'static/image/public-img/copy-aimg.png');\n    });\n    $('.dtwt-r').mouseleave(function (event) {\n      $(this).children('img').attr('src', 'static/image/public-img/copy-img.png');\n    }); // 导入excel订单按钮\n\n    $scope.uploadFlag = false; //上传成功的弹窗\n    //取消按钮的显示隐藏\n\n    $scope.excelCanFlag = false;\n    $('.dtwt-l').click(function () {\n      $('.dcl-tc-wrap').hide();\n      layer.load(2);\n      layer.open({\n        type: 1,\n        content: '<div class=\"excelalert-wrap\" style=\"width:490px\">' + '<div class=\"excel-mtop\">' + '<div class=\"excel-mtl\">' + '<p class=\"excel-mtp2\">Excel Orders Template:</p>' + '<p class=\"excel-mtp2\">Excel Orders File:</p>' + '</div>' + '<div class=\"excel-mtr\">' + '<p class=\"excel-mblp\">' + '<a class=\"excel-download\" href=\"https://cc-west-usa.oss-us-west-1.aliyuncs.com/2051/1629024423850.xlsx\"  >Download</a>' + '</p>' + '<form id=\"excel-upload\" action=\"http://192.168.5.104:8086/dsp_server/order/oldOrder/addOrderByExcel\" method=\"post\" enctype=\"multipart/form-data\">' + '<p class=\"e-upl-p\"><a class=\"upload-btn\" href=\"javascript:void(0)\">Upload</a><input id=\"uploadInp\" name=\"file\" class=\"ex-upload-inp\" type=\"file\"   />' + '<span class=\"text-tit\"></span>' + '</p>' + '</form>' + '</div>' + '</div>' + '</div>',\n        area: ['554px', '300px'],\n        closeBtn: 0,\n        // shadeClose: true,\n        title: \"Import Excel Orders\",\n        skin: \"excel-layer\",\n        btn: ['Cancel', 'Confirm'],\n        yes: function yes(index, layero) {\n          layer.close(index);\n          layer.closeAll(\"loading\");\n        },\n        btn2: function btn2(index, layero) {\n          layer.close(index);\n          var file = $(\"#uploadInp\").val();\n          var index = file.lastIndexOf(\".\");\n          console.log(file);\n          $('.text-tit').text(file);\n          var ext = file.substring(index + 1, file.length);\n\n          if (ext != \"xlsx\" && ext != \"xls\") {\n            layer.closeAll(\"loading\");\n            layer.msg('File Format Error: You need to upload EXCEL format file, other type files will not be available to system.');\n            return;\n          }\n\n          var formData = new FormData($(\"#excel-upload\")[0]);\n          var platformId = $(\".excel-mts\").text();\n          formData.append(\"platformId\", platformId);\n          console.log(formData);\n          console.log(platformId);\n          dsp.upLoadImgPost('order/oldOrder/addOrderByExcel', formData, orsFun, dreFun);\n\n          function orsFun(data) {\n            console.log(data);\n\n            if (data.data.statusCode == '300') {\n              layer.closeAll(\"loading\");\n\n              if (!data.data.message) {\n                data.data.message = 'Upload error';\n              }\n\n              layer.msg(data.data.message, {\n                time: 3000\n              });\n              return;\n            }\n\n            if (data.data.statusCode == '200') {\n              var obj = JSON.parse(data.data.message);\n              console.log(obj);\n              console.log(obj.result);\n              console.log(data.data.message);\n              var successObj = JSON.parse(data.data.message);\n              console.log(successObj); // alert(successObj)\n\n              if (successObj.result == 'true') {\n                layer.closeAll(\"loading\");\n                $scope.uploadFlag = true;\n                $scope.prototalNum = successObj.totalNumber - 0;\n                $scope.suceNum = successObj.success - 0;\n                $scope.failNum = successObj.nothing - 0;\n                $scope.totalNum = $scope.suceNum + $scope.failNum;\n                $scope.combinedNum = $scope.prototalNum - $scope.totalNum; //有多少订单合并\n                // alert($scope.failNum)\n\n                if ($scope.failNum > 0) {\n                  //取消按钮的显示隐藏\n                  $scope.excelCanFlag = false;\n                } else {\n                  $scope.excelCanFlag = true; // alert($scope.excelCanFlag)\n                }\n              } else {\n                layer.closeAll(\"loading\");\n                layer.msg(successObj.message, {\n                  time: 3000\n                });\n                return;\n              }\n            }\n          }\n\n          function dreFun() {\n            console.log(\" err ceshi\");\n            layer.closeAll(\"loading\");\n          }\n        }\n      });\n      $(\"#excel-upload\").on('change', function () {\n        var fileTit = $(\"#uploadInp\").val();\n        $('.text-tit').text(fileTit);\n      });\n    }); //上传excel订单的确定按钮\n\n    $scope.excelConFun = function () {\n      if ($scope.failNum > 0) {\n        $scope.uploadFlag = false;\n\n        if ($scope.suceNum > 0) {\n          var _dclsFun9 = function _dclsFun9(data) {\n            console.log(data.data);\n            var list1 = data.data.result;\n            $scope.list = JSON.parse(list1);\n            $scope.ordersList = $scope.list.ordersList;\n            console.log($scope.ordersList);\n            $scope.pcountN = $scope.list.countNumber; //获取总订单的条数\n            // layer.msg('Please check the failed ones on the Draft.')\n\n            if ($scope.pcountN > 0) {\n              dsp.removeNodataPic($('.orders-list'));\n              dsp.closeLoadPercent($('.orders-list'));\n            } else {\n              addNotSjFun();\n              dsp.closeLoadPercent($('.orders-list'));\n            }\n\n            $scope.ordstatusNum = $scope.list.allOrderCount2; //各种状态订单的数量\n\n            logisRemark($scope.list);\n            importFun(); //分页函数\n\n            numFun(); //调用给订单赋值的函数\n          };\n\n          var _dcleFun9 = function _dcleFun9() {\n            layer.closeAll(\"loading\");\n            dsp.closeLoadPercent($('.orders-list'));\n          };\n\n          var showList = $('#dcl-sel').val() - 0;\n          $scope.ordersList = [];\n          dsp.loadPercent($('.orders-list'), $(window).height() - 171, 47, 0);\n          var orData = {};\n          tjFun(orData);\n          orData.data = JSON.stringify(orData.data);\n          console.log(JSON.stringify(orData));\n          dsp.postFun('app/order/queryOrders', JSON.stringify(orData), _dclsFun9, _dcleFun9);\n          localStorage.setItem('isOpenDraft', 1);\n          location.reload();\n        } else {\n          // layer.msg('Please check the failed ones on the Draft.')\n          localStorage.setItem('isOpenDraft', 1);\n          location.reload();\n        } // $scope.draftFun();\n\n      } else {\n        var _dclsFun10 = function _dclsFun10(data) {\n          console.log(data.data);\n          var list1 = data.data.result;\n          $scope.list = JSON.parse(list1);\n          $scope.ordersList = $scope.list.ordersList;\n          console.log($scope.ordersList);\n          $scope.pcountN = $scope.list.countNumber; //获取总订单的条数\n          // layer.msg('Please check the failed ones on the Draft.')\n\n          if ($scope.pcountN > 0) {\n            dsp.removeNodataPic($('.orders-list'));\n            dsp.closeLoadPercent($('.orders-list'));\n          } else {\n            addNotSjFun();\n            dsp.closeLoadPercent($('.orders-list'));\n          }\n\n          $scope.ordstatusNum = $scope.list.allOrderCount2; //各种状态订单的数量\n\n          logisRemark($scope.list);\n          importFun(); //分页函数\n\n          numFun(); //调用给订单赋值的函数\n        };\n\n        var _dcleFun10 = function _dcleFun10() {\n          layer.closeAll(\"loading\");\n          dsp.closeLoadPercent($('.orders-list'));\n          dsp.cjMesFun(1);\n        };\n\n        // statement\n        $scope.ordersList = [];\n        dsp.loadPercent($('.orders-list'), $(window).height() - 171, 47, 0);\n        $scope.excelCanFlag = true;\n        $scope.uploadFlag = false; // $window.location.reload();\n\n        var showList = $('#dcl-sel').val() - 0;\n        var orData = {};\n        tjFun(orData);\n        orData.data = JSON.stringify(orData.data);\n        dsp.postFun('app/order/queryOrders', JSON.stringify(orData), _dclsFun10, _dcleFun10);\n      }\n    };\n\n    $scope.cancelFun = function () {\n      $scope.uploadFlag = false;\n    };\n\n    $scope.addToCancelFun = function () {\n      layer.load(2);\n      var selectNum = 0; //存储被选中的条数\n\n      $('#z-dcl-ord .order-detail').each(function () {\n        //点击提交的时候去循环查找选中的订单\n        if ($(this).children('.order-time').children('.zcheckbox').attr('src') == 'static/image/direct-orders/multiple2.png') {\n          selectNum++;\n\n          if ($(this).attr(\"remark\") !== undefined) {\n            //如果是被拆分的订单\n            selectNum--;\n          }\n        }\n      });\n\n      if (selectNum <= 0) {\n        layer.closeAll(\"loading\");\n        layer.msg('Please select order(s) first!');\n        return;\n      }\n\n      layer.open({\n        content: \"<p>You are adding orders to Canceled.</p><p>Order Quantity:  <span id='awa-dcl-num'></span></p>\",\n        area: ['480px', '260px'],\n        closeBtn: 0,\n        // shadeClose: true,\n        title: \"Order Cancellation\",\n        skin: \"\",\n        btn: ['Cancel', 'Confirm'],\n        success: function success(layero, index) {\n          $(layero).find('#awa-dcl-num').html(selectNum);\n        },\n        yes: function yes(index, layero) {\n          layer.close(index);\n          layer.closeAll(\"loading\");\n        },\n        btn2: function btn2(index, layero) {\n          // 点击提交按钮重新发送请求\n          $scope.pcountN = 0; //存储待提交订单的总条数 process required\n\n          var cancelData = {};\n          var cancelId = ''; // var ordTypeObj = {};\n\n          $(\"#z-dcl-ord .zcheckbox\").each(function (i) {\n            if ($(this).attr('src') == 'static/image/direct-orders/multiple2.png') {\n              cancelId += $(this).parent().siblings('.ord-cai').children('.order-id').text() + ',';\n            }\n          });\n          cancelData.orderNums = cancelId;\n          cancelData.type = 1;\n          console.log(JSON.stringify(cancelData));\n          dsp.postFun('app/order/deleteOrder', JSON.stringify(cancelData), function (data) {\n            layer.closeAll(\"loading\");\n            console.log(data);\n            console.log(data.data);\n\n            if (data.data.result == true) {\n              var _dclsFun11 = function _dclsFun11(data) {\n                console.log(data.data);\n                var list1 = data.data.result; // console.log(list);\n\n                $scope.list = data.data.result;\n                $scope.list = JSON.parse(list1); //json×Ö·û´®×ª¶ÔÏó\n\n                $scope.ordersList = $scope.list.ordersList;\n                console.log($scope.ordersList); // $scope.list.countNumber = $scope.list.countNumber;//获取总订单的条数\n\n                $scope.pcountN = $scope.list.countNumber; //获取总订单的条数\n\n                if ($scope.pcountN > 0) {\n                  dsp.removeNodataPic($('.orders-list'));\n                  dsp.closeLoadPercent($('.orders-list'));\n                } else {\n                  addNotSjFun();\n                  dsp.closeLoadPercent($('.orders-list'));\n                }\n\n                $scope.ordstatusNum = $scope.list.allOrderCount2; //各种状态订单的数量\n                // alert(typeof($scope.pcountN))\n\n                logisRemark($scope.list);\n                importFun(); //分页函数\n\n                numFun(); //调用给订单赋值的函数\n              };\n\n              var _dcleFun11 = function _dcleFun11() {\n                // alert('dingdna')\n                layer.closeAll(\"loading\");\n                dsp.closeLoadPercent($('.orders-list'));\n                dsp.cjMesFun(1);\n              };\n\n              $scope.ordersList = [];\n              dsp.loadPercent($('.orders-list'), $(window).height() - 171, 47, 0);\n              $('#z-dcl-ord .zchecked-all').attr('src', 'static/image/direct-orders/multiple1.png');\n              var orData = {};\n              tjFun(orData);\n              orData.data = JSON.stringify(orData.data);\n              console.log(JSON.stringify(orData));\n              dsp.postFun('app/order/queryOrders', JSON.stringify(orData), _dclsFun11, _dcleFun11);\n            } else {\n              // alert('tijiaoshibai')\n              layer.closeAll(\"loading\");\n              dsp.closeLoadPercent($('.orders-list'));\n              dsp.cjMesFun(1);\n              return;\n            }\n          }, function () {\n            // alert('cancel ')\n            layer.closeAll(\"loading\");\n            dsp.closeLoadPercent($('.orders-list'));\n            dsp.cjMesFun(1);\n          });\n        }\n      });\n    }; //重新拉取订单\n\n\n    var timer1; //定时器\n\n    var progressLineNum = 0;\n    var progressLineNum2 = 33;\n    var progressLineNum3 = 66;\n    var progressStu = '1';\n    var bianliangtime = 1;\n\n    function testFun() {\n      // console.log((new Date().getTime()-localStorage.getItem('bianliangtime'))/1000<5)\n      if ((new Date().getTime() - localStorage.getItem('bianliangtime')) / 1000 < 5) {\n        setTimeout(function () {\n          testFun();\n        }, 5000);\n        return;\n      }\n\n      localStorage.setItem('bianliangtime', new Date().getTime());\n      var queryData = localStorage.getItem('queryData');\n      var link = location.href;\n      console.log(link);\n      dsp.postFun('app/order/getOperationOrderStatus', queryData, function (data) {\n        console.log(data);\n        progressLineNum = localStorage.getItem(\"progressLineNum\") - 0;\n        progressLineNum++;\n        progressStu = data.data.result;\n\n        switch (progressStu) {\n          case '1':\n            localStorage.setItem(\"progressLineNum\", progressLineNum);\n\n            if (progressLineNum > 32) {\n              $('.progress-bar').css('width', 33 + '%');\n              $('.progress-bar').text(33 + '%');\n            } else {\n              $('.progress-bar').css('width', progressLineNum + '%');\n              $('.progress-bar').text(progressLineNum + '%');\n            }\n\n            break;\n\n          case '2':\n            if (progressLineNum < 33) {\n              progressLineNum = 33;\n            }\n\n            localStorage.setItem(\"progressLineNum\", progressLineNum);\n\n            if (progressLineNum > 66) {\n              $('.progress-bar').css('width', 66 + '%');\n              $('.progress-bar').text(66 + '%');\n            } else {\n              $('.progress-bar').css('width', progressLineNum + '%');\n              $('.progress-bar').text(progressLineNum + '%');\n            }\n\n            break;\n\n          case '3':\n            if (progressLineNum < 66) {\n              progressLineNum = 66;\n            }\n\n            localStorage.setItem(\"progressLineNum\", progressLineNum);\n\n            if (progressLineNum > 99) {\n              $('.progress-bar').css('width', 99 + '%');\n              $('.progress-bar').text(99 + '%');\n            } else {\n              $('.progress-bar').css('width', progressLineNum + '%');\n              $('.progress-bar').text(progressLineNum + '%');\n            }\n\n            break;\n\n          case '0':\n            $scope.isupdateFlag = false;\n            localStorage.removeItem('updateTime');\n\n            if (localStorage.getItem(\"zhixing0\") == undefined) {\n              localStorage.setItem('zhixing0', \"0\");\n            } else {\n              return;\n            }\n\n            $scope.ordersList = [];\n            dsp.loadPercent($('.orders-list'), $(window).height() - 171, 47, 0);\n            $('#z-dcl-ord .zchecked-all').attr('src', 'static/image/direct-orders/multiple1.png');\n            var orData = {};\n            orData.userId = bs.decode(localStorage.getItem('userId')); // console.log(orData.userId)\n\n            orData.token = bs.decode(localStorage.getItem('token'));\n            tjFun(orData);\n            orData.data = JSON.stringify(orData.data);\n            console.log(JSON.stringify(orData));\n            dsp.postFun('app/order/queryOrders', JSON.stringify(orData), _dclsFun12, _dcleFun12);\n\n            var _dclsFun12 = function _dclsFun12(data) {\n              console.log(data.data);\n              var list1 = data.data.result; // console.log(list);\n\n              $scope.list = data.data.result;\n              $scope.list = JSON.parse(list1);\n              $scope.ordersList = $scope.list.ordersList;\n              console.log($scope.ordersList); // $scope.list.countNumber = $scope.list.countNumber;//获取总订单的条数\n\n              $scope.pcountN = $scope.list.countNumber; //获取总订单的条数\n\n              if ($scope.pcountN > 0) {\n                dsp.removeNodataPic($('.orders-list'));\n                dsp.closeLoadPercent($('.orders-list'));\n              } else {\n                addNotSjFun();\n                dsp.closeLoadPercent($('.orders-list'));\n              }\n\n              $scope.ordstatusNum = $scope.list.allOrderCount2; //各种状态订单的数量\n              // alert(typeof($scope.pcountN))\n\n              logisRemark($scope.list);\n              importFun(); //分页函数\n\n              numFun(); //调用给订单赋值的函数\n            };\n\n            var _dcleFun12 = function _dcleFun12() {\n              // alert('dingdna')\n              layer.closeAll(\"loading\");\n              dsp.closeLoadPercent($('.orders-list'));\n              dsp.cjMesFun(1);\n            };\n\n            break;\n        }\n\n        if (progressStu != \"0\") {\n          testFun();\n        }\n      }, function (data) {\n        console.log(data);\n      });\n    } // if(localStorage.getItem('updateTime')){\n    // \t$scope.isupdateFlag = true;\n    // \ttestFun ();\n    // }\n\n\n    $scope.cxlqordFun = function () {\n      // if(codeInlocal != '200'){\n      // \tlayer.msg(\"System is syncing orders, you won't be able to update orders until sync finished.\")\n      // \treturn;\n      // }\n      var selectNum = 0; //存储被选中的条数\n\n      $('#z-dcl-ord .order-detail').each(function () {\n        //点击提交的时候去循环查找选中的订单\n        if ($(this).children('.order-time').children('.zcheckbox').attr('src') == 'static/image/direct-orders/multiple2.png') {\n          selectNum++;\n\n          if ($(this).attr(\"remark\") !== undefined) {\n            //如果是被拆分的订单\n            selectNum--;\n          }\n        }\n      });\n\n      if (selectNum <= 0) {\n        layer.closeAll(\"loading\");\n        layer.msg('Please select order(s) first!');\n        return;\n      }\n\n      layer.open({\n        content: \"<p>Are you sure to Update Orders?</p><p>It will take around few miuntes to make this happen.</p><p>Order Quantity:  <span id='awa-dcl-num'></span></p>\",\n        area: ['480px', '260px'],\n        closeBtn: 0,\n        // shadeClose: true,\n        title: \"Update Orders\",\n        skin: \"\",\n        btn: ['Cancel', 'Confirm'],\n        success: function success(layero, index) {\n          $(layero).find('#awa-dcl-num').html(selectNum);\n        },\n        yes: function yes(index, layero) {\n          layer.close(index);\n          layer.closeAll(\"loading\");\n        },\n        btn2: function btn2(index, layero) {\n          // 点击提交按钮重新发送请求\n          var queryData = {};\n          var cancelId = '';\n          $(\"#z-dcl-ord .zcheckbox\").each(function (i) {\n            if ($(this).attr('src') == 'static/image/direct-orders/multiple2.png') {\n              cancelId += $(this).parent().siblings('.ord-cai').children('.order-id').text() + ',';\n            }\n          });\n          var updateTime = new Date().getTime();\n          queryData.orderNums = cancelId;\n          queryData = JSON.stringify(queryData);\n          localStorage.setItem('queryData', queryData);\n          dsp.postFun('app/order/operationOrder', queryData, function (data) {\n            dsp.closeLoad();\n            console.log(data);\n\n            if (data.data.result == \"200\") {\n              localStorage.removeItem('zhixing0');\n              localStorage.setItem('progressLineNum', 0);\n              localStorage.setItem('bianliangtime', new Date().getTime());\n              $scope.isupdateFlag = true;\n              testFun2();\n              localStorage.setItem('updateTime', updateTime);\n            } else {\n              $scope.isupdateFlag = false;\n              layer.msg(\"System is syncing orders, you won't be able to update orders until sync finished.\");\n            }\n          }, function (data) {\n            console.log(data);\n          });\n\n          function testFun2() {\n            if ((new Date().getTime() - localStorage.getItem('bianliangtime')) / 1000 < 5) {\n              setTimeout(function () {\n                // console.log(\"等待我s\")\n                testFun2();\n              }, 5000);\n              return;\n            }\n\n            localStorage.setItem('bianliangtime', new Date().getTime());\n            dsp.postFun('app/order/getOperationOrderStatus', queryData, function (data) {\n              console.log(data);\n              progressLineNum = localStorage.getItem(\"progressLineNum\") - 0;\n              progressLineNum++;\n              progressStu = data.data.result;\n\n              switch (progressStu) {\n                case '1':\n                  localStorage.setItem(\"progressLineNum\", progressLineNum);\n\n                  if (progressLineNum > 32) {\n                    $('.progress-bar').css('width', 33 + '%');\n                    $('.progress-bar').text(33 + '%');\n                  } else {\n                    $('.progress-bar').css('width', progressLineNum + '%');\n                    $('.progress-bar').text(progressLineNum + '%');\n                  }\n\n                  break;\n\n                case '2':\n                  if (progressLineNum < 33) {\n                    progressLineNum = 33;\n                  }\n\n                  localStorage.setItem(\"progressLineNum\", progressLineNum);\n\n                  if (progressLineNum > 66) {\n                    $('.progress-bar').css('width', 66 + '%');\n                    $('.progress-bar').text(66 + '%');\n                  } else {\n                    $('.progress-bar').css('width', progressLineNum + '%');\n                    $('.progress-bar').text(progressLineNum + '%');\n                  }\n\n                  break;\n\n                case '3':\n                  if (progressLineNum < 66) {\n                    progressLineNum = 66;\n                  }\n\n                  localStorage.setItem(\"progressLineNum\", progressLineNum);\n\n                  if (progressLineNum > 99) {\n                    $('.progress-bar').css('width', 99 + '%');\n                    $('.progress-bar').text(99 + '%');\n                  } else {\n                    $('.progress-bar').css('width', progressLineNum + '%');\n                    $('.progress-bar').text(progressLineNum + '%');\n                  }\n\n                  break;\n\n                case '0':\n                  $scope.isupdateFlag = false;\n                  clearTimeout(timer1);\n                  localStorage.removeItem('updateTime');\n\n                  if (localStorage.getItem(\"zhixing0\") == undefined) {\n                    localStorage.setItem('zhixing0', \"0\");\n                  } else {\n                    return;\n                  }\n\n                  $scope.ordersList = [];\n                  dsp.loadPercent($('.orders-list'), $(window).height() - 171, 47, 0);\n                  $('#z-dcl-ord .zchecked-all').attr('src', 'static/image/direct-orders/multiple1.png');\n                  var orData = {};\n                  orData.userId = bs.decode(localStorage.getItem('userId')); // console.log(orData.userId)\n\n                  orData.token = bs.decode(localStorage.getItem('token'));\n                  tjFun(orData);\n                  orData.data = JSON.stringify(orData.data);\n                  console.log(JSON.stringify(orData));\n                  dsp.postFun('app/order/queryOrders', JSON.stringify(orData), _dclsFun13, _dcleFun13);\n\n                  var _dclsFun13 = function _dclsFun13(data) {\n                    console.log(data.data);\n                    var list1 = data.data.result; //ËùÓÐÊý¾Ý\n                    // console.log(list);\n\n                    $scope.list = data.data.result;\n                    $scope.list = JSON.parse(list1); //json×Ö·û´®×ª¶ÔÏó\n\n                    $scope.ordersList = $scope.list.ordersList;\n                    console.log($scope.ordersList); // $scope.list.countNumber = $scope.list.countNumber;//获取总订单的条数\n\n                    $scope.pcountN = $scope.list.countNumber; //获取总订单的条数\n\n                    if ($scope.pcountN > 0) {\n                      dsp.removeNodataPic($('.orders-list'));\n                      dsp.closeLoadPercent($('.orders-list'));\n                    } else {\n                      addNotSjFun();\n                      dsp.closeLoadPercent($('.orders-list'));\n                    }\n\n                    $scope.ordstatusNum = $scope.list.allOrderCount2; //各种状态订单的数量\n                    // alert(typeof($scope.pcountN))\n\n                    logisRemark($scope.list);\n                    importFun(); //分页函数\n\n                    numFun(); //调用给订单赋值的函数\n                  };\n\n                  var _dcleFun13 = function _dcleFun13() {\n                    // alert('dingdna')\n                    layer.closeAll(\"loading\");\n                    dsp.closeLoadPercent($('.orders-list'));\n                    dsp.cjMesFun(1);\n                  };\n\n                  break;\n              }\n\n              if (progressStu != \"0\") {\n                testFun2();\n              }\n            }, function (data) {\n              console.log(data);\n            });\n          }\n        }\n      });\n    }; // //取消订单的弹框\n\n\n    function delShopFun(shopArr) {\n      if (!shopArr) {\n        return;\n      }\n      /**店铺列表名字展示改成 店铺名+店铺类型+国家、增加国家全写参数、增加国家缩写参数 start */\n\n\n      shopArr.forEach(function (e) {\n        // 国家缩写转换全写。ThemeId是shopee的国家;MarketplaceUrl是lazada的国家\n        e.countryfullName = replaceCountry(e.type == 'shopee' ? e.ThemeId : e.type == 'Lazada' ? e.MarketplaceUrl : '').fullName; // 店铺名+店铺类型+国家\n\n        if (e.type) {\n          e.rNAME = \"\".concat(e.name, \" - \").concat(e.type.replace(e.type[0], e.type[0].toUpperCase()), \" \").concat(e.countryfullName ? '-' : '', \" \").concat(e.countryfullName);\n        } else {\n          e.rNAME = e.name;\n        } // 国家缩写code(大写)-物流模块传递国家需要\n\n\n        var curLogisticCountry = e.ThemeId || e.MarketplaceUrl ? e.type == 'shopee' ? e.ThemeId : e.type == 'Lazada' ? e.MarketplaceUrl : '' : '';\n\n        if (curLogisticCountry) {\n          e.logisticsCountry = curLogisticCountry.toUpperCase();\n        } else {\n          e.logisticsCountry = '';\n        } // e.logisticsCountry = (e.ThemeId || e.MarketplaceUrl) ? (e.type == 'shopee' ? e.ThemeId : e.type == 'Lazada' ? e.MarketplaceUrl : '').toUpperCase() : '';\n        // 货币代码\n\n\n        e.currencyCode = replaceCountry(e.type == 'shopee' ? e.ThemeId : e.type == 'Lazada' ? e.MarketplaceUrl : '').currencyCode;\n      });\n      $scope.shops = shopArr;\n    }\n\n    function replaceCountry(params) {\n      var fullName = '';\n      var currencyCode = '';\n\n      if (/sg/i.test(params)) {\n        fullName = 'Singapore', currencyCode = 'SGD';\n      } else if (/my/i.test(params)) {\n        fullName = 'Malaysia', currencyCode = 'MYR';\n      } else if (/id/i.test(params)) {\n        fullName = 'Indonesia', currencyCode = 'IDR';\n      } else if (/th/i.test(params)) {\n        fullName = 'Thailand', currencyCode = 'THB';\n      } else if (/ph/i.test(params)) {\n        fullName = 'Philippines', currencyCode = 'PHP';\n      } else if (/vn/i.test(params)) {\n        fullName = 'Vietnam', currencyCode = 'VND';\n      }\n\n      return {\n        fullName: fullName,\n        currencyCode: currencyCode\n      };\n    } //分页\n\n\n    function importFun() {\n      if ($scope.pcountN == 0) {\n        layer.closeAll(\"loading\");\n        dsp.closeLoadPercent($('.orders-list'));\n        return;\n      }\n\n      $(\".pagination-demo1\").jqPaginator({\n        totalCounts: $scope.pcountN,\n        //设置分页的总条目数\n        pageSize: $('#dcl-sel').val() - 0,\n        //设置每一页的条目数\n        visiblePages: 5,\n        currentPage: 1,\n        activeClass: 'active',\n        first: '<li class=\"first\"><a class=\"prev\" href=\"javascript:void(0);\">&lt&lt;<\\/a><\\/li>',\n        prev: '<li class=\"prev\"><a class=\"prev\" href=\"javascript:void(0);\">&lt;<\\/a><\\/li>',\n        next: '<li class=\"next\"><a class=\"next\" href=\"javascript:void(0);\">&gt;<\\/a><\\/li>',\n        last: '<li class=\"last\"><a class=\"prev\" href=\"javascript:void(0);\">&gt&gt;<\\/a><\\/li>',\n        page: '<li class=\"page\"><a href=\"javascript:void(0);\">{{page}}<\\/a><\\/li>',\n        onPageChange: function onPageChange(n, type) {\n          console.log(n);\n          console.log(type);\n\n          if (type == 'init') {\n            layer.closeAll(\"loading\");\n            dsp.closeLoadPercent($('.orders-list'));\n            return;\n          }\n\n          $scope.ordersList = [];\n          dsp.loadPercent($('.orders-list'), $(window).height() - 171, 47, 0); //让待处理全选按钮置为非选中状态\n\n          $('#z-dcl-ord .zchecked-all').attr('src', 'static/image/direct-orders/multiple1.png');\n          var showList = $('#dcl-sel').val() - 0;\n          var yStoresTime = $('#y-ord-sdate').val();\n          var yStoreeTime = $('#y-ord-edate').val();\n          var cjsTime = $('#cj-stime').val();\n          var cjeTime = $('#cj-etime').val();\n          var yStoreName = $.trim($('#y-pro-name').val());\n          var cjStoreName = $.trim($('#cj-pro-name').val());\n          var berName = $.trim($('.buyer-inp').val());\n          var searchinpVal = $('.ord-search-inp').val();\n          var ordType = '';\n\n          if ($('.type-sel').val() == 'All') {\n            ordType = '';\n          } else if ($('.type-sel').val() == 'Shopify Imported') {\n            ordType = '2';\n          } else if ($('.type-sel').val() == 'Excel Imported') {\n            ordType = '1';\n          }\n\n          var orData = {};\n          tjFun(orData);\n          orData.data.page = n;\n          orData.data = JSON.stringify(orData.data);\n          dsp.postFun('app/order/queryOrders', JSON.stringify(orData), function (data) {\n            // console.log(data.data)\n            console.log(data.data.result);\n            var list1 = data.data.result;\n            $scope.list = JSON.parse(list1);\n            console.log($scope.list);\n            $scope.ordersList = $scope.list.ordersList;\n            console.log($scope.ordersList);\n            $scope.pcountN = $scope.list.countNumber; //获取总订单的条数\n\n            if ($scope.pcountN > 0) {\n              dsp.removeNodataPic($('.orders-list'));\n              dsp.closeLoadPercent($('.orders-list'));\n            } else {\n              addNotSjFun();\n              dsp.closeLoadPercent($('.orders-list'));\n            }\n\n            logisRemark($scope.list);\n          }, function (err) {\n            layer.closeAll(\"loading\");\n            dsp.closeLoadPercent($('.orders-list'));\n            dsp.cjMesFun(1);\n          });\n        }\n      });\n    } //分页选择框的查询事件\n\n\n    $('#dcl-sel').change(function () {\n      //让待处理全选按钮置为非选中状态\n      $('#z-dcl-ord .zchecked-all').attr('src', 'static/image/direct-orders/multiple1.png');\n      var showList = $(this).val() - 0;\n\n      if ($scope.pcountN < 1) {\n        layer.closeAll(\"loading\");\n        dsp.closeLoadPercent($('.orders-list'));\n        return;\n      }\n\n      $(\".pagination-demo1\").jqPaginator({\n        totalCounts: $scope.pcountN,\n        //设置分页的总条目数\n        pageSize: showList,\n        //设置每一页的条目数\n        visiblePages: 5,\n        //显示多少页\n        currentPage: 1,\n        activeClass: 'active',\n        first: '<li class=\"first\"><a class=\"prev\" href=\"javascript:void(0);\">&lt&lt;<\\/a><\\/li>',\n        prev: '<li class=\"prev\"><a class=\"prev\" href=\"javascript:void(0);\">&lt;<\\/a><\\/li>',\n        next: '<li class=\"next\"><a class=\"next\" href=\"javascript:void(0);\">&gt;<\\/a><\\/li>',\n        last: '<li class=\"last\"><a class=\"prev\" href=\"javascript:void(0);\">&gt&gt;<\\/a><\\/li>',\n        page: '<li class=\"page\"><a href=\"javascript:void(0);\">{{page}}<\\/a><\\/li>',\n        onPageChange: function onPageChange(n) {\n          $scope.ordersList = [];\n          dsp.loadPercent($('.orders-list'), $(window).height() - 171, 47, 0);\n\n          if ($('.type-sel').val() == 'All') {\n            ordType = '';\n          } else if ($('.type-sel').val() == 'Shopify Imported') {\n            ordType = '2';\n          } else if ($('.type-sel').val() == 'Excel Imported') {\n            ordType = '1';\n          }\n\n          var orData = {};\n          tjFun(orData);\n          orData.data.page = n;\n          orData.data.limit = showList;\n          orData.data = JSON.stringify(orData.data); // console.log(orData.data)\n\n          console.log(JSON.stringify(orData));\n          dsp.postFun('app/order/queryOrders', JSON.stringify(orData), dclsFun, dcleFun);\n\n          function dclsFun(data) {\n            console.log(data.data);\n            var list1 = data.data.result;\n            console.log(data.data.result); // console.log(list);\n\n            $scope.list = data.data.result;\n            $scope.list = JSON.parse(list1);\n            $scope.ordersList = $scope.list.ordersList;\n            console.log($scope.ordersList); //获取总订单的条数\n\n            $scope.pcountN = $scope.list.countNumber; //获取总订单的条数\n\n            if ($scope.pcountN > 0) {\n              dsp.removeNodataPic($('.orders-list'));\n              dsp.closeLoadPercent($('.orders-list'));\n            } else {\n              addNotSjFun();\n              dsp.closeLoadPercent($('.orders-list'));\n            }\n\n            logisRemark($scope.list);\n          }\n\n          function dcleFun() {\n            layer.closeAll(\"loading\");\n            dsp.closeLoadPercent($('.orders-list'));\n            dsp.cjMesFun(1);\n          }\n        }\n      });\n    }); //按店铺搜索订单\n\n    $scope.storeChangeFun = function () {\n      console.log($scope.storeName);\n      $scope.ordersList = [];\n      dsp.loadPercent($('.orders-list'), $(window).height() - 171, 47, 0);\n      var orData = {};\n      tjFun(orData);\n\n      if (!$scope.storeName) {\n        orData.data.storeNumber = '';\n      } else {\n        orData.data.storeNumber = $scope.storeName;\n      }\n\n      orData.data.storage = $scope.storage;\n      orData.data = JSON.stringify(orData.data);\n      console.log(orData.data);\n      console.log(JSON.stringify(orData));\n      dsp.postFun('app/order/queryOrders', JSON.stringify(orData), function (data) {\n        //让待处理全选按钮置为非选中状态\n        $('#z-dcl-ord .zchecked-all').attr('src', 'static/image/direct-orders/multiple1.png');\n        console.log(data.data.result);\n        var list1 = data.data.result; // console.log(list);\n\n        $scope.list = data.data.result;\n        $scope.list = JSON.parse(list1);\n        $scope.ordersList = $scope.list.ordersList;\n        console.log($scope.ordersList);\n        $scope.pcountN = $scope.list.countNumber; //获取总订单的条数\n\n        if ($scope.pcountN > 0) {\n          dsp.removeNodataPic($('.orders-list'));\n          dsp.closeLoadPercent($('.orders-list'));\n        } else {\n          addNotSjFun();\n          dsp.closeLoadPercent($('.orders-list'));\n        }\n\n        logisRemark($scope.list);\n        importFun(); //分页函数\n      }, function (err) {\n        layer.closeAll(\"loading\");\n        dsp.closeLoadPercent($('.orders-list'));\n        dsp.cjMesFun(1);\n      });\n    }; //按条件分页 下\n\n\n    $('.ip-jump-btn2').click(function () {\n      var selectVal = 1; //复选框的值\n\n      selectVal = $('.ip-select-num2').val() - 0; // alert(selectVal);\n      // var inpVal = 0;//存储输入框的值\n\n      var inpVal = $('.inp-num-go2').val() - 0; //输入框 需要跳到第几页\n      // alert(inpVal)\n\n      if (inpVal == '' || inpVal < 1) {\n        layer.closeAll(\"loading\");\n        layer.msg('Page does not exist.');\n        return;\n      }\n\n      var countN = Math.ceil($scope.pcountN / selectVal); // alert(countN)\n\n      if (inpVal > countN) {\n        layer.closeAll(\"loading\");\n        layer.msg('Please input number less than page amount.');\n        return;\n      } //让全选按钮置为非选中状态\n\n\n      $('.zchecked-all').attr('src', 'static/image/direct-orders/multiple1.png');\n      $(\".pagination-demo1\").jqPaginator({\n        totalCounts: $scope.pcountN,\n        //设置分页的总条目数\n        pageSize: selectVal,\n        //设置每一页的条目数\n        visiblePages: 5,\n        //显示多少页\n        currentPage: inpVal,\n        activeClass: 'active',\n        first: '<li class=\"first\"><a class=\"prev\" href=\"javascript:void(0);\">&lt&lt;<\\/a><\\/li>',\n        prev: '<li class=\"prev\"><a class=\"prev\" href=\"javascript:void(0);\">&lt;<\\/a><\\/li>',\n        next: '<li class=\"next\"><a class=\"next\" href=\"javascript:void(0);\">&gt;<\\/a><\\/li>',\n        last: '<li class=\"last\"><a class=\"prev\" href=\"javascript:void(0);\">&gt&gt;<\\/a><\\/li>',\n        page: '<li class=\"page\"><a href=\"javascript:void(0);\">{{page}}<\\/a><\\/li>',\n        onPageChange: function onPageChange(n) {\n          $scope.ordersList = [];\n          dsp.loadPercent($('.orders-list'), $(window).height() - 171, 47, 0);\n          var orData = {};\n          tjFun(orData);\n          orData.data.page = n;\n          orData.data = JSON.stringify(orData.data);\n          console.log(JSON.stringify(orData));\n          dsp.postFun('app/order/queryOrders', JSON.stringify(orData), function (data) {\n            console.log(data.data);\n            var list1 = data.data.result;\n            $scope.list = data.data.result;\n            $scope.list = JSON.parse(list1);\n            $scope.ordersList = $scope.list.ordersList;\n            console.log($scope.ordersList);\n            $scope.pcountN = $scope.list.countNumber; //获取总订单的条数\n\n            if ($scope.pcountN > 0) {\n              dsp.removeNodataPic($('.orders-list'));\n              dsp.closeLoadPercent($('.orders-list'));\n            } else {\n              addNotSjFun();\n              dsp.closeLoadPercent($('.orders-list'));\n            }\n\n            logisRemark($scope.list);\n          }, function (err) {\n            layer.closeAll(\"loading\");\n            dsp.closeLoadPercent($('.orders-list'));\n            dsp.cjMesFun(1);\n          });\n        }\n      });\n    }); //用订单号搜索 orderNumber\n\n    $scope.searchKeydown = function (e) {\n      if (e.keyCode == 13) {\n        $scope.ordnumSearch();\n      }\n    };\n\n    $scope.ordnumSearch = function () {\n      $scope.addressOrderList = [];\n      console.log($scope.addressOrderList);\n      $scope.ordersList = [];\n      dsp.loadPercent($('.orders-list'), $(window).height() - 171, 47, 0);\n      var orData = {};\n      tjFun(orData);\n      orData.data = JSON.stringify(orData.data);\n      console.log(orData.data);\n      console.log(JSON.stringify(orData)); // alert(inpVal)\n\n      dsp.postFun('app/order/queryOrders', JSON.stringify(orData), dclsFun, dcleFun);\n\n      function dclsFun(data) {\n        //让待处理全选按钮置为非选中状态\n        $('#z-dcl-ord .zchecked-all').attr('src', 'static/image/direct-orders/multiple1.png');\n        console.log(data.data.result);\n        var list1 = data.data.result;\n        $scope.list = data.data.result;\n        $scope.list = JSON.parse(list1);\n        $scope.ordersList = $scope.list.ordersList;\n        console.log($scope.ordersList);\n        $scope.pcountN = $scope.list.countNumber; //获取总订单的条数\n\n        if ($scope.pcountN > 0) {\n          dsp.removeNodataPic($('.orders-list'));\n          dsp.closeLoadPercent($('.orders-list'));\n        } else {\n          addNotSjFun();\n          dsp.closeLoadPercent($('.orders-list'));\n        }\n\n        logisRemark($scope.list);\n        importFun();\n        $scope.zchecked_all = false;\n      }\n\n      function dcleFun() {\n        layer.closeAll(\"loading\");\n        dsp.closeLoadPercent($('.orders-list'));\n        dsp.cjMesFun(1);\n      }\n    }; // function pselwlFun() {\n    //   $('.dcl-ord .order-detail').each(function () {\n    //     if ($(this).children('.dcl-ord-wltd').children('.dcl-ord-selwl').val() == 'Please select') {\n    //       $(this).children('.dcl-ord-wltd').children('.dcl-ord-selwl').css('border', '1px solid #f88f29');\n    //     } else {\n    //       $(this).children('.dcl-ord-wltd').children('.dcl-ord-selwl').css('border', '1px solid #ececec');\n    //     }\n    //   })\n    // }\n    //给左侧的导航添加滚动事件\n\n\n    $(document).scroll(function () {\n      if ($(document).scrollTop() >= 0) {\n        $('.left-nav').css({\n          position: 'fixed',\n          top: '80px'\n        });\n\n        if ($(document).scrollTop() >= 52) {\n          $('.back-wrap').css({\n            top: '80px'\n          });\n        } else {\n          $('.back-wrap').css({\n            top: '130px'\n          });\n        }\n      } else {\n        $('.left-nav').css({\n          position: 'relative',\n          top: '80px'\n        });\n      }\n    }); //高级搜索部分的查询\n\n    $('#tj-search-btn').click(function () {\n      $scope.ordersList = [];\n      dsp.loadPercent($('.orders-list'), $(window).height() - 171, 47, 0);\n      var orData = {};\n      tjFun(orData);\n      orData.data = JSON.stringify(orData.data);\n      console.log(orData.data);\n      console.log(JSON.stringify(orData));\n      dsp.postFun('app/order/queryOrders', JSON.stringify(orData), dclsFun, dcleFun);\n\n      function dclsFun(data) {\n        //让待处理全选按钮置为非选中状态\n        $('#z-dcl-ord .zchecked-all').attr('src', 'static/image/direct-orders/multiple1.png');\n        console.log(data.data);\n        var list1 = data.data.result;\n        $scope.list = JSON.parse(list1);\n        $scope.ordersList = $scope.list.ordersList;\n        console.log(data.data.result);\n        $scope.pcountN = $scope.list.countNumber; //获取总订单的条数\n        // alert($scope.pcountN)\n\n        if ($scope.pcountN > 0) {\n          dsp.removeNodataPic($('.orders-list'));\n          dsp.closeLoadPercent($('.orders-list'));\n        } else {\n          addNotSjFun();\n          dsp.closeLoadPercent($('.orders-list'));\n        }\n\n        logisRemark($scope.list);\n        importFun(); //分页函数\n\n        $scope.zchecked_all = false;\n      }\n\n      function dcleFun() {\n        layer.closeAll(\"loading\");\n        dsp.closeLoadPercent($('.orders-list'));\n        dsp.cjMesFun(1);\n      }\n    }); //高级搜索里面的按订单类型搜索\n\n    $('.type-sel').change(function () {\n      $scope.ordersList = [];\n      dsp.loadPercent($('.orders-list'), $(window).height() - 171, 47, 0);\n      var orData = {};\n      tjFun(orData);\n      orData.data = JSON.stringify(orData.data);\n      console.log(orData.data);\n      console.log(JSON.stringify(orData));\n      dsp.postFun('app/order/queryOrders', JSON.stringify(orData), dclsFun, dcleFun);\n\n      function dclsFun(data) {\n        //让待处理全选按钮置为非选中状态\n        $('#z-dcl-ord .zchecked-all').attr('src', 'static/image/direct-orders/multiple1.png');\n        console.log(data.data);\n        var list1 = data.data.result;\n        console.log(data.data.result);\n        $scope.list = data.data.result;\n        $scope.list = JSON.parse(list1);\n        $scope.ordersList = $scope.list.ordersList;\n        console.log($scope.ordersList);\n        $scope.pcountN = $scope.list.countNumber; //获取总订单的条数\n        // alert($scope.pcountN)\n\n        if ($scope.pcountN > 0) {\n          dsp.removeNodataPic($('.orders-list'));\n          dsp.closeLoadPercent($('.orders-list'));\n        } else {\n          addNotSjFun();\n          dsp.closeLoadPercent($('.orders-list'));\n        }\n\n        logisRemark($scope.list);\n        importFun(); //分页函数\n      }\n\n      function dcleFun() {\n        layer.closeAll(\"loading\");\n        dsp.closeLoadPercent($('.orders-list'));\n        dsp.cjMesFun(1);\n      }\n    }); //cj商品名字跳转到cj详情页\n\n    $scope.cjdetailhref = function (orditem, spitem) {\n      var id = spitem.cjProductId;\n      window.open('product-detail.html?id=' + id);\n    }; //商品名字跳转客户后台\n\n\n    $scope.hrefFun = function (orditem, spitem) {\n      console.log(orditem.STORE_NAME);\n      var storeName = orditem.STORE_NAME;\n      console.log(spitem.product_id);\n      var productId = spitem.product_id;\n\n      if (storeName == \"Excel Imported\") {\n        return;\n      } else {\n        window.open('https://' + storeName + '.myshopify.com/admin/products/' + productId);\n      }\n    };\n\n    function addNotSjFun() {\n      dsp.addNodataPic($('.orders-list'), $(window).height() - 171, 47, 0, {\n        width: '100%'\n      }, true);\n      $('.deal-orders').css('min-height', $('.cj-nodata-pic').height() + 50);\n    } //cj开始日期搜索\n\n\n    $(\"#cj-stime\").click(function () {\n      var cjendtime = $(\"#cj-stime\").val();\n      var interval = setInterval(function () {\n        var endtime2 = $(\"#cj-stime\").val();\n\n        if (endtime2 != cjendtime) {\n          var _dclsFun14 = function _dclsFun14(data) {\n            //让待处理全选按钮置为非选中状态\n            $('#z-dcl-ord .zchecked-all').attr('src', 'static/image/direct-orders/multiple1.png');\n            console.log(data.data);\n            console.log(data.data.result);\n            var list1 = data.data.result;\n            $scope.list = data.data.result;\n            $scope.list = JSON.parse(list1);\n            $scope.ordersList = $scope.list.ordersList;\n            console.log($scope.ordersList);\n            $scope.pcountN = $scope.list.countNumber; //获取总订单的条数\n\n            if ($scope.pcountN > 0) {\n              dsp.removeNodataPic($('.orders-list'));\n              dsp.closeLoadPercent($('.orders-list'));\n            } else {\n              addNotSjFun();\n              dsp.closeLoadPercent($('.orders-list'));\n            }\n\n            logisRemark($scope.list);\n            importFun(); //分页函数\n          };\n\n          var _dcleFun14 = function _dcleFun14() {\n            layer.closeAll(\"loading\");\n            dsp.closeLoadPercent($('.orders-list'));\n            dsp.cjMesFun(1);\n          };\n\n          $scope.ordersList = [];\n          dsp.loadPercent($('.orders-list'), $(window).height() - 210, 47, 0);\n          clearInterval(interval);\n          var orData = {};\n          tjFun(orData);\n          orData.data = JSON.stringify(orData.data);\n          dsp.postFun('app/order/queryOrders', JSON.stringify(orData), _dclsFun14, _dcleFun14);\n        }\n      }, 100);\n    }); //cj结束日期搜索\n\n    $(\"#cj-etime\").click(function () {\n      var cjendtime = $(\"#cj-etime\").val();\n      var interval = setInterval(function () {\n        var endtime2 = $(\"#cj-etime\").val();\n\n        if (endtime2 != cjendtime) {\n          var _dclsFun15 = function _dclsFun15(data) {\n            //让待处理全选按钮置为非选中状态\n            $('#z-dcl-ord .zchecked-all').attr('src', 'static/image/direct-orders/multiple1.png');\n            console.log(data.data);\n            var list1 = data.data.result;\n            $scope.list = data.data.result;\n            $scope.list = JSON.parse(list1);\n            console.log($scope.list);\n            $scope.ordersList = $scope.list.ordersList;\n            console.log($scope.ordersList);\n            $scope.pcountN = $scope.list.countNumber; //获取总订单的条数\n\n            if ($scope.pcountN > 0) {\n              dsp.removeNodataPic($('.orders-list'));\n              dsp.closeLoadPercent($('.orders-list'));\n            } else {\n              addNotSjFun();\n              dsp.closeLoadPercent($('.orders-list'));\n            }\n\n            logisRemark($scope.list);\n            importFun(); //分页函数\n          };\n\n          var _dcleFun15 = function _dcleFun15() {\n            layer.closeAll(\"loading\");\n            dsp.closeLoadPercent($('.orders-list'));\n            dsp.cjMesFun(1);\n          };\n\n          $scope.ordersList = [];\n          dsp.loadPercent($('.orders-list'), $(window).height() - 210, 47, 0);\n          clearInterval(interval);\n          var orData = {};\n          tjFun(orData);\n          orData.data = JSON.stringify(orData.data);\n          dsp.postFun('app/order/queryOrders', JSON.stringify(orData), _dclsFun15, _dcleFun15);\n        }\n      }, 100);\n    });\n    $scope.cgxPageSize = '50';\n    $scope.cgxPageNum = '1';\n\n    if (localStorage.getItem('isOpenDraft')) {\n      openDFun();\n    } // 草稿箱 弹框\n\n\n    $scope.errorArr = [];\n\n    $scope.openDraftFun = function () {\n      localStorage.setItem('isOpenDraft', 1);\n      location.reload();\n    };\n\n    $scope.mesOrdIndex = 0;\n\n    $scope.draftFun = function () {\n      $('.draft-wrap').css({\n        display: 'block'\n      });\n      $('.draft-wrap table thead tr th img').attr('src', 'static/image/direct-orders/multiple1.png');\n      $('.draft-wrap table tbody tr td img').attr('src', 'static/image/direct-orders/multiple1.png');\n      layer.load(2);\n      dsp.postFun('app/order/getErrorAnalysisOrder', JSON.stringify(orData), con, err);\n\n      function con(res) {\n        console.log(res.data);\n        layer.closeAll(\"loading\");\n        $scope.listArr = res.data;\n        $scope.mesOrdIndex = 0;\n\n        for (var i = 0; i < $scope.listArr.length; i++) {\n          console.log($scope.listArr[i].message);\n          console.log(i);\n          $scope.listArr[i].message = JSON.parse($scope.listArr[i].message);\n          console.log($scope.listArr[i].message);\n\n          for (var j = 0; j < $scope.listArr[i].message.length; j++) {\n            $scope.mesOrdIndex++;\n            $scope.listArr[i].message[j].index = $scope.mesOrdIndex;\n          }\n        }\n\n        console.log($scope.listArr);\n\n        if ($scope.listArr.length == 0) {\n          $scope.noDataFound = true;\n        }\n\n        setTimeout(function () {\n          $('.draft-wrap table tbody tr td input').focus(function () {\n            $(this).css({\n              backgroundColor: '#ccc'\n            });\n          });\n          $('.draft-wrap table tbody tr td input').blur(function () {\n            $(this).css({\n              backgroundColor: '#fff'\n            });\n          });\n        }, 500);\n      }\n\n      ;\n\n      function err(res) {\n        console.log(res);\n        $scope.noDataFound = true;\n        layer.closeAll(\"loading\");\n      }\n    }; //筛选\n\n\n    $scope.showSkuFun = function () {\n      $scope.skuFilterFlag = true;\n      var sfLenth = $scope.listArr.length;\n      $scope.skuList = [];\n\n      for (var i = 0; i < sfLenth; i++) {\n        for (var j = 0; j < $scope.listArr[i].message.length; j++) {\n          if ($scope.skuList.length > 0) {\n            for (var k = 0; k < $scope.skuList.length; k++) {\n              if ($scope.listArr[i].message[j].sku == $scope.skuList[k]) {\n                break;\n              }\n\n              if (k == $scope.skuList.length - 1) {\n                $scope.skuList.push($scope.listArr[i].message[j].sku);\n              }\n            }\n          } else {\n            $scope.skuList.push($scope.listArr[i].message[j].sku);\n          }\n        }\n      }\n    };\n\n    $scope.closeFSkuFun = function () {\n      $scope.skuFilterFlag = false;\n    }; //选中后筛选\n\n\n    $scope.sureFilSkuFun = function () {\n      $scope.skuFilterFlag = false;\n      var skuArr = [];\n      $('.sku-div .zcheckbox').each(function () {\n        if ($(this).attr('src') == 'static/image/direct-orders/multiple2.png') {\n          skuArr.push($(this).siblings('.item-sku').text());\n        }\n      });\n      console.log(skuArr);\n      console.log($scope.listArr);\n      var sfLenth = $scope.listArr.length;\n      var filterLen = skuArr.length;\n      var arr = [];\n      $scope.mesOrdIndex = 0;\n\n      for (var i = 0; i < sfLenth; i++) {\n        // var te=[];\n        for (var j = 0; j < $scope.listArr[i].message.length; j++) {\n          for (var k = 0; k < filterLen; k++) {\n            if ($scope.listArr[i].message[j].sku == skuArr[k]) {\n              $scope.listArr[i].message[j].isShow = false;\n              $scope.mesOrdIndex++;\n              $scope.listArr[i].message[j].index = $scope.mesOrdIndex;\n              break;\n            } else {\n              $scope.listArr[i].message[j].isShow = true;\n            }\n          }\n        }\n      }\n\n      console.log($scope.listArr);\n    };\n\n    $('.sku-div').on('click', '.zcheckbox', function (event) {\n      if ($(this).attr('src') == 'static/image/direct-orders/multiple1.png') {\n        $(this).attr('src', 'static/image/direct-orders/multiple2.png');\n      } else if ($(this).attr('src') == 'static/image/direct-orders/multiple2.png') {\n        $(this).attr('src', 'static/image/direct-orders/multiple1.png');\n      }\n    });\n\n    function openDFun() {\n      $('.draft-wrap').css({\n        display: 'block'\n      });\n      $('.draft-wrap table thead tr th img').attr('src', 'static/image/direct-orders/multiple1.png');\n      $('.draft-wrap table tbody tr td img').attr('src', 'static/image/direct-orders/multiple1.png');\n      layer.load(2);\n      var cgxData = {};\n      cgxData.pageSize = $scope.cgxPageSize;\n      cgxData.pageNum = $scope.cgxPageNum;\n      console.log(JSON.stringify(cgxData));\n      dsp.postFun('app/order/getErrorAnalysisOrder', JSON.stringify(cgxData), con, err);\n\n      function con(res) {\n        console.log(res.data);\n        $scope.cgxTotal = res.data.count;\n        console.log($scope.cgxTotal);\n        layer.closeAll(\"loading\");\n        $scope.listArr = res.data.list;\n        var sfLenth = $scope.listArr.length;\n        $scope.skuList = [];\n        $scope.mesOrdIndex = 0;\n\n        for (var i = 0; i < sfLenth; i++) {\n          console.log(i);\n          $scope.listArr[i].message = $scope.listArr[i].message.replace(/[\\r\\n\\t]/g, \"\");\n          $scope.listArr[i].message = JSON.parse($scope.listArr[i].message);\n\n          for (var j = 0; j < $scope.listArr[i].message.length; j++) {\n            $scope.listArr[i].message[j].isShow = false;\n\n            if ($scope.skuList.length > 0) {\n              for (var k = 0; k < $scope.skuList.length; k++) {\n                if ($scope.listArr[i].message[j].sku == $scope.skuList[k]) {\n                  break;\n                }\n\n                if (k == $scope.skuList.length - 1) {\n                  $scope.skuList.push($scope.listArr[i].message[j].sku);\n                }\n              }\n            } else {\n              $scope.skuList.push($scope.listArr[i].message[j].sku);\n            }\n\n            $scope.mesOrdIndex++;\n            $scope.listArr[i].message[j].index = $scope.mesOrdIndex;\n            console.log($scope.mesOrdIndex);\n          }\n        }\n\n        console.log($scope.listArr);\n        console.log($scope.skuList);\n\n        if ($scope.listArr.length == 0) {\n          $scope.noDataFound = true;\n        }\n\n        cgxFyFun();\n        setTimeout(function () {\n          $('.draft-wrap table tbody tr td input').focus(function () {\n            $(this).css({\n              backgroundColor: '#ccc'\n            });\n          });\n          $('.draft-wrap table tbody tr td input').blur(function () {\n            $(this).css({\n              backgroundColor: '#fff'\n            });\n          });\n        }, 500);\n      }\n\n      ;\n\n      function err(res) {\n        console.log(res);\n        $scope.noDataFound = true;\n        layer.closeAll(\"loading\");\n      }\n    }\n\n    function cgxFyFun() {\n      if ($scope.cgxTotal < 1) {\n        layer.closeAll(\"loading\");\n        dsp.closeLoadPercent($('.orders-list'));\n        return;\n      }\n\n      $(\".cgx-pag-dom\").jqPaginator({\n        totalCounts: $scope.cgxTotal - 0,\n        //设置分页的总条目数\n        pageSize: $scope.cgxPageSize - 0,\n        //设置每一页的条目数\n        visiblePages: 5,\n        currentPage: $scope.cgxPageNum - 0,\n        activeClass: 'active',\n        first: '<li class=\"first\"><a class=\"prev\" href=\"javascript:void(0);\">&lt&lt;<\\/a><\\/li>',\n        prev: '<li class=\"prev\"><a class=\"prev\" href=\"javascript:void(0);\">&lt;<\\/a><\\/li>',\n        next: '<li class=\"next\"><a class=\"next\" href=\"javascript:void(0);\">&gt;<\\/a><\\/li>',\n        last: '<li class=\"last\"><a class=\"prev\" href=\"javascript:void(0);\">&gt&gt;<\\/a><\\/li>',\n        page: '<li class=\"page\"><a href=\"javascript:void(0);\">{{page}}<\\/a><\\/li>',\n        onPageChange: function onPageChange(n, type) {\n          console.log(n);\n          console.log(type);\n\n          if (type == 'init') {\n            layer.closeAll(\"loading\");\n            dsp.closeLoadPercent($('.orders-list'));\n            return;\n          }\n\n          $scope.cgxPageNum = n + '';\n          openDFun();\n        }\n      });\n    }\n\n    $scope.cgxChangeFun = function () {\n      $scope.cgxPageNum = '1';\n      openDFun();\n    };\n\n    $scope.cgxGoFun = function () {\n      var pageCount = Math.ceil($scope.cgxTotal / $scope.cgxPageNum);\n      console.log(pageCount);\n\n      if (pageCount < $scope.cgxPageNum) {\n        layer.msg('Please input number less than page amount.');\n        return;\n      }\n\n      openDFun();\n    };\n\n    var draftSelectNum = 0; // 选中一条\n\n    $scope.selectItemFun = function ($event) {\n      if ($($event.target).attr('src') == 'static/image/direct-orders/multiple1.png') {\n        $($event.target).attr('src', 'static/image/direct-orders/multiple2.png');\n        draftSelectNum++;\n\n        if (draftSelectNum == $('.draft-box .selectBtn .xuhao-sty').length) {\n          $('.draft-box .zchecked-all').attr('src', 'static/image/direct-orders/multiple2.png');\n        }\n      } else if ($($event.target).attr('src') == 'static/image/direct-orders/multiple2.png') {\n        $($event.target).attr('src', 'static/image/direct-orders/multiple1.png');\n        draftSelectNum--;\n\n        if (draftSelectNum != $('.draft-box .selectBtn .xuhao-sty').length) {\n          $('.draft-box .zchecked-all').attr('src', 'static/image/direct-orders/multiple1.png');\n        }\n      }\n\n      console.log(draftSelectNum);\n    }; // 全选\n\n\n    $scope.selectAllFun = function ($event) {\n      if ($($event.target).attr('src') == 'static/image/direct-orders/multiple1.png') {\n        $($event.target).attr('src', 'static/image/direct-orders/multiple2.png');\n        draftSelectNum = $('.draft-box .selectBtn .xuhao-sty').length;\n        $('.draft-box .selectBtn .xuhao-sty').children('img').attr('src', 'static/image/direct-orders/multiple2.png');\n      } else {\n        $($event.target).attr('src', 'static/image/direct-orders/multiple1.png');\n        draftSelectNum = 0;\n        $('.draft-box .selectBtn .xuhao-sty').children('img').attr('src', 'static/image/direct-orders/multiple1.png');\n      }\n    }; // Cancel 按钮\n\n\n    $scope.draftCancelFun = function () {\n      localStorage.removeItem('isOpenDraft');\n      $('.draft-wrap').css({\n        display: 'none'\n      });\n      $('.draft-wrap table thead tr th img').attr('src', 'static/image/direct-orders/multiple1.png');\n      $('.draft-wrap table tbody tr td img').attr('src', 'static/image/direct-orders/multiple1.png');\n      $scope.ordersList = [];\n      dsp.loadPercent($('.orders-list'), $(window).height() - 171, 47, 0);\n      var showList = $('#dcl-sel').val() - 0;\n      var orData = {};\n      tjFun(orData);\n      orData.data = JSON.stringify(orData.data);\n      dsp.postFun('app/order/queryOrders', JSON.stringify(orData), dclsFun, dcleFun);\n\n      function dclsFun(data) {\n        console.log(data.data);\n        var list1 = data.data.result;\n        $scope.list = JSON.parse(list1);\n        $scope.ordersList = $scope.list.ordersList;\n        console.log($scope.ordersList);\n        $scope.pcountN = $scope.list.countNumber; //获取总订单的条数\n        // layer.msg('Please check the failed ones on the Draft.')\n\n        if ($scope.pcountN > 0) {\n          dsp.removeNodataPic($('.orders-list'));\n          dsp.closeLoadPercent($('.orders-list'));\n        } else {\n          addNotSjFun();\n          dsp.closeLoadPercent($('.orders-list'));\n        }\n\n        $scope.ordstatusNum = $scope.list.allOrderCount2; //各种状态订单的数量\n\n        logisRemark($scope.list);\n        importFun(); //分页函数\n\n        numFun(); //调用给订单赋值的函数\n      }\n\n      function dcleFun() {\n        layer.closeAll(\"loading\");\n        dsp.closeLoadPercent($('.orders-list'));\n        dsp.cjMesFun(1);\n      }\n    }; // submit 按钮\n\n\n    $scope.submitList = [];\n\n    $scope.draftSubmitFun = function () {\n      if (draftSelectNum > 0) {\n        var submitDraft = {};\n        var trID = [];\n        var trMessage = [[\"ordernumber\", \"sku\", \"quantity\", \"producttitle\", \"customername\", \"address1\", \"address2\", \"city\", \"province\", \"zip\", \"country\", \"shippingphonenumber\", \"taxnumber\", \"shipstationid\", \"logisticsType\", \"datasource\", \"shippingMethodId\", \"productId\", \"salesorderrowid\", \"warehouse\", \"price\", \"currency\"]];\n        $('.draft-box .zcheckbox').each(function () {\n          if ($(this).attr('src') == 'static/image/direct-orders/multiple2.png') {\n            console.log($(this).parent().siblings('.draft-id').children('input').val());\n            var trid = $(this).parent().parent().siblings('.draft-id').children('input').val();\n            var OrderNumber = $(this).parent().parent().siblings('.draf-order-num').children('input').val();\n            var SKU = $(this).parent().parent().siblings('.draf-sku').children('input').val();\n            var Quantity = $(this).parent().parent().siblings('.draf-quantity').children('input').val();\n            var ProductTitle = $(this).parent().parent().siblings('.draf-product-title').children('input').val();\n            var CustomerName = $(this).parent().parent().siblings('.draf-customer-name').children('input').val();\n            var Address1 = $(this).parent().parent().siblings('.draft-address1').children('input').val();\n            var Address2 = $(this).parent().parent().siblings('.draft-address2').children('input').val();\n            var City = $(this).parent().parent().siblings('.draft-city').children('input').val();\n            var Province = $(this).parent().parent().siblings('.draft-province').children('input').val();\n            var ZIP = $(this).parent().parent().siblings('.draft-zip').children('input').val();\n            var Country = $(this).parent().parent().siblings('.draft-country').children('input').val();\n            var ShippPhoneNum = $(this).parent().parent().siblings('.draft-shop-phonenum').children('input').val();\n            var taxNumber = $(this).parent().parent().siblings('.draft-tax-number').children('input').val();\n            var Describe = $(this).parent().parent().siblings('.draft-describe').children('input').val();\n            var Shipstationid = $(this).parent().parent().siblings('.draft-shipstationid').children('input').val();\n            var draftLogistic = $(this).parent().parent().siblings('.draft-logistictype').children('input').val();\n            var datasource = $(this).parent().parent().siblings('.datasource-td').children('input').val();\n            var shippingMethodId = $(this).parent().parent().siblings('.shippingMethodId-td').children('input').val();\n            var productId = $(this).parent().parent().siblings('.productid-td').children('input').val();\n            var price = $(this).parent().parent().siblings('.price-td').children('input').val();\n            var currency = $(this).parent().parent().siblings('.currency-td').children('input').val();\n            var salesorderrowid = $(this).parent().parent().siblings('.selesid-td').children('input').val();\n            var warehouse = $(this).parent().parent().siblings('.warehouse-td').children('input').val();\n            console.log(Shipstationid);\n            console.log(productId);\n            var tr1message = [OrderNumber, SKU, Quantity, ProductTitle, CustomerName, Address1, Address2, City, Province, ZIP, Country, ShippPhoneNum, taxNumber, Shipstationid, draftLogistic, datasource, shippingMethodId, productId, salesorderrowid, warehouse, price, currency];\n            trID.push(trid);\n            trMessage.push(tr1message);\n            submitDraft.id = trID;\n            submitDraft.message = trMessage;\n            console.log(tr1message);\n          }\n        });\n        console.log(trID);\n        console.log(trMessage);\n        console.log(submitDraft);\n        $scope.submitTip = true;\n        $scope.deleteTip = false;\n        $('.btnsTip').css({\n          display: 'block'\n        });\n\n        $scope.yesFun = function () {\n          // alert('submit');\n          $('.btnsTip').css({\n            display: 'none'\n          });\n          dsp.postFun('order/oldOrder/reAnalysisOrder', JSON.stringify(submitDraft), draftcFun, drafteFun);\n\n          function draftcFun(res) {\n            console.log(res);\n            console.log(res.data);\n            var restr = JSON.parse(res.data.message);\n            console.log(restr);\n            layer.closeAll(\"loading\");\n\n            if (res.data.statusCode == '200' && restr.result == 'true') {\n              openDFun();\n              $scope.ProductNum = restr.totalNumber - 0;\n              $scope.SuccessNum = restr.success - 0;\n              $scope.FailedNum = restr.nothing - 0;\n              $scope.TotalNum = $scope.SuccessNum + $scope.FailedNum;\n              $('.ordersTip').css({\n                display: 'block'\n              });\n\n              $scope.confirmFun = function () {\n                $('.ordersTip').css({\n                  display: 'none'\n                });\n              };\n            }\n\n            if (res.data.statusCode != '200') {\n              layer.msg(\"Submit Failed!\");\n            }\n          }\n\n          ;\n\n          function drafteFun(res) {\n            console.log(res);\n            layer.closeAll(\"loading\");\n            layer.msg(\"Submit failed!\");\n          }\n        };\n\n        $scope.noFun = function () {\n          // alert('submit');\n          $('.btnsTip').css({\n            display: 'none'\n          });\n        };\n      } else {\n        layer.msg('Please select orders！');\n      }\n    }; // Save 按钮\n\n\n    $scope.draftSaveFun = function () {\n      // alert(draftSelectNum);\n      if (draftSelectNum > 0) {\n        var draftcFun = function draftcFun(res) {\n          console.log(res);\n          layer.closeAll(\"loading\");\n          layer.msg(\"Save successfully!\");\n        };\n\n        var drafteFun = function drafteFun(res) {\n          console.log(res);\n          layer.closeAll(\"loading\");\n        };\n\n        var saveDraft = {};\n        var trID = [];\n        var UUID = [];\n        var trMessages = [];\n        $('.draft-box .zcheckbox').each(function () {\n          if ($(this).attr('src') == 'static/image/direct-orders/multiple2.png') {\n            var trmessage = {};\n            var trid = $(this).parent().parent().siblings('.draft-id').children('input').val();\n            var OrderNumber = $(this).parent().parent().siblings('.draf-order-num').children('input').val();\n            var SKU = $(this).parent().parent().siblings('.draf-sku').children('input').val();\n            var Quantity = $(this).parent().parent().siblings('.draf-quantity').children('input').val();\n            var ProductTitle = $(this).parent().parent().siblings('.draf-product-title').children('input').val();\n            var CustomerName = $(this).parent().parent().siblings('.draf-customer-name').children('input').val();\n            var uuid = $(this).parent().parent().siblings('.draft-uuid').children('input').val();\n            var Address1 = $(this).parent().parent().siblings('.draft-address1').children('input').val();\n            var Address2 = $(this).parent().parent().siblings('.draft-address2').children('input').val();\n            var City = $(this).parent().parent().siblings('.draft-city').children('input').val();\n            var Province = $(this).parent().parent().siblings('.draft-province').children('input').val();\n            var ZIP = $(this).parent().parent().siblings('.draft-zip').children('input').val();\n            var Country = $(this).parent().parent().siblings('.draft-country').children('input').val();\n            var ShippPhoneNum = $(this).parent().parent().siblings('.draft-shop-phonenum').children('input').val();\n            var taxNumber = $(this).parent().parent().siblings('.draft-tax-number').children('input').val();\n            var Describe = $(this).parent().parent().siblings('.draft-describe').children('input').val();\n            var YY = $(this).siblings('.yy').text();\n            var HH = $(this).siblings('.hh').text();\n            var Shipstationid = $(this).parent().parent().siblings('.draft-shipstationid').children('input').val();\n            var datasource = $(this).parent().parent().siblings('.datasource-td').children('input').val();\n            var shippingMethodId = $(this).parent().parent().siblings('.shippingMethodId-td').children('input').val();\n            var productId = $(this).parent().parent().siblings('.productid-td').children('input').val();\n            var price = $(this).parent().parent().siblings('.price-td').children('input').val();\n            var currency = $(this).parent().parent().siblings('.currency-td').children('input').val();\n            var salesorderrowid = $(this).parent().parent().siblings('.selesid-td').children('input').val();\n            var warehouse = $(this).parent().parent().siblings('.warehouse-td').children('input').val();\n            console.log(Shipstationid);\n            console.log($(this).parent().parent().siblings('.draft-shipstationid').children('input'));\n            trmessage.zip = ZIP;\n            trmessage.error = Describe;\n            trmessage.customername = CustomerName;\n            trmessage.address1 = Address1;\n            trmessage.address2 = Address2;\n            trmessage.city = City;\n            trmessage.province = Province;\n            trmessage.shippingphonenumber = ShippPhoneNum;\n            trmessage.ordernumber = OrderNumber;\n            trmessage.producttitle = ProductTitle;\n            trmessage.quantity = Quantity;\n            trmessage.sku = SKU;\n            trmessage.country = Country;\n            trmessage.yyhh = YY;\n            trmessage.hh = HH;\n            trmessage.shipstationid = Shipstationid;\n            trmessage.datasource = datasource;\n            trmessage.shippingMethodId = shippingMethodId;\n            trmessage.productId = productId;\n            trmessage.price = price;\n            trmessage.currency = currency;\n            trmessage.salesorderrowid = salesorderrowid;\n            trmessage.warehouse = warehouse;\n            trmessage.taxnumber = taxNumber;\n            console.log(trmessage);\n            UUID.push(uuid);\n            trID.push(trid);\n            trMessages.push(trmessage);\n            saveDraft.id = trID;\n            saveDraft.uuids = UUID;\n            saveDraft.messages = trMessages;\n          }\n        }); // console.log(trID);\n\n        console.log(trMessages);\n        console.log(saveDraft);\n        layer.load(2);\n        dsp.postFun('app/order/upAnalysisOrder', JSON.stringify(saveDraft), draftcFun, drafteFun);\n        ;\n      } else {\n        layer.msg('Please select orders！');\n      }\n    }; // Delete 按钮\n\n\n    $scope.draftDeleteFun = function () {\n      // alert(draftSelectNum);\n      if (draftSelectNum > 0) {\n        var errorIds = {};\n        var ids = [];\n        var uuids = [];\n        $('.draft-box .zcheckbox').each(function () {\n          if ($(this).attr('src') == 'static/image/direct-orders/multiple2.png') {\n            var trid = $(this).parent().parent().siblings('.draft-id').children('input').val();\n            var uuid = $(this).parent().parent().siblings('.draft-uuid').children('input').val();\n            ids.push(trid);\n            uuids.push(uuid); // $(this).parent().parent().remove();\n\n            $(this).attr('src') == 'static/image/direct-orders/multiple1.png';\n            console.log($(this).parent().parent());\n          }\n        });\n        errorIds.ids = ids;\n        errorIds.uuids = uuids;\n        console.log(ids);\n        console.log(uuids);\n        console.log(errorIds);\n        $scope.submitTip = false;\n        $scope.deleteTip = true;\n        $('.btnsTip').css({\n          display: 'block'\n        });\n\n        $scope.yesFun = function () {\n          // alert('del');\n          $('.btnsTip').css({\n            display: 'none'\n          });\n          layer.load(2);\n          dsp.postFun('app/order/deleteErrorAnalysisOrder', JSON.stringify(errorIds), draftcFun, drafteFun);\n\n          function draftcFun(res) {\n            console.log(res);\n            layer.closeAll(\"loading\");\n            layer.msg(\"Delete successfully!\"); // $scope.draftFun();\n\n            openDFun();\n          }\n\n          ;\n\n          function drafteFun(res) {\n            console.log(res);\n            layer.closeAll(\"loading\");\n          }\n        };\n\n        $scope.noFun = function () {\n          // alert('del');\n          $('.btnsTip').css({\n            display: 'none'\n          });\n        };\n      } else {\n        layer.msg('Please select orders！');\n      }\n    }; //检查没有拉取到订单的原因\n\n\n    $scope.noOrdResonFlag = false;\n    $scope.resResonFlag = false; //展示后台返回的没有订单原因的弹框\n\n    $scope.isSelTimeFlag = true;\n\n    $scope.noOrdResonFun = function (event) {\n      event.stopPropagation();\n      $scope.noOrdResonFlag = true;\n    };\n\n    $scope.noOrdSureFun = function () {\n      if ($scope.shopOrdNum == 'undefined' || $scope.shopOrdNum == '') {\n        layer.msg('Please enter the order number in your shop.');\n        return;\n      }\n\n      $scope.productYmBtn = false;\n      layer.load(2);\n      dsp.postFun('app/order/checkSyncOrder', {\n        customerOrderId: $scope.shopOrdNum\n      }, function (data) {\n        console.log(data); // layer.closeAll(\"loading\")\n\n        $scope.noOrdResonFlag = false;\n\n        if (data.data.result != '') {\n          var cusOrdNum = $scope.shopOrdNum;\n\n          if (data.data.result == '1') {\n            if ($scope.shopOrdNum.indexOf('#') == -1) {\n              dsp.postFun('app/order/checkSyncOrder', {\n                customerOrderId: '#' + cusOrdNum\n              }, function (data) {\n                layer.closeAll(\"loading\");\n                $scope.resResonFlag = true; //打开订单未拉取的原因\n\n                $('.no-ordres-reson').text(data.data.result);\n\n                if (data.data.result == '1') {\n                  $scope.isSelTimeFlag = false;\n\n                  if (data.data.data == '1') {\n                    $scope.seaNowTime = \"Sorry, we has not pulled this order from your store yet.\";\n                  } else {\n                    $scope.seaNowTime = data.data.date;\n                  }\n                }\n              }, function (data) {\n                layer.closeAll(\"loading\");\n                console.log(data);\n              });\n            } else {\n              cusOrdNum = cusOrdNum.replace('#', '');\n              console.log(cusOrdNum);\n              dsp.postFun('app/order/checkSyncOrder', {\n                customerOrderId: cusOrdNum\n              }, function (data) {\n                layer.closeAll(\"loading\");\n                $scope.resResonFlag = true; //打开订单未拉取的原因\n\n                $('.no-ordres-reson').text(data.data.result);\n\n                if (data.data.result == '1') {\n                  $scope.isSelTimeFlag = false;\n\n                  if (data.data.data == '1') {\n                    $scope.seaNowTime = \"Sorry, we has not pulled this order from your store yet.\";\n                  } else {\n                    $scope.seaNowTime = data.data.date;\n                  }\n                }\n              }, function (data) {\n                layer.closeAll(\"loading\");\n                console.log(data);\n              });\n            }\n          } else {\n            layer.closeAll(\"loading\");\n            $scope.resResonFlag = true; //打开订单未拉取的原因\n\n            $('.no-ordres-reson').text(data.data.result);\n\n            if (data.data.result.indexOf('It looks that you had modified your store products recently') != -1) {\n              $scope.productYmBtn = true;\n            }\n\n            console.log(data.data);\n          }\n        } else {\n          layer.closeAll(\"loading\");\n          layer.msg('The query fails.');\n        }\n      }, function (data) {\n        layer.closeAll(\"loading\");\n        console.log(data);\n      });\n    };\n\n    $scope.productLinkFun = function () {\n      window.open('#/products-connection/connected');\n    };\n\n    $scope.noOrdQxFun = function () {\n      $scope.noOrdResonFlag = false;\n    };\n\n    $scope.closeResReasonFun = function () {\n      $scope.resResonFlag = false;\n      $('.no-ordres-reson').text('');\n    }; //查看订单状态的下拉框\n\n\n    $scope.syStuFlag = false; //更新订单\n\n    var issyFlag = localStorage.getItem('issy');\n    console.log(issyFlag);\n\n    if (issyFlag) {\n      $scope.syStuFlag = true;\n      localStorage.setItem('issy', 1);\n      $scope.syStu = 1; // app/order\n\n      dsp.postFun('order/oldOrder/getNewestOrder', {\n        type: 'start'\n      }, function (data) {\n        console.log(data);\n\n        if (data.data.result != 'error') {\n          $scope.resOrdStu = data.data.result - 0;\n        }\n\n        console.log($scope.resOrdStu);\n\n        if ($scope.resOrdStu != 5) {\n          var stuTimer = setInterval(function () {\n            getOrdSyFun(); // console.log('567')\n\n            if ($scope.resOrdStu == 5) {\n              localStorage.removeItem('issy');\n              $scope.syStu = 2;\n              $('.reordstu-dlist').animate({\n                height: '360px'\n              }, 300);\n              clearInterval(stuTimer);\n            }\n          }, 5000);\n          console.log(stuTimer);\n        } else {\n          $scope.syStu = 0;\n          localStorage.removeItem('issy');\n        }\n      }, function (data) {\n        console.log(data);\n      });\n    }\n\n    $scope.changesyFun = function () {\n      if ($scope.syStuFlag) {\n        $scope.syStuFlag = false;\n      } else {\n        $scope.syStuFlag = true;\n      }\n    };\n\n    $scope.syStu = 0;\n    $scope.resOrdStu = 0;\n\n    $scope.startSyFun = function () {\n      localStorage.setItem('issy', 1);\n      $scope.syStu = 1;\n      console.log($scope.isSelTimeFlag);\n      var syUpdata = {};\n      syUpdata.type = 'start';\n\n      if (!$scope.isSelTimeFlag) {\n        if (!$('#seaord-stime').val() || !$('#seaord-etime').val()) {\n          layer.msg('Please select time');\n          localStorage.removeItem('issy');\n          return;\n        }\n\n        syUpdata.startDate = $('#seaord-stime').val();\n        syUpdata.endDate = $('#seaord-etime').val();\n      }\n\n      dsp.postFun('order/oldOrder/getNewestOrder', JSON.stringify(syUpdata), function (data) {\n        console.log(data);\n\n        if (data.data.result == 'error') {\n          $scope.timeIsNValid = true;\n          layer.msg('Please enter the time as required');\n          return;\n        } else {\n          $scope.timeIsNValid = false;\n          $scope.resOrdStu = data.data.result - 0;\n        }\n\n        $scope.syStuFlag = true; //显示订单状态的面板\n\n        $scope.resResonFlag = false;\n        console.log($scope.resOrdStu);\n\n        if ($scope.resOrdStu != 5) {\n          var stuTimer = setInterval(function () {\n            getOrdSyFun();\n            console.log('567');\n\n            if ($scope.resOrdStu == 5) {\n              localStorage.removeItem('issy');\n              $scope.syStu = 2;\n              $('.reordstu-dlist').animate({\n                height: '360px'\n              }, 300);\n              clearInterval(stuTimer);\n            }\n          }, 5000);\n          console.log(stuTimer);\n        } else {\n          $scope.syStu = 0;\n          localStorage.removeItem('issy');\n        }\n      }, function (data) {\n        console.log(data);\n      });\n    };\n\n    function getOrdSyFun() {\n      var syUpdata = {};\n      syUpdata.type = 'continue';\n      dsp.postFun('order/oldOrder/getNewestOrder', JSON.stringify(syUpdata), function (data) {\n        if (data.data.result != 'error') {\n          $scope.resOrdStu = data.data.result - 0;\n        }\n      }, function (data) {\n        console.log(data);\n      });\n    } //精确按时间查找订单\n\n\n    $scope.detailSeaOrdFun = function () {\n      console.log($('#seaord-stime').val());\n      console.log($('#seaord-etime').val());\n      console.log($('#seaord-stime').val().length);\n      console.log($('#seaord-etime').val().length);\n      console.log(!$('#seaord-etime').val());\n      $scope.startSyFun();\n    }; //手动创建代发单\n\n\n    $scope.searchFor = \"sku\";\n    $scope.addProList = [];\n    $scope.addNameList = [];\n    $scope.searchForName = false;\n    $scope.cjdfdInfoFlag = false;\n    $scope.cjdfdResult = false;\n    $scope.totalPrice = 0;\n    $scope.totalCount = 0;\n    $scope.address = {\n      countryCode: \"\",\n      logistics: [],\n      shipCost: 0,\n      transferAreaId: \"\"\n    };\n    $scope.formVerify = {\n      shippingAddress: true,\n      countryCode: true,\n      province: true,\n      city: true,\n      customerName: true,\n      phone: true,\n      zip: true,\n      logisticsType: true,\n      orderNumber: true,\n      transferAreaId: true\n    };\n    console.log($scope);\n\n    $scope.addProductList = function () {\n      var key = $scope.searchFor;\n\n      if (!$scope.searchWord) {\n        layer.msg(\"Please enter keywords\");\n        return;\n      }\n\n      if ($scope.searchFor == \"sku\") {\n        layer.load(2);\n        dsp.postFun('order/manualAddCjorderController/getProductSku', _defineProperty({}, key, $scope.searchWord), function (data) {\n          console.log(data);\n          layer.closeAll(\"loading\");\n\n          if (data.data.statusCode == 200) {\n            var _data$data$result = data.data.result,\n                SKU = _data$data$result.SKU,\n                variants = _data$data$result.variants;\n            var specs = [];\n            variants.forEach(function (item) {\n              specs.push(item.VARIANTKEY);\n            });\n            data.data.result.specs = specs;\n            data.data.result.itemCount = 1;\n            var osellPrice = data.data.result.nowPrice ? data.data.result.nowPrice : data.data.result.SELLPRICE;\n            data.data.result.subs = parseFloat(osellPrice * data.data.result.itemCount).toFixed(2);\n            var isAdd = true;\n            $scope.addProList.forEach(function (item) {\n              if (item.SKU == SKU) {\n                item.itemCount += 1;\n                var oprice = item.nowPrice ? item.nowPrice : item.SELLPRICE;\n                item.subs = parseFloat(oprice * item.itemCount).toFixed(2);\n                isAdd = false;\n              }\n            });\n\n            if (isAdd) {\n              $scope.addProList.push(data.data.result);\n            }\n\n            checkPrice();\n          } else {\n            layer.msg(\"The SKU does not exist, please enter a new one.\");\n            $scope.searchWord = \"\";\n          }\n        });\n      } else {\n        searchForNameList(1, '5');\n      }\n    };\n\n    function searchForNameList(pageNum, pageSize) {\n      var _dsp$postFun2;\n\n      $scope.allProductFlag = false; //默认全选\n\n      var key = $scope.searchFor;\n      $scope.nameListPageSize = pageSize;\n      $scope.nameListPageNum = pageNum;\n      layer.load(2);\n      dsp.postFun('order/manualAddCjorderController/getProductsName', (_dsp$postFun2 = {}, _defineProperty(_dsp$postFun2, key, $scope.searchWord), _defineProperty(_dsp$postFun2, \"pageNum\", pageNum), _defineProperty(_dsp$postFun2, \"pageSize\", pageSize), _dsp$postFun2), function (data) {\n        layer.closeAll(\"loading\");\n\n        if (data.data.statusCode == 200) {\n          var res = data.data.result;\n          $scope.nameListPageCount = res.count;\n          $scope.$broadcast('page-data', {\n            pageNum: pageNum,\n            totalNum: Math.ceil(res.count / $scope.nameListPageSize),\n            totalCounts: res.count,\n            pageSize: pageSize,\n            pagesizeList: ['5', '10', '20', '30']\n          });\n          var arr = res.list;\n          $scope.searchForName = true;\n          arr.forEach(function (item) {\n            item.itemCount = 1;\n            item.subs = parseFloat(item.SELLPRICE * 1).toFixed(2);\n            var specs = [];\n            item.variants.forEach(function (it) {\n              specs.push(it.VARIANTKEY);\n            });\n            item.specs = specs; //item.VARIANTKEY = item.ASVARIANTKEY\n          });\n          $scope.addNameList = arr;\n        } else {\n          layer.msg(\"Sorry, the data is not found.\");\n          $scope.searchWord = \"\";\n        }\n      });\n    }\n\n    $scope.$on('pagedata-fa', function (d, data) {\n      //分页切换数据监听\n      console.log(data);\n      var pageNum = data.pageNum,\n          pageSize = data.pageSize;\n      var isTip = false;\n      $scope.addNameList.forEach(function (item) {\n        if (item.check) {\n          isTip = true;\n        }\n      });\n\n      if (isTip) {\n        layer.msg(\"Please add the selected products to the order list.\");\n      }\n\n      searchForNameList(pageNum, pageSize);\n    });\n\n    function checkPrice() {\n      $scope.totalPrice = 0;\n      $scope.totalCount = 0;\n      $scope.addProList.forEach(function (item) {\n        $scope.totalPrice += Number(item.subs);\n        $scope.totalCount += Number(item.itemCount);\n      });\n    }\n\n    $scope.changeSpec = function (key, idx) {\n      console.log(key);\n      console.log(idx);\n      console.log($scope.addProList);\n      $scope.addProList[idx].variants.forEach(function (item) {\n        if (item.VARIANTKEY == key) {\n          var osub = item.nowPrice ? item.nowPrice : item.SELLPRICE;\n          $scope.addProList[idx] = {\n            ID: item.ID,\n            IMG: item.IMG,\n            NAMEEN: item.NAMEEN,\n            PID: item.PID,\n            SELLPRICE: item.SELLPRICE,\n            nowPrice: item.nowPrice,\n            SKU: item.SKU,\n            itemCount: $scope.addProList[idx].itemCount,\n            VARIANTKEY: key,\n            specs: $scope.addProList[idx].specs,\n            variants: $scope.addProList[idx].variants,\n            subs: parseFloat(osub * $scope.addProList[idx].itemCount).toFixed(2)\n          };\n        }\n      });\n      $scope.addProList = uniq($scope.addProList, \"SKU\");\n      checkPrice();\n    };\n\n    $scope.deleProList = function (pro) {\n      console.log(pro);\n      $scope.addProList.forEach(function (item, idx) {\n        if (item.SKU == pro.SKU) {\n          $scope.addProList.splice(idx, 1);\n        }\n      });\n      checkPrice();\n    };\n\n    $scope.closeAddPro = closeAllCreateOrder;\n\n    function closeAllCreateOrder() {\n      $scope.searchFor = \"sku\";\n      $scope.searchWord = \"\";\n      $scope.addProList = [];\n      $scope.searchForName = false;\n      $scope.creatAddProductFlag = false;\n      $scope.totalPrice = 0;\n      $scope.totalCount = 0;\n    }\n\n    $scope.minusOne = function (count, idx) {\n      if (count == 1) return;\n      $scope.addProList[idx].itemCount -= 1;\n      var _$scope$addProList$id = $scope.addProList[idx],\n          itemCount = _$scope$addProList$id.itemCount,\n          SELLPRICE = _$scope$addProList$id.SELLPRICE,\n          nowPrice = _$scope$addProList$id.nowPrice;\n      var oprice = nowPrice ? nowPrice : SELLPRICE;\n      $scope.addProList[idx].subs = parseFloat(oprice * itemCount).toFixed(2);\n      checkPrice();\n    };\n\n    $scope.plusOne = function (count, idx) {\n      $scope.addProList[idx].itemCount += 1;\n      var _$scope$addProList$id2 = $scope.addProList[idx],\n          itemCount = _$scope$addProList$id2.itemCount,\n          SELLPRICE = _$scope$addProList$id2.SELLPRICE,\n          nowPrice = _$scope$addProList$id2.nowPrice;\n      var oprice = nowPrice ? nowPrice : SELLPRICE;\n      $scope.addProList[idx].subs = parseFloat(oprice * itemCount).toFixed(2);\n      checkPrice();\n    };\n\n    $scope.changeCount = function (count, idx) {\n      console.log(count);\n      var reg = /^[1-9]\\d*(\\.\\d+)?$/i;\n\n      if (reg.test(count)) {\n        $scope.addProList[idx].itemCount = parseInt(count);\n      } else {\n        $scope.addProList[idx].itemCount = 1;\n      }\n\n      var _$scope$addProList$id3 = $scope.addProList[idx],\n          itemCount = _$scope$addProList$id3.itemCount,\n          SELLPRICE = _$scope$addProList$id3.SELLPRICE,\n          nowPrice = _$scope$addProList$id3.nowPrice;\n      var oprice = nowPrice ? nowPrice : SELLPRICE;\n      $scope.addProList[idx].subs = parseFloat(oprice * itemCount).toFixed(2);\n      checkPrice();\n    };\n\n    function uniq(array, gWord) {\n      var res = [];\n      array.map(function (item) {\n        var flag = true;\n        res.map(function (it) {\n          if (item[gWord] === it[gWord]) {\n            flag = false;\n            it.itemCount += item.itemCount;\n            it.subs = parseFloat(it.SELLPRICE * it.itemCount).toFixed(2);\n          }\n\n          return false;\n        });\n\n        if (flag) {\n          res.push(item);\n        }\n\n        return false;\n      });\n      return res;\n    }\n\n    $scope.selectAllPro = function (e) {\n      $scope.allProductFlag = e.target.checked;\n\n      if ($scope.allProductFlag) {\n        $scope.addNameList.forEach(function (item) {\n          item.check = true;\n        });\n      } else {\n        $scope.addNameList.forEach(function (item) {\n          item.check = false;\n        });\n      }\n    };\n\n    $scope.itemSleletPro = function (e, pro) {\n      pro.check = e.target.checked;\n\n      if (e.target.checked) {\n        var num = 0;\n        $scope.addNameList.forEach(function (item) {\n          if (item.check) {\n            num++;\n          }\n        });\n\n        if (num == $scope.addNameList.length) {\n          $scope.allProductFlag = true;\n        }\n      } else {\n        console.log(99);\n        $scope.allProductFlag = false;\n      }\n    };\n\n    $scope.addNameSearchList = function () {\n      var arr = [];\n      console.log($scope.addNameList);\n      $scope.addNameList.forEach(function (item) {\n        if (item.check) {\n          var objString = JSON.stringify(item);\n          var obj2 = JSON.parse(objString);\n          arr.push(obj2);\n        }\n\n        item.check = false;\n      });\n\n      if (arr.length == 0) {\n        layer.msg(\"Please select products.\");\n      } else {\n        arr.forEach(function (item) {\n          var isAdd = true;\n          $scope.addProList.forEach(function (it) {\n            if (it.SKU == item.SKU) {\n              it.itemCount += 1;\n              it.subs = parseFloat(it.SELLPRICE * it.itemCount).toFixed(2);\n              isAdd = false;\n            }\n          });\n\n          if (isAdd) {\n            $scope.addProList.push(item);\n          }\n        });\n        $scope.allProductFlag = false;\n        layer.msg(\"Added successfully！\");\n      }\n\n      checkPrice();\n    };\n\n    $scope.closeNameSearch = closeNameSearch;\n\n    function closeNameSearch() {\n      $scope.searchForName = false;\n      $scope.allProductFlag = false;\n    }\n\n    $scope.checkoutOrderList = function () {\n      if ($scope.addProList.length == 0) {\n        layer.msg(\"Please add the product information.\");\n      } else {\n        $scope.cjdfdInfoFlag = true;\n        $scope.productOrPackage = null;\n        getShipFrom();\n        getShipingMethod();\n      }\n    };\n\n    function getShipFrom() {\n      dsp.postFun(\"warehouseBuildWeb/management/getAreaInfoById\", {\n        pageNum: 1,\n        pageSize: 10\n      }, function (res) {\n        layer.closeAll(\"loading\"); //console.log(res)\n\n        var _res$data = res.data,\n            code = _res$data.code,\n            data = _res$data.data;\n\n        if (code == 200) {\n          $scope.warehouseList = data;\n        }\n      });\n    }\n\n    $scope.getShipingMethod = getShipingMethod;\n\n    function getShipingMethod() {\n      var list = [];\n      console.log($scope.address);\n      $scope.addProList.forEach(function (item) {\n        var li = {\n          id: item.ID,\n          sku: item.SKU,\n          quantity: item.itemCount\n        };\n        list.push(li);\n      });\n      layer.load(2);\n      dsp.postFun(\"order/manualAddCjorderController/insertOrder\", {\n        countryCode: $scope.address.countryCode || \"\",\n        countLogistics: true,\n        variantsList: list,\n        merchantnNumber: $scope.userId,\n        zip: $scope.address.zip,\n        transferAreaId: $scope.address.transferAreaId || \"\",\n        phone: $scope.address.phone || \"\"\n      }, function (data) {\n        layer.closeAll(\"loading\");\n        var _data$data = data.data,\n            statusCode = _data$data.statusCode,\n            result = _data$data.result;\n\n        if (statusCode == 200) {\n          $scope.address.logistics = result.logistics;\n          $scope.address.logisticsType = result.logistics[0] ? result.logistics[0].logisticName : \"\";\n          $scope.address.shipCost = result.logistics[0] ? result.logistics[0].price : 0;\n          $scope.packPrice = result.logistics[0] ? result.logistics[0].packPrice : 0;\n          $scope.productOrPackage = $scope.productOrPackage ? $scope.productOrPackage : result.productList || [];\n          checkTotalAmount();\n        }\n      });\n    }\n\n    $scope.changeShipMethod = function (name) {\n      $scope.address.logistics.forEach(function (item) {\n        if (item.logisticName == name) {\n          $scope.address.logisticsType = item.logisticName || \"\";\n          $scope.address.shipCost = item.price || 0;\n          $scope.packPrice = item.packPrice || 0;\n          checkTotalAmount();\n        }\n      });\n    };\n\n    function checkTotalAmount() {\n      if ($scope.address.shipCost) {\n        $scope.totalAmount = parseFloat($scope.address.shipCost + $scope.totalPrice).toFixed(2);\n      } else {\n        $scope.totalAmount = $scope.totalPrice;\n      }\n    }\n\n    $scope.checkoutPhone = function () {\n      if ($scope.address.phone) {\n        var phone = $scope.address.phone.replace(/[^\\d\\+\\-\\(\\)]/g, \"\");\n        $scope.address.phone = phone;\n        getShipingMethod();\n      }\n    };\n\n    $scope.closeCjdfdInfoFlag = function () {\n      $scope.cjdfdInfoFlag = false;\n      $scope.address = {\n        countryCode: \"\",\n        logistics: [],\n        shipCost: 0,\n        transferAreaId: \"\"\n      };\n      $scope.formVerify = {\n        shippingAddress: true,\n        countryCode: true,\n        province: true,\n        city: true,\n        customerName: true,\n        phone: true,\n        zip: true,\n        logisticsType: true,\n        orderNumber: true,\n        transferAreaId: true\n      };\n    };\n\n    $scope.closeCjdfdResult = function () {\n      $scope.cjdfdResult = false;\n      freshList(); //刷新列表\n\n      closeAllCreateOrder();\n      $scope.address = {\n        countryCode: \"\",\n        logistics: [],\n        shipCost: 0,\n        transferAreaId: \"\"\n      };\n    };\n\n    $scope.createOrder = function () {\n      var verifyResult = $scope.formVerifyFun(); //console.log(\"verifyResult\",verifyResult)\n\n      if (!verifyResult) {\n        layer.msg(\"Please complete the address information.\");\n        return;\n      }\n\n      console.log($scope.address);\n      var variantsList = [];\n      $scope.addProList.forEach(function (item) {\n        var li = {\n          id: item.ID,\n          sku: item.SKU,\n          quantity: item.itemCount\n        };\n        variantsList.push(li);\n      });\n\n      var params = _objectSpread(_objectSpread({}, $scope.address), {}, {\n        countLogistics: false,\n        variantsList: variantsList,\n        merchantnNumber: $scope.userId\n      });\n\n      console.log(params);\n      layer.load(2);\n      dsp.postFun(\"order/manualAddCjorderController/insertOrder\", params, function (data) {\n        console.log(data);\n        layer.closeAll(\"loading\");\n\n        if (data.data.statusCode == 200) {\n          $scope.cjdfdInfoFlag = false;\n          $scope.creatAddProductFlag = false; //关闭前面2个弹窗\n\n          $scope.cjdfdResult = true; //打开结果弹窗\n        }\n      });\n    }; // 表单验证\n\n\n    $scope.formVerifyFun = function () {\n      var verifyValue = true;\n\n      for (var key in $scope.formVerify) {\n        if ($scope.address) {\n          $scope.formVerify[key] = $scope.address[key] === null || $scope.address[key] === undefined || $scope.address[key] === '' ? false : true;\n        } else {\n          $scope.formVerify[key] = false;\n        } // console.log(key,'-',$scope.formVerify[key]);\n\n\n        if ($scope.formVerify[key] === false) {\n          verifyValue = false;\n        }\n      }\n\n      return verifyValue;\n    }; //批量更换发货地区\n\n\n    $scope.bulkWareFlag = false;\n    $scope.notifi = false;\n    $scope.check_All = false;\n    $scope.zchecked_all = false;\n    $scope.$watch('ordersList', function () {\n      if ($scope.ordersList && $scope.ordersList.length == 0) {\n        $scope.zchecked_all = false;\n      }\n    });\n    $scope.bulkWareList = [];\n    dsp.postFun(\"warehouseBuildWeb/management/getCountryByAreaId\", {}, function (data) {\n      console.log(data);\n\n      if (data.data.code == 200) {\n        $scope.areaList = data.data.data;\n      }\n\n      console.log($scope.areaList); // $scope.areaList.forEach(it =>{\n      //     console.log(it.areaEn)\n      // })\n    });\n\n    $scope.blukChangeWare = function () {\n      var bulkWareList = [];\n      $scope.ordersList.forEach(function (item) {\n        if (item.check) {\n          //item.order.areaId = item.order.areaId || \"1\" //默认1为中国\n          bulkWareList.push(item);\n        }\n      });\n      console.log(bulkWareList);\n\n      if (bulkWareList.length == 0) {\n        layer.msg(\"Please select order(s) first\");\n      } else {\n        $scope.bulkWareFlag = true;\n        $scope.bulkWareList = bulkWareList;\n      }\n    };\n\n    $scope.addressOrderList = [];\n\n    $scope.findOrderList = function (value) {\n      $scope.addressOrderList.indexOf(value);\n    };\n\n    $scope.checkOneOrder = function (list) {\n      console.log($scope.zchecked_all);\n\n      if (list.check) {\n        list.check = false;\n        $scope.addressOrderList = $scope.addressOrderList.filter(function (item) {\n          return item !== list.order.ID;\n        });\n        $scope.zchecked_all = false;\n      } else {\n        list.check = true;\n        $scope.addressOrderList.push(list.order.ID);\n        var num = 0;\n        $scope.ordersList.forEach(function (ele) {\n          if (ele.check) {\n            num++;\n          }\n        });\n\n        if (num == $scope.ordersList.length) {\n          console.log(num);\n          $scope.zchecked_all = true;\n          $('.zchecked-all').attr('src', 'static/image/direct-orders/multiple2.png');\n        }\n      }\n\n      console.log(list);\n      console.log($scope.addressOrderList);\n    };\n\n    $scope.checkAllOrder = function () {\n      $scope.zchecked_all = !$scope.zchecked_all;\n      console.log($scope.zchecked_all);\n      $scope.ordersList.forEach(function (item) {\n        if ($scope.zchecked_all) {\n          item.check = true;\n\n          if ($scope.addressOrderList.indexOf(item.order.ID) >= 0) {\n            $scope.addressOrderList.splice($scope.findOrderList(item.order.ID), 1);\n          }\n\n          $scope.addressOrderList.push(item.order.ID);\n          console.log($scope.addressOrderList);\n        } else {\n          item.check = false;\n          $scope.addressOrderList.splice($scope.findOrderList(item.order.ID), 1);\n          console.log($scope.addressOrderList);\n        }\n      });\n      console.log($scope.ordersList);\n    }; // 全选\n\n\n    $scope.checkAll = function () {\n      if ($scope.check_All) {\n        $scope.bulkWareList.forEach(function (ele) {\n          ele.checkin = true;\n        });\n      } else {\n        $scope.bulkWareList.forEach(function (ele) {\n          ele.checkin = false;\n        });\n      }\n    }; // 单选\n\n\n    $scope.checkOne = function (item) {\n      console.log(item);\n\n      if (item.checkin) {\n        var num = 0;\n        $scope.bulkWareList.forEach(function (ele) {\n          if (ele.checkin) {\n            num++;\n          }\n        });\n\n        if (num == $scope.bulkWareList.length) {\n          $scope.check_All = true;\n        }\n      } else {\n        $scope.check_All = false;\n      }\n    };\n\n    $scope.closebulkWareFlag = closebulkWareFlag;\n\n    function closebulkWareFlag() {\n      $scope.bulkWareFlag = false;\n      $scope.check_All = false;\n      $scope.bulkWareList = [];\n      $scope.notifi = false;\n    }\n\n    $scope.bulkChangeArea = function () {\n      var changeList = [];\n      $scope.bulkWareList.forEach(function (item) {\n        if (item.checkin) {\n          changeList.push(item);\n        }\n      });\n      console.log($scope.bulkWareList);\n\n      if (changeList.length == 0) {\n        layer.msg(\"Please select order(s) you need to change\");\n        return;\n      }\n\n      if ($scope.shipFrom && $scope.shipTo) {\n        changeList.forEach(function (item) {\n          if (item.order.areaId == $scope.shipFrom) {\n            item.order.areaId = $scope.shipTo;\n          }\n        });\n      } else {\n        layer.msg(\"Please select the area you want to change\");\n      }\n    };\n    /* 批量转仓请求 */\n\n\n    function transferAreaFun(arr) {\n      return new Promise(function (resolve) {\n        layer.load(2);\n        dsp.postFun(\"order/order/orderTransferArea\", {\n          transferOrderDetailPMS: arr,\n          routeDiscounteTransfer: discounteTransferFlag\n        }, function (data) {\n          if (data.data.statusCode == 200) {\n            resolve(true);\n          } else {\n            resolve(false);\n          }\n        });\n      });\n    }\n\n    function transArea(arr) {\n      //批量转仓功能\n      transferAreaFun(arr).then(function (data) {\n        discounteTransferFlag = false;\n        layer.closeAll(\"loading\");\n\n        if (data) {\n          closebulkWareFlag();\n          $scope.zchecked_all = false;\n          freshList(); //刷新列表\n\n          layer.msg(\"Successfully changed shipping area！\");\n        } else {\n          layer.msg(data.data.message);\n        }\n      });\n      /* layer.load(2)\r\n      dsp.postFun(\"order/order/orderTransferArea\", {\r\n          transferOrderDetailPMS: arr,\r\n          routeDiscounteTransfer: discounteTransferFlag\r\n      }, function (data) {\r\n          discounteTransferFlag = false;\r\n          layer.closeAll(\"loading\")\r\n          if (data.data.statusCode == 200) {\r\n              closebulkWareFlag()\r\n              $scope.zchecked_all = false\r\n              freshList() //刷新列表\r\n              layer.msg(\"Successfully changed shipping area！\")\r\n          } else {\r\n              layer.msg(data.data.message)\r\n          }\r\n      }) */\n    }\n\n    $scope.changeWareConfirm = function () {\n      $scope.addressOrderList = [];\n      var arr = [];\n      console.log($scope.bulkWareList);\n      $scope.bulkWareList.forEach(function (item) {\n        var li = {\n          orderId: item.order.ID,\n          transferAreaId: item.order.areaId\n        };\n        arr.push(li);\n      });\n\n      if (arr.length > 0) {\n        transArea(arr);\n      }\n    };\n\n    function clearBulk() {\n      $scope.check_All = false;\n      $scope.shipFrom = \"\";\n      $scope.shipTo = \"\";\n    }\n\n    $scope.modifyAreas = function () {\n      $scope.notifi = false;\n      var list = [];\n      $scope.ordersList.forEach(function (item) {\n        $scope.noInventoryArr.forEach(function (it) {\n          if (item.order.ID == it) {\n            list.push(item);\n          }\n        });\n      });\n      $scope.bulkWareFlag = true;\n      $scope.bulkWareList = list;\n      clearBulk();\n    };\n\n    $scope.changeOneArea = function (order) {\n      var arr = [{\n        orderId: order.ID,\n        transferAreaId: order.areaId\n      }];\n      transArea(arr);\n    };\n  }]);\n  return app;\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///../src/pages/mycj/imported-orders/import-process-required.js\n");

/***/ })

}]);