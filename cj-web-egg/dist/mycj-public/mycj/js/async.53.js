(window["webpackJsonp"] = window["webpackJsonp"] || []).push([[53],{

/***/ "../src/pages/mycj/service-product/shipment.js":
/*!*****************************************************!*\
  !*** ../src/pages/mycj/service-product/shipment.js ***!
  \*****************************************************/
/*! exports provided: serviceProductShipmentFactory */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"serviceProductShipmentFactory\", function() { return serviceProductShipmentFactory; });\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _iterableToArrayLimit(arr, i) { if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return; var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it; if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e2) { throw _e2; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = o[Symbol.iterator](); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e3) { didErr = true; err = _e3; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction serviceProductShipmentFactory(angular) {\n  var app = angular.module('service-product-shipment.module', []);\n  app.controller('service-product-shipment.ctrl', ['$scope', '$rootScope', 'dsp', '$timeout', function ($scope, $rootScope, dsp, $timeout) {\n    var fwStu = localStorage.getItem('fwStu'); //根据国家code 判断storeId\n\n    var countryCodeModal = {\n      CN: {\n        nameEn: 'cn',\n        name: 'China warehouse',\n        key: 1\n      },\n      US: {\n        nameEn: 'us',\n        name: 'US warehouse',\n        key: 2\n      },\n      TH: {\n        nameEn: 'th',\n        name: 'Thailand warehouse',\n        key: 3\n      }\n    };\n\n    if (fwStu == 'downBatch') {\n      $scope.downBatchFlag = true;\n    } else if (fwStu == 'input') {\n      $scope.inputMesFlag = true;\n    }\n\n    $scope.status = '1'; // 导航状态\n    // $scope.trackingShow = false;    // 添加/修改运单\n    // $scope.reasonsShow = false;     // 取消运单\n\n    $scope.singOrderShow = false; // 已签收订单\n\n    $scope.RefusalShow = false; // 拒签订单\n\n    $scope.notificationShow = false; // 拒签通知\n\n    $scope.RefusalId = ''; // 拒签id\n\n    $scope.serveOrderList = [];\n    $scope.serveMoneyList = [];\n    $scope.orderNumList = [];\n    $scope.productMoneyList = [];\n    $scope.tracking = {};\n    $scope.pageNum = '1';\n    $scope.pageSize = '10';\n    $scope.totalPageNum = 1;\n    $scope.orderObj = {}; // 拒签数据\n\n    $scope.warehouse = [];\n    var serviceItem = {}; // 费用集合\n\n    var vip = $rootScope.userInfo.vip;\n    $scope.vipStuFlag = vip;\n    dsp.setRightMinHeight(); // $scope.notificationShow = true;\n    // 运单列表数据\n\n    function getServeOrder() {\n      var data = {\n        dbProductName: $scope.orderName,\n        status: $scope.status,\n        pageNo: $scope.pageNum,\n        pageSize: $scope.pageSize\n      };\n      $scope.serveOrderList = [];\n      $rootScope.$on('cj/server/getDbServeOrderList', function (_, bool) {\n        $scope.loading = bool;\n        if (bool) $scope.notDataFound = false;\n      });\n      dsp.postFun('cj/server/getDbServeOrderList', data, function (res) {\n        $('.cj-load-wrap').css('min-height', 'auto');\n        console.log(res);\n\n        if (res.data.statusCode == 200) {\n          var result = res.data.result;\n\n          if (result.dPPointList.length > 0) {\n            $scope.serveOrderList = result.dPPointList;\n            console.log($scope.serveOrderList);\n            $scope.totalPageNum = result.total;\n\n            var _iterator = _createForOfIteratorHelper($scope.serveOrderList),\n                _step;\n\n            try {\n              for (_iterator.s(); !(_step = _iterator.n()).done;) {\n                var item = _step.value;\n                item.show = false;\n                item.createTime = new Date(parseInt(new Date(item.createTime).getTime())).toLocaleDateString().replace(/\\//g, '-');\n                item.deliveryTime = new Date(parseInt(new Date(item.deliveryTime).getTime())).toLocaleDateString().replace(/\\//g, '-');\n              } // pageFun();\n\n            } catch (err) {\n              _iterator.e(err);\n            } finally {\n              _iterator.f();\n            }\n\n            $scope.$broadcast('page-data', {\n              pageNum: $scope.pageNum,\n              totalNum: Math.ceil(result.total / $scope.pageSize),\n              totalCounts: result.total,\n              pageSize: $scope.pageSize,\n              pagesizeList: ['10']\n            });\n          } else {\n            $scope.notDataFound = true;\n            $('.cj-load-wrap').css('min-height', $('.cj-nodata-pic').height() + 110);\n          }\n        }\n      });\n    }\n\n    getServeOrder();\n    $scope.$on('pagedata-fa', function (d, data) {\n      //分页切换数据监听\n      var pageNum = data.pageNum;\n      $scope.pageNum = pageNum;\n      getServeOrder();\n    }); // 导航切换\n\n    $scope.navShow = function (txt) {\n      $scope.pageNum = '1';\n      $scope.pageSize = '10';\n      $scope.status = txt;\n      getServeOrder();\n    }; // 订单搜索\n\n\n    $scope.orderSearch = function () {\n      $scope.pageNum = '1';\n      getServeOrder();\n    };\n\n    $scope.enterSearch = function (event) {\n      if (event.keyCode == 13) {\n        $scope.orderSearch();\n      }\n    }; // 运单批次号下载\n\n\n    $scope.batchDownload = function (item) {\n      download('https://' + item.batchUrl);\n    };\n\n    $scope.downLoadBatchFun = function () {\n      //指导里下载第一条批次号\n      download('https://' + $scope.serveOrderList[0].batchUrl);\n      $scope.downBatchFlag = false;\n      console.log($scope.serveOrderList[0].trackingNumber);\n\n      if ($scope.serveOrderList[0].trackingNumber) {\n        //如果第一条已经生成追踪号 没必要指导填写运单信息\n        localStorage.removeItem('fwStu');\n      } else {\n        localStorage.setItem('fwStu', 'input');\n        $scope.inputMesFlag = true;\n        console.log(itemTop, itemLeft);\n        var itemTop = $(\"#input-yd0\").offset().top;\n        var itemLeft = $(\"#input-yd0\").offset().left;\n        console.log(itemTop, itemLeft);\n        $('.sec-zhidao').css({\n          top: itemTop - 11,\n          left: itemLeft - 8\n        });\n      }\n    };\n\n    $scope.delFun = function (item) {\n      //删除\n      $scope.itemId = item.id;\n      $scope.delOrdFlag = true;\n    };\n\n    $scope.sureDelFun = function () {\n      dsp.postFun('cj/server/deleteDbServeOrderById', {\n        'id': $scope.itemId\n      }, function (data) {\n        if (data.data.statusCode == 200) {\n          getServeOrder();\n          $scope.delOrdFlag = false;\n        }\n      }, function (data) {\n        console.log(data);\n      });\n    };\n\n    function getWarehouseData() {\n      layer.load(2);\n      dsp.getWareList({\n        productType: 1,\n        successCallback: function successCallback(data) {\n          layer.closeAll();\n          $scope.warehouse = data;\n          $timeout(function () {\n            $scope.storagedoId = $scope.warehouse[0];\n            $scope.storeId = $scope.warehouse[0] ? countryCodeModal[$scope.warehouse[0].countryCode] ? countryCodeModal[$scope.warehouse[0].countryCode].key : 1 : 1;\n          }, 300);\n        }\n      });\n    } // 添加订单和费用\n\n\n    $scope.addTracking = function (item) {\n      serviceItem = item;\n      $scope.itemId = item.id;\n      $scope.txspFlag = true;\n      resetTracking();\n      cost(item.dbProductId);\n      if ($scope.warehouse.length == 0) getWarehouseData();\n    };\n\n    $scope.txspFun = function () {\n      //指导里的打开弹框\n      $scope.txspFlag = true;\n      $scope.inputMesFlag = false;\n      localStorage.removeItem('fwStu');\n      resetTracking();\n      cost($scope.serveOrderList[0].dbProductId);\n      serviceItem['dbProductId'] = $scope.serveOrderList[0].dbProductId;\n    }; // 国家筛选\n\n\n    $scope.stateChange = function () {\n      console.log($scope.storagedoId);\n      $scope.storeId = countryCodeModal[$scope.storagedoId.countryCode] ? countryCodeModal[$scope.storagedoId.countryCode].key : 1;\n      cost(serviceItem.dbProductId, $scope.storeId);\n    }; // 批次号\n\n\n    $scope.quantityBlur = function () {\n      if ($scope.trackingNumber && $scope.num) {\n        var data = {\n          trackingNumber: $scope.trackingNumber,\n          num: $scope.num\n        };\n        $scope.quantityObj = {};\n        $scope.downloadColor = false;\n        $scope.downloadFlag = false;\n        dsp.postFun('pojo/procurement/getServeProCodeImg', data, function (res) {\n          if (res.status == '200') {\n            $scope.quantityObj = res.data;\n          }\n        });\n      }\n    }; // 单选框选中\n\n\n    $scope.radioClick = function (item, state) {\n      if (item.serverMoneyTypeId == 3 || item.serverMoneyTypeId == 2) {\n        item.status = state;\n      }\n    }; // 关闭填写信息\n\n\n    $scope.cancelTracking = function () {\n      confirmTrackingflag = true;\n      layer.confirm('Confirm to cancel?', {\n        title: false,\n        closeBtn: 0,\n        btnAlign: 'c',\n        skin: 'goods-class',\n        btn: ['Confirm', 'Cancel'] //按钮\n\n      }, function (index) {\n        //确定关闭填写框\n        layer.close(index);\n        $scope.txspFlag = false;\n        $scope.$apply();\n      }, function (index) {\n        //取消\n        layer.close(index);\n        $scope.$apply();\n      });\n    }; // 服务商品确定新增订单\n\n\n    var confirmTrackingflag = true;\n\n    $scope.confirmTracking = function () {\n      console.log($scope.itemId);\n\n      if (!$scope.itemId) {\n        $scope.itemId = $scope.serveOrderList[0].id;\n      }\n\n      console.log($scope.itemId);\n\n      if (!$scope.trackingName) {\n        layer.msg('Shipping Label Name is required');\n        return;\n      }\n\n      console.log($scope.storagedoId);\n\n      if (!$scope.storagedoId.id) {\n        layer.msg('Please select the warehouse for stocking service products.');\n        return;\n      }\n\n      if (!$scope.trackingNumber) {\n        layer.msg('Tracking number is required');\n        return;\n      }\n\n      if (!$scope.num) {\n        layer.msg('Quantity is required');\n        return;\n      }\n\n      if (!$(\"#cj-stime\").val()) {\n        layer.msg('Date is required');\n        return;\n      } // 防重\n\n\n      if (!confirmTrackingflag) return;\n      confirmTrackingflag = false;\n      var data = {\n        id: $scope.itemId,\n        orderName: $scope.trackingName,\n        dbSku: serviceItem.dbSku,\n        status: 1,\n        storeId: $scope.storeId,\n        storagedoId: $scope.storagedoId.id,\n        trackingNumber: $scope.trackingNumber,\n        num: $scope.num,\n        deliveryTime: $(\"#cj-stime\").val(),\n        isDownload: 1,\n        batchUrl: $scope.quantityObj.batchUrl,\n        batchNumber: $scope.quantityObj.batchNumber,\n        moneylist: []\n      };\n\n      var _iterator2 = _createForOfIteratorHelper(new Map($scope.serveMoneyList.map(function (item, i) {\n        return [i, item];\n      }))),\n          _step2;\n\n      try {\n        for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n          var _step2$value = _slicedToArray(_step2.value, 2),\n              i = _step2$value[0],\n              item = _step2$value[1];\n\n          data.moneylist[i] = {\n            serverMoneyId: item.serverMoneyId,\n            status: item.status\n          };\n        }\n      } catch (err) {\n        _iterator2.e(err);\n      } finally {\n        _iterator2.f();\n      }\n\n      dsp.postFun('cj/server/updateServeOrder', data, function (res) {\n        if (res.data.statusCode == '200') {\n          $scope.txspFlag = false;\n          confirmTrackingflag = true;\n          $scope.shippingFeeHintShow = true;\n          getShippingFeeHint(serviceItem.dbProductId, res.data.result);\n        }\n      }, {\n        layer: true\n      });\n    }; // 温馨提示费用\n\n\n    function getShippingFeeHint(dbProductId, resultId) {\n      $scope.shippingFeeHintMoneyList = {};\n      console.log(dbProductId);\n\n      if (!dbProductId) {\n        dbProductId = $scope.serveOrderList[0].dbProductId;\n      }\n\n      console.log(dbProductId);\n      var data = {\n        dbProductId: dbProductId,\n        storeId: $scope.storeId,\n        dbServeOrderId: $scope.itemId\n      };\n      dsp.postFun('cj/server/getDbServeOrderMoney', data, function (res) {\n        if (res.data.statusCode == '200') {\n          $scope.shippingFeeHintMoneyList = res.data.result;\n\n          var _iterator3 = _createForOfIteratorHelper($scope.shippingFeeHintMoneyList.moneyList),\n              _step3;\n\n          try {\n            for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n              var item = _step3.value;\n\n              if (item.id == 7) {\n                $scope.shippingFeeHintMoneyList.moneys = item.moneys;\n              }\n            }\n          } catch (err) {\n            _iterator3.e(err);\n          } finally {\n            _iterator3.f();\n          }\n        }\n\n        console.log($scope.shippingFeeHintMoneyList);\n      });\n    }\n\n    ; // 运单费用温馨提示\n\n    $scope.cancelShippingFeeHint = function () {\n      $scope.shippingFeeHintShow = false;\n      layer.msg('Added successfully');\n      getServeOrder();\n    }; // 费用数据\n\n\n    function cost(dbProductId) {\n      var storeType = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 2;\n      var data = {\n        dbProductId: dbProductId,\n        storeType: parseInt(storeType)\n      };\n      $scope.serveMoneyList = [];\n      dsp.postFun('cj/server/getDbServeMoneyList', data, function (res) {\n        if (res.data.statusCode == '200') {\n          var _res$data$result = res.data.result,\n              moneyList = _res$data$result.moneyList,\n              retentionList = _res$data$result.retentionList;\n          $scope.serveMoneyList = moneyList;\n\n          var _iterator4 = _createForOfIteratorHelper($scope.serveMoneyList),\n              _step4;\n\n          try {\n            for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {\n              var item = _step4.value;\n              item.status = '1';\n              item.flag = false;\n\n              if (item.serverMoneyTypeId == 3 || item.serverMoneyTypeId == 2) {\n                item.flag = true;\n              }\n            }\n          } catch (err) {\n            _iterator4.e(err);\n          } finally {\n            _iterator4.f();\n          }\n        }\n      });\n    }\n\n    ; // 重置\n\n    function resetTracking() {\n      $scope.storagedoId = $scope.warehouse[0]; // 默认美国\n\n      $scope.storeId = $scope.warehouse[0] ? countryCodeModal[$scope.warehouse[0].countryCode] ? countryCodeModal[$scope.warehouse[0].countryCode].key : 1 : 1;\n      $scope.trackingName = ''; // 运单名称\n\n      $scope.trackingNumber = ''; // 运单号\n\n      $scope.num = ''; // 数量\n\n      $scope.quantityObj = {}; // 批次号数据\n\n      $scope.downloadFlag = false; // 下载状态\n\n      $scope.downloadColor = false; // 下载颜色\n\n      $scope.serveMoneyList = []; // 单选项\n\n      $(\"#cj-stime\").val(''); // 时间\n    }\n\n    ; // 显示变体\n\n    $scope.variantList = [];\n\n    $scope.trShow = function (item, event, index) {\n      // event.stopPropagation();\n      // if($scope.status==1)return\n      // if (!item.show) {\n      //   item.show = true;\n      // } else {\n      //   item.show = false;\n      // }\n      dsp.load();\n      dsp.postFun('cj/server/getDbServeOrderStanMoney', {\n        dbServeOrderId: item.id\n      }, function (res) {\n        console.log(res);\n        dsp.closeLoad();\n\n        if (res.data.statusCode == '200') {\n          $scope.actionViewFlag = true;\n          $scope.actionVariantList = res.data.result;\n\n          var _iterator5 = _createForOfIteratorHelper($scope.actionVariantList),\n              _step5;\n\n          try {\n            for (_iterator5.s(); !(_step5 = _iterator5.n()).done;) {\n              var _item = _step5.value;\n              _item.create_time.time = new Date(parseInt(new Date(_item.create_time.time).getTime())).toLocaleDateString().replace(/\\//g, '-');\n            }\n          } catch (err) {\n            _iterator5.e(err);\n          } finally {\n            _iterator5.f();\n          }\n\n          console.log($scope.actionVariantList);\n        }\n      }, function (err) {\n        dsp.closeLoad();\n      });\n    }; // 查看拒签\n\n\n    $scope.lookRefusal = function (item, event) {\n      event.stopPropagation();\n      $scope.RefusalId = item.id;\n      $scope.RefusalShow = true;\n      dsp.postFun('cj/server/getDbServeOrderList', {\n        trackingNumber: item.trackingNumber\n      }, function (res) {\n        if (res.data.statusCode == 200) {\n          var data = res.data.result;\n          $scope.orderObj = data.dPPointList;\n        }\n      });\n    }; // 关闭拒签\n\n\n    $scope.closeRefusal = function () {\n      $scope.RefusalShow = false;\n    }; // 同意签收\n\n\n    var RefusalehouseFlag = true;\n\n    $scope.confrimRefusal = function (orderObj) {\n      var ids = [];\n\n      var _iterator6 = _createForOfIteratorHelper(orderObj),\n          _step6;\n\n      try {\n        for (_iterator6.s(); !(_step6 = _iterator6.n()).done;) {\n          var item = _step6.value;\n          ids.push(item.id);\n        }\n      } catch (err) {\n        _iterator6.e(err);\n      } finally {\n        _iterator6.f();\n      }\n\n      var data = {\n        ids: ids.join(','),\n        status: 2\n      }; // 防重\n\n      if (!RefusalehouseFlag) return;\n      RefusalehouseFlag = false;\n      dsp.postFun('cj/server/updateServeOrderByIds', data, function (res) {\n        if (res.data.statusCode == '200') {\n          $scope.RefusalShow = false;\n          RefusalehouseFlag = true;\n          getServeOrder();\n          layer.msg('Sign for successfully');\n        }\n      });\n    }; // 拒绝入库\n\n\n    $scope.cancelRefusal = function (orderObj) {\n      var ids = [];\n\n      var _iterator7 = _createForOfIteratorHelper(orderObj),\n          _step7;\n\n      try {\n        for (_iterator7.s(); !(_step7 = _iterator7.n()).done;) {\n          var item = _step7.value;\n          ids.push(item.id);\n        }\n      } catch (err) {\n        _iterator7.e(err);\n      } finally {\n        _iterator7.f();\n      }\n\n      var data = {\n        ids: ids.join(','),\n        status: 5\n      };\n      dsp.postFun('cj/server/updateServeOrderByIds', data, function (res) {\n        if (res.data.statusCode == '200') {\n          $scope.RefusalShow = false;\n          $scope.notificationShow = true;\n        }\n      });\n    }; // 拒绝入库通知\n\n\n    $scope.confirmNotificatio = function () {\n      $scope.notificationShow = false;\n      getServeOrder();\n    }; // 查看运单使用数量\n\n\n    var warehouse = [{\n      id: '201e67f6ba4644c0a36d63bf4989dd70',\n      city: 'New Jersey Warehouse, East America'\n    }, {\n      id: 'd3749885b80444baadf8a55277de1c09',\n      city: 'Chino Warehouse, West America'\n    }, {\n      id: '08898c4735bf43068d5d677c1d217ab0',\n      city: 'Shenzhen Warehouse, China'\n    }, {\n      id: 'bc228e33b02a4c03b46b186994eb6eb3',\n      city: 'Yiwu Warehouse, China'\n    }, {\n      id: 'f87a1c014e6c4bebbe13359467886e99',\n      city: 'Thailand'\n    }, {\n      id: '55cbb9d2-8dcc-469e-aea2-40890c26cf7c',\n      city: 'Germany'\n    }, {\n      id: 'e18668c0-0b6b-4d07-837e-fe2150d9d9c9',\n      city: 'Indonesia'\n    }];\n\n    $scope.lookOrderNum = function (item) {\n      event.stopPropagation();\n      $scope.singOrderShow = true;\n      $scope.orderNumList = [];\n      dsp.postFun('cj/server/getUseServeDetail', {\n        dbServeOrderId: item.id\n      }, function (res) {\n        if (res.data.statusCode == '200') {\n          $scope.orderNumList = res.data.result;\n\n          var _iterator8 = _createForOfIteratorHelper($scope.orderNumList),\n              _step8;\n\n          try {\n            for (_iterator8.s(); !(_step8 = _iterator8.n()).done;) {\n              var _item2 = _step8.value;\n              _item2.createTime = new Date(parseInt(new Date(_item2.createTime).getTime())).toLocaleDateString().replace(/\\//g, '-');\n\n              var _iterator9 = _createForOfIteratorHelper(warehouse),\n                  _step9;\n\n              try {\n                for (_iterator9.s(); !(_step9 = _iterator9.n()).done;) {\n                  var i = _step9.value;\n\n                  if (_item2.storagedoId == i.id) {\n                    _item2.storagedoId = i.city;\n                  }\n                }\n              } catch (err) {\n                _iterator9.e(err);\n              } finally {\n                _iterator9.f();\n              }\n            }\n          } catch (err) {\n            _iterator8.e(err);\n          } finally {\n            _iterator8.f();\n          }\n        }\n      });\n    }; // 关闭运单使用数量\n\n\n    $scope.cancelOrderNum = function () {\n      $scope.singOrderShow = false;\n    }; //分页\n\n\n    function pageFun() {\n      $(\".page-index\").jqPaginator({\n        totalCounts: $scope.totalPageNum,\n        pageSize: $scope.pageSize * 1,\n        visiblePages: 5,\n        currentPage: $scope.pageNum * 1,\n        activeClass: 'current',\n        prev: '<a class=\"prev\" href=\"javascript:void(0);\">&lt;<\\/a>',\n        next: '<a class=\"next\" href=\"javascript:void(0);\">&gt;<\\/a>',\n        page: '<a href=\"javascript:void(0);\">{{page}}<\\/a>',\n        first: '<a class=\"prev\" href=\"javascript:void(0);\">&lt&lt;<\\/a>',\n        last: '<a class=\"prev\" href=\"javascript:void(0);\">&gt&gt;<\\/a>',\n        onPageChange: function onPageChange(n, type) {\n          if (type == 'init') return;\n          $scope.pageNum = n.toString();\n          getServeOrder();\n        }\n      });\n    }\n\n    ; // go 分页\n\n    $scope.chanPageNum = function () {\n      if (!isNaN($scope.pageNum * 1) && $scope.pageNum * 1 > 0 && $scope.pageNum * 1 <= Math.ceil($scope.totalPageNum / 10)) {\n        getServeOrder();\n      } else {\n        $scope.pageNum = '1';\n      }\n    };\n  }]);\n  return app;\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///../src/pages/mycj/service-product/shipment.js\n");

/***/ })

}]);