(window["webpackJsonp"] = window["webpackJsonp"] || []).push([[60],{

/***/ "../src/pages/mycj/todo-list/todo-list.js":
/*!************************************************!*\
  !*** ../src/pages/mycj/todo-list/todo-list.js ***!
  \************************************************/
/*! exports provided: todoListFactory */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"todoListFactory\", function() { return todoListFactory; });\nfunction todoListFactory(angular) {\n  var app = angular.module('todo-list.module', ['service', 'home-service']);\n  app.controller('todo-list.ctrl', ['$scope', 'dsp', '$location', '$stateParams', function ($scope, dsp, $location, $stateParams) {\n    console.log('todo-list.ctrl');\n    dsp.setRightMinHeight();\n\n    if (!localStorage.getItem('token')) {\n      window.location.assign('login.html');\n    }\n\n    $scope.hasLogin = dsp.isInLoginState();\n    var base64 = new Base64();\n    var userId = base64.decode(localStorage.getItem('userId') == undefined ? \"\" : localStorage.getItem('userId'));\n    var vip = localStorage.getItem('vip') == undefined ? \"\" : localStorage.getItem('vip');\n    $scope.vip = vip;\n    $scope.admin = base64.decode(localStorage.getItem('name') ? localStorage.getItem('name') : localStorage.getItem('loginName'));\n    var width = $(\".block-title\").width();\n\n    if (vip == '1') {\n      //vipFlag\n      $('.header-nav').addClass('vipFlag');\n      $('.mycj-right-bar').addClass('vip');\n      $('.mycj-right-wrap').css('background', '#F0EDE7');\n    } else {\n      $('.header-nav').removeClass('vipFlag');\n      $('.mycj-right-bar').removeClass('vip');\n      $('.mycj-right-wrap').css('background', '#f2f3f5');\n    }\n\n    $('.header-nav li').eq(0).addClass('active');\n    var todoTypeObj = {\n      'zombie': {\n        val: '1',\n        txt: '僵尸订单'\n      },\n      'synErr': {\n        val: '2',\n        txt: '同步失败'\n      }\n    };\n    $scope.todoType = $stateParams.type; //待办事项种类    1。僵尸订单  2.同步失败\n\n    $scope.pageNum = '1'; //分页当前页码\n\n    $scope.pageSize = '20'; //分页每页展示条数\n\n    $scope.options1 = {\n      //僵尸订单 操作明细\n      // 1：全额退款，2：部分退款，3：部分已配齐的发货，未配齐的继续等待，4：继续等待\n      '1': {\n        val: '1',\n        ch: '退款',\n        en: 'Refund'\n      },\n      '2': {\n        val: '2',\n        ch: '继续等待',\n        en: 'Keep waiting'\n      },\n      '3': {\n        val: '3',\n        ch: '拆分订单发货',\n        en: 'Split order shipment'\n      }\n    };\n    $scope.isShowPaging = true; //是否展示分页\n\n    $scope.synErrAllChecked = false; //同步失败订单全选flag\n\n    /** 根据 todoType 加载不同数据 */\n\n    switchAjaxByTodoType();\n\n    function switchAjaxByTodoType() {\n      switch ($scope.todoType) {\n        case todoTypeObj.zombie.val:\n          queryOrderobserver();\n          break;\n\n        case todoTypeObj.synErr.val:\n          fulfillmentFaild();\n          break;\n\n        default:\n          break;\n      }\n    } // tab 选择\n\n\n    $scope.toduTabClick = function (todoType) {\n      $scope.todoType = todoType;\n      $scope.pageNum = '1';\n      $scope.pageSize = '20';\n      switchAjaxByTodoType();\n    };\n    /** goback */\n\n\n    $scope.goback = function () {\n      window.history.back();\n    };\n    /** 僵尸订单 开始 */\n    // queryOrderobserver();\n\n\n    function queryOrderobserver() {\n      //僵尸订单 列表\n      var sendData = {\n        userId: userId,\n        sousuo: '1',\n        sku: '1',\n        pageNum: ($scope.pageNum - 1) * ($scope.pageSize - 0),\n        pageSize: $scope.pageSize\n      };\n      dsp.loadPercent($('.todolistWrap'), $(window).height() - 171, 47, 0);\n      dsp.postFun('erp/observer/queryOrderobserver', JSON.stringify(sendData), function (data) {\n        console.log(data.data);\n        dsp.closeLoadPercent($('.todolistWrap'));\n\n        if (data.data.statusCode == '200') {\n          $scope.zombieList = data.data.result;\n          $.each($scope.zombieList, function (i, v) {\n            v.isSelect = false; // v.decisionMaking = '';\n\n            v.decisionMaking2 = '';\n            v.isShowRemark = false;\n            var arr = typeof v.decisionMaking === 'string' ? v.decisionMaking.split(',') : [];\n            var newArr = [];\n            $.each(arr, function (i, v) {\n              var obj = $scope.options1[v];\n              newArr.push(obj);\n            });\n            v.decisionMaking = newArr;\n          });\n          console.log($scope.zombieList);\n          $scope.zombieList.length === 0 ? $scope.isShowPaging = false : $scope.isShowPaging = true;\n          queryBycount();\n        }\n      }, function () {\n        dsp.closeLoadPercent($('.todolistWrap'));\n      }, {\n        layer: true\n      });\n    }\n\n    function queryBycount() {\n      //僵尸订单 总条数\n      var sendData = {\n        userId: userId\n      };\n      dsp.postFun('erp/observer/queryBycount', JSON.stringify(sendData), function (data) {\n        console.log(data.data);\n        $scope.totalCounts = data.data.result[0].num * 1;\n        importFun();\n      }, function () {});\n    }\n\n    $scope.openSelect = function (item) {\n      //僵尸订单  分单代开关闭\n      if (item.isSelect) {\n        item.isSelect = false;\n      } else {\n        item.isSelect = true;\n      }\n    };\n\n    $scope.checkSelect = function (val, item) {\n      item.decisionMaking2 = val;\n    }; //保存\n\n\n    $scope.confirmFun = function () {\n      console.log($scope.zombieList);\n      var arr = [];\n      $.each($scope.zombieList, function (i, v) {\n        if (!(v.decisionMaking2 == '')) {\n          var data = {\n            orderId: v.orderId,\n            orderProductId: v.orderProductId,\n            decisionMaking: v.decisionMaking2,\n            sku: v.sku,\n            quehuo: v.quehuo\n          };\n          arr.push(data);\n        }\n      });\n\n      if (arr.length == 0) {\n        layer.msg('Please operate a piece of data first');\n        return;\n      }\n\n      console.log(arr);\n      var sendData = {\n        account: '0',\n        userId: userId,\n        data: JSON.stringify(arr)\n      }; // layer.load(2)\n\n      dsp.load();\n      dsp.postFun('erp/observer/updateAccountOrderob', JSON.stringify(sendData), function (data) {\n        dsp.closeLoad();\n        layer.msg(data.data.message);\n        queryOrderobserver();\n      }, function () {\n        dsp.closeLoad();\n      }, {\n        layer: true\n      });\n    };\n\n    $scope.openRemark = function (item, boolen) {\n      item.isShowRemark = boolen;\n    };\n\n    $scope.navToDetail = function (id, isRead) {\n      //查看订单详情\n      if (id) {\n        var navUrl = \"/order-detail/\".concat(id, \"/1\");\n\n        if (!isRead) {\n          layer.load(2);\n          dsp.mypost('cj/fbaOrder/readfulfillmentFail', {\n            ids: id + ''\n          }).then(function (res) {\n            console.log('navToDetail res => ', res);\n          });\n        }\n\n        $location.path(navUrl);\n      } else layer.msg('id is not found');\n    };\n\n    $scope.msgboxShow = false;\n\n    $scope.clearAllconfirm = function () {\n      // console.log('clearAllconfirm')\n      $scope.ignoreIds = $scope.synErrList && $scope.synErrList.map(function (_ref) {\n        var ID = _ref.ID;\n        return ID;\n      }).join(',');\n      $scope.msgboxShow = true;\n    };\n\n    $scope.clearAll = function () {\n      $scope.msgboxShow = false;\n      var ids = $scope.ignoreIds;\n\n      if (ids) {\n        layer.load(2);\n        dsp.mypost('cj/fbaOrder/removefulfillmentFail', {\n          ids: ids\n        }).then(function (res) {\n          console.log('clearAll res => ', res); // layer.msg('success')\n\n          switchAjaxByTodoType(); //重新获取数据\n        }).catch(function () {\n          layer.msg('Ignore Failed');\n        });\n      }\n    };\n    /** 僵尸订单结束 */\n\n    /** 同步失败订单 开始*/\n\n\n    function fulfillmentFaild() {\n      //获取同步失败订单\n      var sendData = {\n        offset: $scope.pageNum,\n        count: $scope.pageSize\n      };\n      dsp.loadPercent($('.todolistWrap'), $(window).height() - 171, 47, 0);\n      dsp.postFun('cj/fbaOrder/fulfillmentFaild', JSON.stringify(sendData), function (res) {\n        console.log(res.data);\n        dsp.closeLoadPercent($('.todolistWrap'));\n\n        if (res.data.statusCode === '200') {\n          $scope.synErrList = res.data.result.list.map(function (item) {\n            item.isChecked = false;\n            return item;\n          });\n          $scope.notRead = $scope.synErrList.filter(function (_ref2) {\n            var isRead = _ref2.isRead;\n            return isRead == 0;\n          }).length;\n          $scope.totalCounts = res.data.result.total;\n          $scope.synErrList.length === 0 ? $scope.isShowPaging = false : $scope.isShowPaging = true;\n          importFun();\n          console.log($scope.synErrList);\n        }\n      }, function () {\n        dsp.closeLoadPercent($('.todolistWrap'));\n      }, {\n        layer: true\n      });\n    }\n\n    $scope.timeFormat = function (timestamp) {\n      var option = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      if (!timestamp) return '';\n      var time = new Date(timestamp);\n\n      function fix(t) {\n        t += '';\n        return t.length === 1 ? '0' + t : t;\n      }\n\n      var year = time.getFullYear();\n      var month = time.getMonth() + 1;\n      var date = time.getDate();\n      var hours = fix(time.getHours());\n      var minutes = fix(time.getMinutes());\n      var seconds = fix(time.getSeconds());\n      var type = option.type;\n      if (!type) return year + '-' + month + '-' + date + ' ' + hours + ':' + minutes + ':' + seconds;\n    }; //全选\n\n\n    $scope.clickAllChecked = function () {\n      $scope.synErrAllChecked = !$scope.synErrAllChecked;\n      $scope.synErrList = $scope.synErrList.map(function (item) {\n        item.isChecked = $scope.synErrAllChecked;\n        return item;\n      });\n    }; //单击checkbox\n\n\n    $scope.clickOneChecked = function (_ref3) {\n      var ID = _ref3.ID;\n      $scope.synErrList = $scope.synErrList.map(function (item) {\n        if (item.ID === ID) item.isChecked = !item.isChecked;\n        return item;\n      });\n      var checkedLen = $scope.synErrList.filter(function (item) {\n        return item.isChecked;\n      }).length;\n      $scope.synErrAllChecked = checkedLen === $scope.synErrList.length;\n    }; //ignore选中订单\n\n\n    $scope.ignoreOrder = function () {\n      var list = $scope.synErrList && $scope.synErrList.filter(function (item) {\n        return item.isChecked;\n      }) || [];\n\n      if (list.length < 1) {\n        layer.msg('Please checked orders');\n      } else {\n        $scope.ignoreIds = list.map(function (_ref4) {\n          var ID = _ref4.ID;\n          return ID;\n        }).join(',');\n        $scope.msgboxShow = true;\n      }\n    };\n    /** 同步失败订单 结束 */\n\n\n    function importFun() {\n      $(\".pagination-demo1\").jqPaginator({\n        totalCounts: $scope.totalCounts || 1,\n        //设置分页的总条目数\n        pageSize: $scope.pageSize - 0,\n        //设置每一页的条目数\n        visiblePages: 5,\n        currentPage: $scope.pageNum * 1,\n        activeClass: 'active',\n        first: '<li class=\"first\"><a class=\"prev\" href=\"javascript:void(0);\">&lt&lt;<\\/a><\\/li>',\n        prev: '<li class=\"prev\"><a class=\"prev\" href=\"javascript:void(0);\">&lt;<\\/a><\\/li>',\n        next: '<li class=\"next\"><a class=\"next\" href=\"javascript:void(0);\">&gt;<\\/a><\\/li>',\n        last: '<li class=\"last\"><a class=\"prev\" href=\"javascript:void(0);\">&gt&gt;<\\/a><\\/li>',\n        page: '<li class=\"page\"><a href=\"javascript:void(0);\">{{page}}<\\/a><\\/li>',\n        onPageChange: function onPageChange(n, type) {\n          // console.log(n)\n          // console.log(type)\n          if (type == 'init') {\n            return;\n          }\n\n          $scope.pageNum = n + '';\n          $scope.zombieList = [];\n          switchAjaxByTodoType(); // $scope.ordersList = [];\n          // ;\n        }\n      });\n    }\n\n    $scope.pagechange = function () {\n      $scope.pageNum = '1';\n      switchAjaxByTodoType();\n    };\n\n    $scope.gotoPage = function () {\n      var pagenum = Number($scope.pageNum);\n      console.log(pagenum);\n      var totalpage = Math.ceil($scope.totalCounts / $scope.pageSize);\n\n      if (pagenum > totalpage) {\n        layer.msg('Error page');\n        $scope.pageNum = '1';\n      } else {\n        switchAjaxByTodoType();\n      }\n    };\n  }]);\n  return app;\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///../src/pages/mycj/todo-list/todo-list.js\n");

/***/ })

}]);